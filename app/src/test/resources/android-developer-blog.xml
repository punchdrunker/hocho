<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><id>tag:blogger.com,1999:blog-6755709643044947179</id><updated>2017-12-27T00:33:04.180-08:00</updated><category term="Featured" /><category term="Google Play" /><category term="Android" /><category term="Develop" /><category term="Android Developer" /><category term="Games" /><category term="archive" /><category term="Announcements" /><category term="Apps" /><category term="Google Play services" /><category term="Android Wear" /><category term="Android Studio" /><category term="Distribute" /><category term="Security" /><category term="Google Services" /><category term="User Interface" /><category term="NDK" /><category term="Android N" /><category term="SDK updates" /><category term="Design" /><category term="Developer Console" /><category term="Google Play game services" /><category term="Developer Preview" /><category term="How-to" /><category term="Android Developer Challenge" /><category term="Google Play Games" /><category term="Android Market" /><category term="GooglePlay" /><category term="android developers" /><category term="Android TV" /><category term="AndroidDevStory" /><category term="Material Design" /><category term="Play Console" /><category term="Tools" /><category term="Android 1.5" /><category term="Game" /><category term="Google I/O" /><category term="Google Play Console" /><category term="Story" /><category term="Android Design" /><category term="App" /><category term="Best Practices" /><category term="developers" /><category term="Android O" /><category term="Marshmallow" /><category term="Optimization" /><category term="Performance" /><category term="Support Library" /><category term="UI" /><category term="Android 1.6" /><category term="Android Auto" /><category term="Google Analytics" /><category term="Udacity" /><category term="wear" /><category term="Android Things" /><category term="developer" /><category term="Android 5.0" /><category term="AndroidO" /><category term="Location" /><category term="appstory" /><category term="engagement" /><category term="Android Instant Apps" /><category term="Google Cloud Messaging" /><category term="Google Cloud Platform" /><category term="Layout" /><category term="Localization" /><category term="Tablets" /><category term="UI toolkit" /><category term="admob" /><category term="analytics" /><category term="developerstory" /><category term="permissions" /><category term="Android M" /><category term="App quality" /><category term="C++" /><category term="Google" /><category term="Google Cast" /><category term="Graphics" /><category term="IO2013" /><category term="IoT" /><category term="Renderscript" /><category term="Testing" /><category term="compatibility" /><category term="notifications" /><category term="‘Google Play" /><category term="Android 2.0" /><category term="App Resources" /><category term="Google Fit" /><category term="Google Play games services" /><category term="London" /><category term="Media and Camera" /><category term="Open source" /><category term="OpenGL ES" /><category term="Quality" /><category term="androidn" /><category term="gamestory" /><category term="io15" /><category term="monetization" /><category term="users" /><category term="API" /><category term="Android 4.2" /><category term="Android 6.0" /><category term="Android Vitals" /><category term="Android for Work" /><category term="AndroidWear" /><category term="App Components" /><category term="Audio" /><category term="Code Day" /><category term="Courses" /><category term="Developer profiles" /><category term="Education" /><category term="GDC" /><category term="Google Drive" /><category term="Google Mobile Ads" /><category term="IO2014" /><category term="In-app Billing" /><category term="Intents" /><category term="Launch" /><category term="Licensing" /><category term="Sample code" /><category term="Samples" /><category term="signing" /><category term="wifi" /><category term="#io17" /><category term="APIs" /><category term="Ads" /><category term="Android 3.0" /><category term="Android 3.2" /><category term="Android 4.4" /><category term="Android SDK" /><category term="Animation" /><category term="App Indexing" /><category term="Authentication" /><category term="Bluetooth" /><category term="Developer Labs" /><category term="Development Tools" /><category term="Early Access" /><category term="Europe" /><category term="Firebase" /><category term="GCM" /><category term="Google Assistant" /><category term="Google Maps" /><category term="Google Play for Work" /><category term="Google client API" /><category term="Google+" /><category term="Input methods" /><category term="Kotlin" /><category term="LiquidFun" /><category term="Maps" /><category term="Maps API" /><category term="MaterialDesign" /><category term="Pixel" /><category term="Privacy" /><category term="Project Treble" /><category term="SDK Tools" /><category term="Subscription" /><category term="Text and Input" /><category term="VR" /><category term="Virtual Reality" /><category term="WebView" /><category term="android oreo" /><category term="apk" /><category term="business" /><category term="competition" /><category term="contest" /><category term="developergamestory" /><category term="events" /><category term="google play for families" /><category term="grow" /><category term="growth" /><category term="mobile vision APIs" /><category term="nearby" /><category term="prizes" /><category term="showcase" /><category term="ubicomp" /><category term="win" /><category term="Action Bar" /><category term="Actions" /><category term="Activity Recognition" /><category term="Android 2.1" /><category term="Android 2.2" /><category term="Android 2.3" /><category term="Android 7.0" /><category term="Android 71" /><category term="Android Developer Phone" /><category term="Android Go" /><category term="Android Pay API" /><category term="Android Studio 3.0" /><category term="Android Wear 2.0" /><category term="Animation and Graphics" /><category term="AppCompat" /><category term="BLE" /><category term="Beta" /><category term="Boston" /><category term="Canary" /><category term="Connectivity" /><category term="Dashboard" /><category term="Daydream" /><category term="Developer Console Store Listing Experiments" /><category term="Efficient Apps" /><category term="Fragments" /><category term="GLSL" /><category term="Global" /><category term="Google Play Billing" /><category term="Google Wallet" /><category term="GoogleAPIClient" /><category term="Guidelines" /><category term="HTTPS" /><category term="I/O2014" /><category term="IME" /><category term="Identity" /><category term="Indie Games" /><category term="Internet of Things" /><category term="JNI" /><category term="Java" /><category term="Java 8" /><category term="LVL" /><category term="LondonEng" /><category term="Memory Management" /><category term="Nougat" /><category term="OpenGL" /><category term="Places" /><category term="Play Store" /><category term="PlayStore" /><category term="Preview" /><category term="Profiling" /><category term="Pure" /><category term="SEA" /><category term="Saatchi" /><category term="SafetyNet" /><category term="Screens" /><category term="Southeast Asia" /><category term="TV" /><category term="TensorFlow" /><category term="Text-to-Speech" /><category term="Treble" /><category term="UX" /><category term="Unity" /><category term="User Support" /><category term="Web" /><category term="Widgets" /><category term="beacons" /><category term="buildingforbillions" /><category term="chrome" /><category term="conversions" /><category term="documentation" /><category term="game design" /><category term="google computer science" /><category term="hackster" /><category term="iOS" /><category term="in-app purchase" /><category term="indie" /><category term="indies" /><category term="infinite deviation: games" /><category term="io2010" /><category term="oreo" /><category term="social impact" /><category term="store listing experiments" /><category term="subscriptions" /><category term="user data" /><category term="watch face API" /><category term="#Android #Android development # advanced Android #learn Android #build Android apps #Udacity" /><category term="#AndroidTV #Google Cast #Udacity" /><category term="#GDC17 #GoogleDeveloperDay #GooglePlay #Games #VR #Daydream #Developers #Android #Google Play" /><category term="#GPA2017 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play" /><category term="#io16" /><category term="'Google Play" /><category term="3d" /><category term="505 Games" /><category term="8.1" /><category term="AIY" /><category term="AIY Projects" /><category term="AMP" /><category term="APK Expansion Files" /><category term="ARPU" /><category term="ATSL" /><category term="About Fun" /><category term="Actions on Google" /><category term="Administration" /><category term="Advanced Android course" /><category term="Advanced Android training" /><category term="Agus Gomez" /><category term="Android 2.3.3" /><category term="Android 4.0" /><category term="Android 4.3" /><category term="Android 5.1" /><category term="Android 7.1" /><category term="Android 8.1" /><category term="Android C++" /><category term="Android Emulator" /><category term="Android Excellence" /><category term="Android IDE" /><category term="Android O Developer Preview" /><category term="Android One" /><category term="Android Pay" /><category term="Android Security Rewards" /><category term="Android Testing Support Library" /><category term="AndroidThings" /><category term="AnswerLab" /><category term="Architecture" /><category term="Architecture Components" /><category term="Assistant" /><category term="Assistant SDK" /><category term="BABBQ" /><category term="Betatesting" /><category term="Billions" /><category term="Budge Studios" /><category term="C" /><category term="Certificates" /><category term="Certification" /><category term="Channels" /><category term="Chromebooks" /><category term="Cloud Speech API" /><category term="Commerce" /><category term="Complications" /><category term="Contacts" /><category term="Content Provider" /><category term="Cool Stuff" /><category term="CultureAlley" /><category term="DP3" /><category term="Debugging" /><category term="Demographics" /><category term="Developer Days" /><category term="DialogFragment" /><category term="Disruptor Beam" /><category term="Doze" /><category term="Driving Do Not Disturb" /><category term="EA" /><category term="Editors’ Choice" /><category term="Electronic Arts" /><category term="Engage" /><category term="Enterprise" /><category term="Fast Pair" /><category term="Finance" /><category term="Fortify" /><category term="Fundamentals" /><category term="GDC17" /><category term="GNSS" /><category term="GPGS" /><category term="GPS" /><category term="Gareth Jones" /><category term="Gboard" /><category term="Gestures" /><category term="Gmail" /><category term="Golf Clash" /><category term="Google APIs" /><category term="Google Apps" /><category term="Google Awareness API" /><category term="Google Now" /><category term="GoogleDeveloperDay" /><category term="Gpfe" /><category term="GridLayout" /><category term="HAL" /><category term="HelloEnglish" /><category term="Holo" /><category term="HttpsURLConnection" /><category term="Hutch" /><category term="Hutch Games" /><category term="Image Processing" /><category term="Indie Contest" /><category term="Indie games contest" /><category term="Indie games developers" /><category term="Indonesia" /><category term="Indonesia Games Contest" /><category term="Instant Apps" /><category term="Inzen studio" /><category term="Issue Tracker" /><category term="Job Scheduler" /><category term="Job Service" /><category term="KNOX" /><category term="Keyboard" /><category term="Klei Entertainment" /><category term="LTV" /><category term="LaMatinale" /><category term="LeMonde" /><category term="Life of a Bug" /><category term="Lollipop" /><category term="MENA" /><category term="Marta Gui" /><category term="Mountain View" /><category term="Multiwindow" /><category term="Munich" /><category term="NBU" /><category term="NFC" /><category term="Niji Games" /><category term="Nix Hydra" /><category term="Now in Arabic" /><category term="OAuth" /><category term="Omnidrone" /><category term="On-Device Machine Learning" /><category term="Onboarding" /><category term="P2P" /><category term="PWA" /><category term="Paul Gouge" /><category term="Photo Sphere" /><category term="Physics" /><category term="Pico" /><category term="Playdemic" /><category term="Playtime 2016" /><category term="Pocket Gems" /><category term="Policy" /><category term="Promo Graphics" /><category term="Public Tracker" /><category term="Quick Search Box" /><category term="RTL" /><category term="Resources" /><category term="Robinhood" /><category term="Safe Browsing" /><category term="Schell Games" /><category term="ScreenCapture" /><category term="Sensors" /><category term="Seriously" /><category term="ShareActionProvider" /><category term="Sharing" /><category term="Shortcuts" /><category term="Skyscanner" /><category term="Social Point" /><category term="Space" /><category term="Space Ape Games" /><category term="Speech Input" /><category term="Stencils" /><category term="Stickers" /><category term="Storage" /><category term="Storytoys" /><category term="Studio" /><category term="Super Evil MegaCorp" /><category term="Survey" /><category term="TAGS: Google Play" /><category term="TLS" /><category term="Tel Aviv" /><category term="Telephony" /><category term="Tips" /><category term="Titan Brawl" /><category term="Touch" /><category term="Translation" /><category term="User Feedback" /><category term="VGames" /><category term="Visibility" /><category term="Voice" /><category term="Voice Kit" /><category term="Wear UI Library" /><category term="Webdriver" /><category term="World Food Day" /><category term="XmlPullParser" /><category term="YouTube" /><category term="accessibility" /><category term="android 8.0" /><category term="android c++ games linux open source release osx serialization windows" /><category term="android extension pack" /><category term="android o apis" /><category term="android sanitizer" /><category term="android wear 1.0" /><category term="android71" /><category term="android81" /><category term="androidoreo" /><category term="app attribution" /><category term="app id" /><category term="app install" /><category term="app updates" /><category term="ar" /><category term="arch" /><category term="arcore" /><category term="attestation" /><category term="augmented reality" /><category term="autofill" /><category term="awareness" /><category term="bar code" /><category term="beacon" /><category term="beta testing" /><category term="betatesting GooglePlayforFamilies" /><category term="big data" /><category term="blackhat" /><category term="bug swatting" /><category term="clang" /><category term="class loading" /><category term="constraintlayout" /><category term="context" /><category term="cross-platform" /><category term="dalvik" /><category term="data storage" /><category term="ddms" /><category term="developer story" /><category term="developerappstory" /><category term="developerstory developerconsole" /><category term="device id" /><category term="eBook" /><category term="face detection" /><category term="families" /><category term="fitness" /><category term="free trial" /><category term="game-as-a-service" /><category term="gapid" /><category term="go edition" /><category term="golf games" /><category term="google play protect" /><category term="googleservices" /><category term="guide" /><category term="http" /><category term="install referrer" /><category term="install track" /><category term="installs" /><category term="io16" /><category term="kernel" /><category term="keys" /><category term="kids app developers" /><category term="kids apps" /><category term="leanback" /><category term="library" /><category term="listing" /><category term="liveops" /><category term="long aspect ratio" /><category term="malware" /><category term="memory" /><category term="messaging api" /><category term="mobile ads" /><category term="mobile search" /><category term="multiplayer" /><category term="network" /><category term="official launch" /><category term="offline" /><category term="ordered broadcast" /><category term="packaging" /><category term="peer group" /><category term="people" /><category term="play billing" /><category term="play billing library" /><category term="playbook app" /><category term="protection" /><category term="publishing" /><category term="ratings" /><category term="recaptcha" /><category term="revenue" /><category term="reviews" /><category term="runtime permissions" /><category term="sandbox" /><category term="sanitizer" /><category term="security infrastructure" /><category term="selinux" /><category term="source code" /><category term="spam" /><category term="spyware" /><category term="storelistingexperime" /><category term="strictmode" /><category term="success stories" /><category term="targeted spyware" /><category term="things" /><category term="threading" /><category term="traceview" /><category term="trial period" /><category term="user experience" /><category term="viewpager" /><category term="vulkan" /><category term="watch faces" /><title type="text">Android Developers Blog</title><subtitle type="html">An Open Handset Alliance Project.</subtitle><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/" /><link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default?start-index=26&amp;max-results=25&amp;redirect=false" /><author><name>Ian Lake</name><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="32" src="//lh6.googleusercontent.com/-OUzGFk65pKc/AAAAAAAAAAI/AAAAAAAAADI/3yDSSNVmQVs/s512-c/photo.jpg" /></author><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><openSearch:totalResults>838</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/blogspot/hsDu" /><feedburner:info uri="blogspot/hsdu" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" />
    <entry>
        <id>tag:blogger.com,1999:blog-6755709643044947179.post-1691310382986647736</id>
        <published>2017-12-22T10:00:00.000-08:00</published>
        <updated>2017-12-22T10:00:00.197-08:00</updated>
        <category scheme="http://www.blogger.com/atom/ns#" term="Android TV" />
        <category scheme="http://www.blogger.com/atom/ns#" term="Develop" />
        <category scheme="http://www.blogger.com/atom/ns#" term="Featured" />
        <title type="text">Phasing out legacy recommendations on Android TV</title>
        <content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Phasing out legacy recommendations on Android TV"&gt;
&lt;meta name="twitter:description" content="At Google I/O 2017, we announced a redesign of the Android TV's home screen. We expanded the recommendation row concept so that each app can have its own row (or multiple rows) of content on the home screen."&gt;
&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-RikbUBpFVUo/Wjwe6_5qNdI/AAAAAAAAE8A/-oxT_LLrYzsToH0Jf2XOjeOAV3DIkUf4ACLcBGAs/s1600/image1.png"&gt;

&lt;em&gt;Posted by Bejamin Baxter, Developer Programs Engineer&lt;/em&gt;

&lt;p&gt;
At Google I/O 2017, we &lt;a
href="https://android-developers.googleblog.com/2017/05/welcome-to-your-new-home-on-android-tv.html"&gt;announced&lt;/a&gt;
a redesign of the Android TV's home screen. We expanded the recommendation row
concept so that each app can have its own row (or multiple rows) of content on
the home screen. Since the release of the new home screen, we have seen
increased adoption of the new recommendation channels for Android Oreo in a wide
variety of apps.
&lt;/p&gt;
&lt;p&gt;
With more and more apps surfacing high-quality recommendations using the new
channels, the &lt;a
href="https://developer.android.com/training/tv/discovery/recommendations-row.html"&gt;legacy
recommendation row&lt;/a&gt; in the new home screen on Android O will be phased out
over the next year.
&lt;/p&gt;
&lt;p&gt;
Currently, when an app creates recommendations with the &lt;a
href="https://developer.android.com/training/tv/discovery/recommendations-row.html#build"&gt;legacy
notification based API&lt;/a&gt; the content is added to a channel for that app. The
channel may already exist if there was recommended content for it when you
upgraded from Android N (or below). If the there is no channel for the app, it
will be automatically generated for you. In either case, the user can't add or
remove programs from the channel, but they can move, hide, and show the channel.
When an app starts to use the new API to add its own channels, the system
removes the auto-generated channel and the app takes over control of the display
of their content.
&lt;/p&gt;
&lt;p&gt;
Over the next year, we will phase out the automatic generation of channels.
Instead of generating multiple channels, one for each app's legacy
recommendations, we will insert one channel for &lt;em&gt;all&lt;/em&gt; legacy
recommendations. This channel will appear at the bottom of the channel list.
Users can move or remove it. When a user upgrades to Android O, the previous
recommendation row from Android N (and below) becomes a channel at the bottom of
the home screen.
&lt;/p&gt;
&lt;div class="phasing21"&gt;&lt;a href="https://1.bp.blogspot.com/-0Z5_lKyS4H8/WjwcJMupE0I/AAAAAAAAE7g/iqcVTKleWxko1iTi-SuF9VRnvmhfjg_-wCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-0Z5_lKyS4H8/WjwcJMupE0I/AAAAAAAAE7g/iqcVTKleWxko1iTi-SuF9VRnvmhfjg_-wCLcBGAs/s1600/image1.png" data-original-width="583" data-original-height="343" style="width: 100%;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
If you have not updated your app to post content to the new channels on the home
screen, take a look at our &lt;a
href="https://developer.android.com/training/tv/discovery/recommendations-channel.html"&gt;documentation&lt;/a&gt;,
&lt;a
href="https://codelabs.developers.google.com/codelabs/tv-channels-programs/index.html"&gt;codelab&lt;/a&gt;,
and &lt;a
href="https://github.com/googlesamples/leanback-homescreen-channels"&gt;sample&lt;/a&gt;
to get started.
&lt;/p&gt;
&lt;p&gt;
We look forward to more and more apps taking advantage of the new changes in the
home screen. We love to hear your feedback, so please visit the &lt;a
href="https://plus.google.com/communities/112881895888889393129"&gt;Android TV
Developer Community on G+&lt;/a&gt; to share your thoughts and ideas.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=F3EPUT54N8U:8v3V0ZhRyao:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=F3EPUT54N8U:8v3V0ZhRyao:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=F3EPUT54N8U:8v3V0ZhRyao:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/F3EPUT54N8U" height="1" width="1" alt=""/&gt;
        </content>
        <link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1691310382986647736" />
        <link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1691310382986647736" />
        <link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/F3EPUT54N8U/phasing-out-legacy-recommendations-on.html" title="Phasing out legacy recommendations on Android TV" />
        <author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-0Z5_lKyS4H8/WjwcJMupE0I/AAAAAAAAE7g/iqcVTKleWxko1iTi-SuF9VRnvmhfjg_-wCLcBGAs/s72-c/image1.png" height="72" width="72" />
        <feedburner:origLink>http://android-developers.googleblog.com/2017/12/phasing-out-legacy-recommendations-on.html</feedburner:origLink>
    </entry>
    <entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-8170118545633607544</id><published>2017-12-20T09:02:00.000-08:00</published><updated>2017-12-20T09:15:39.779-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" /><category scheme="http://www.blogger.com/atom/ns#" term="Android O" /><category scheme="http://www.blogger.com/atom/ns#" term="AndroidO" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Privacy" /><category scheme="http://www.blogger.com/atom/ns#" term="Security" /><title type="text">Double Stuffed Security in Android Oreo</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Double Stuffed Security in Android Oreo"&gt;
&lt;meta name="twitter:description" content="Android Oreo is stuffed full of security enhancements. Over the past few months, we've covered how we've improved the security of the Android platform and its applications."&gt;
&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-kWxCkVN0Th8/WjqaK8q8gQI/AAAAAAAAE64/EZlEjbjemgI836SxTsRrpEWOAX3VBUJVACLcBGAs/s1600/2NqZJYQI.png"&gt;

&lt;em&gt;Posted by Gian G Spicuzza, Android Security team&lt;/em&gt;

&lt;p&gt;
Android Oreo is stuffed full of security enhancements. Over the past few months,
we've covered how we've improved the security of the Android platform and its
applications: from &lt;a
href="https://android-developers.googleblog.com/2017/08/making-it-safer-to-get-apps-on-android-o.html"&gt;making
it safer to get apps&lt;/a&gt;, dropping &lt;a
href="https://android-developers.googleblog.com/2017/04/android-o-to-drop-insecure-tls-version.html"&gt;insecure
network protocols&lt;/a&gt;, providing more &lt;a
href="https://android-developers.googleblog.com/2017/04/changes-to-device-identifiers-in.html"&gt;user
control over identifiers&lt;/a&gt;, &lt;a
href="https://android-developers.googleblog.com/2017/08/hardening-kernel-in-android-oreo.html"&gt;hardening
the kernel&lt;/a&gt;, &lt;a
href="https://android-developers.googleblog.com/2017/07/shut-hal-up.html"&gt;making
Android easier to update&lt;/a&gt;, all the way to &lt;a
href="https://android-developers.googleblog.com/2017/06/2017-android-security-rewards.html"&gt;doubling
the Android Security Rewards payouts&lt;/a&gt;. Now that Oreo is out the door, let's
take a look at all the goodness inside.
&lt;/p&gt;
&lt;h3&gt;Expanding support for hardware security&lt;/h3&gt;
&lt;p&gt;
Android already supports &lt;a
href="https://source.android.com/security/verifiedboot/"&gt;Verified Boot&lt;/a&gt;,
which is designed to prevent devices from booting up with software that has been
tampered with. In Android Oreo, we added a reference implementation for Verified
Boot running with &lt;a
href="https://source.android.com/devices/architecture/treble"&gt;Project
Treble&lt;/a&gt;, called Android Verified Boot 2.0 (AVB). AVB has a couple of cool
features to make updates easier and more secure, such as a common footer format
and rollback protection. Rollback protection is designed to prevent a device to
boot if downgraded to an older OS version, which could be vulnerable to an
exploit. To do this, the devices save the OS version using either special
hardware or by having the Trusted Execution Environment (TEE) sign the data.
Pixel 2 and Pixel 2 XL come with this protection and we recommend all device
manufacturers add this feature to their new devices.
&lt;/p&gt;
&lt;p&gt;
Oreo also includes the new &lt;a
href="https://android-review.googlesource.com/#/c/platform/hardware/interfaces/+/527086/-1..1/oemlock/1.0/IOemLock.hal"&gt;OEM
Lock Hardware Abstraction Layer&lt;/a&gt; (HAL) that gives device manufacturers more
flexibility for how they protect whether a device is locked, unlocked, or
unlockable. For example, the new Pixel phones use this HAL to pass commands to
the bootloader. The bootloader analyzes these commands the next time the device
boots and determines if changes to the locks, which are securely stored in
Replay Protected Memory Block (RPMB), should happen. If your device is stolen,
these safeguards are designed to prevent your device from being reset and to
keep your data secure. This new HAL even supports moving the lock state to
dedicated hardware.
&lt;/p&gt;
&lt;p&gt;
Speaking of hardware, we've invested support in tamper-resistant hardware, such
as the &lt;a
href="https://android-developers.googleblog.com/2017/11/how-pixel-2s-security-module-delivers.html"&gt;security
module&lt;/a&gt; found in every Pixel 2 and Pixel 2 XL. This physical chip prevents
many software and hardware attacks and is also resistant to physical penetration
attacks. The security module prevents deriving the encryption key without the
device's passcode and limits the rate of unlock attempts, which makes many
attacks infeasible due to time restrictions.
&lt;/p&gt;
&lt;p&gt;
While the new Pixel devices have the special security module, all new &lt;a
href="https://www.android.com/gms/"&gt;GMS&lt;/a&gt; devices shipping with Android Oreo
are required to implement &lt;a
href="https://android-developers.googleblog.com/2017/09/keystore-key-attestation.html"&gt;key
attestation&lt;/a&gt;. This provides a mechanism for strongly &lt;a
href="https://source.android.com/security/keystore/attestation#id-attestation"&gt;attesting
IDs&lt;/a&gt; such as hardware identifiers.
&lt;/p&gt;
&lt;p&gt;
We added new features for enterprise-managed devices as well. In work profiles,
encryption keys are now ejected from RAM when the profile is off or when your
company's admin remotely locks the profile. This helps secure enterprise data at
rest.
&lt;/p&gt;
&lt;h3&gt;Platform hardening and process isolation&lt;/h3&gt;
&lt;p&gt;
As part of &lt;a
href="https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html"&gt;Project
Treble&lt;/a&gt;, the Android framework was re-architected to make updates easier and
less costly for device manufacturers. This separation of platform and
vendor-code was also designed to improve security. Following the &lt;a
href="https://en.wikipedia.org/wiki/Principle_of_least_privilege"&gt;principle of
least privilege&lt;/a&gt;, these HALs run in their &lt;a
href="https://android-developers.googleblog.com/2017/07/shut-hal-up.html"&gt;own
sandbox&lt;/a&gt; and only have access to the drivers and permissions that are
absolutely necessary.
&lt;/p&gt;
&lt;p&gt;
Continuing with the &lt;a
href="https://android-developers.googleblog.com/2016/05/hardening-media-stack.html"&gt;media
stack hardening&lt;/a&gt; in Android Nougat, most direct hardware access has been
removed from the media frameworks in Oreo resulting in better isolation.
Furthermore, we've enabled Control Flow Integrity (CFI) across all media
components. Most vulnerabilities today are exploited by subverting the normal
control flow of an application, instead changing them to perform arbitrary
malicious activities with all the privileges of the exploited application. CFI
is a robust security mechanism that disallows arbitrary changes to the original
control flow graph of a compiled binary, making it significantly harder to
perform such attacks.
&lt;/p&gt;
&lt;p&gt;
In addition to these architecture changes and CFI, Android Oreo comes with a
feast of other tasty platform security enhancements:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a
href="https://android-developers.googleblog.com/2017/07/seccomp-filter-in-android-o.html"&gt;Seccomp
filtering&lt;/a&gt;&lt;/strong&gt;: makes some unused syscalls unavailable to apps so that
they can't be exploited by potentially harmful apps.
&lt;li&gt;&lt;strong&gt;&lt;a href="https://lwn.net/Articles/695991/"&gt;Hardened
usercopy&lt;/a&gt;&lt;/strong&gt;: A recent &lt;a
href="https://events.linuxfoundation.org/sites/events/files/slides/Android-%20protecting%20the%20kernel.pdf"&gt;survey
of security bugs&lt;/a&gt; on Android
revealed that invalid or missing bounds checking was seen in approximately 45%
of kernel vulnerabilities. We've backported a bounds checking feature to Android
kernels 3.18 and above, which makes exploitation harder while also helping
developers spot issues and fix bugs in their code.
&lt;li&gt;&lt;strong&gt;Privileged Access Never (PAN) emulation&lt;/strong&gt;: Also backported to
3.18 kernels and above, this feature prohibits the kernel from accessing user
space directly and ensures developers utilize the hardened functions to access
user space.
&lt;li&gt;&lt;strong&gt;Kernel Address Space Layout Randomization (KASLR)&lt;/strong&gt;:
Although Android has supported userspace Address Space Layout Randomization
(ASLR) for years, we've backported KASLR to help mitigate vulnerabilities on
Android kernels 4.4 and newer. KASLR works by randomizing the location where
kernel code is loaded on each boot, making code reuse attacks probabilistic and
therefore more difficult to carry out, especially remotely.&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;App security and device identifier changes&lt;/h3&gt;
&lt;p&gt;
&lt;a href="https://developer.android.com/topic/instant-apps/index.html"&gt;Android
Instant Apps&lt;/a&gt; run in a restricted sandbox which limits permissions and
capabilities such as reading the on-device app list or transmitting cleartext
traffic. Although introduced during the Android Oreo release, Instant Apps
supports devices running &lt;a
href="https://www.android.com/versions/lollipop-5-0/"&gt;Android Lollipop&lt;/a&gt; and
later.
&lt;/p&gt;
&lt;p&gt;
In order to handle untrusted content more safely, we've &lt;a
href="https://android-developers.googleblog.com/2017/06/whats-new-in-webview-security.html"&gt;isolated
WebView&lt;/a&gt; by splitting the rendering engine into a separate process and
running it within an isolated sandbox that restricts its resources. WebView also
supports &lt;a href="https://safebrowsing.google.com/"&gt;Safe Browsing&lt;/a&gt; to protect
against potentially dangerous sites.
&lt;/p&gt;
&lt;p&gt;
Lastly, we've made &lt;a
href="https://android-developers.googleblog.com/2017/04/changes-to-device-identifiers-in.html"&gt;significant
changes to device identifiers&lt;/a&gt; to give users more control, including:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Moving the static &lt;em&gt;Android ID&lt;/em&gt; and &lt;em&gt;Widevine&lt;/em&gt; values to an
app-specific value, which helps limit the use of device-scoped non-resettable
IDs.
&lt;li&gt;In accordance with &lt;a
href="https://tools.ietf.org/html/rfc7844#section-3.7"&gt;IETF RFC 7844&lt;/a&gt;
anonymity profile, &lt;code&gt;net.hostname&lt;/code&gt; is now empty and the DHCP client no
longer sends a hostname.
&lt;li&gt;For apps that require a device ID, we've built a &lt;code&gt;Build.getSerial()
API&lt;/code&gt; and protected it behind a permission.
&lt;li&gt;Alongside security researchers&lt;sup&gt;1&lt;/sup&gt;, we designed a robust MAC address
randomization for Wi-Fi scan traffic in various chipsets firmware.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Android Oreo brings in all of these improvements, and &lt;a
href="https://www.android.com/versions/oreo-8-0/"&gt;many more&lt;/a&gt;. As always, we
appreciate feedback and welcome suggestions for how we can improve Android.
Contact us at security@android.com.
&lt;/p&gt;
&lt;p&gt;
_____________________________________________________________________
&lt;/p&gt;
&lt;p&gt;
1: Glenn Wilkinson and team at Sensepost, UK, Célestin Matte, Mathieu Cunche:
University of Lyon, INSA-Lyon, CITI Lab, Inria Privatics, Mathy Vanhoef, KU
Leuven
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=1BimCrf6G6g:-mdqV2isXAs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=1BimCrf6G6g:-mdqV2isXAs:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=1BimCrf6G6g:-mdqV2isXAs:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/1BimCrf6G6g" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8170118545633607544" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8170118545633607544" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/1BimCrf6G6g/double-stuffed-security-in-android-oreo.html" title="Double Stuffed Security in Android Oreo" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://android-developers.googleblog.com/2017/12/double-stuffed-security-in-android-oreo.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6213090278226044609</id><published>2017-12-19T10:33:00.000-08:00</published><updated>2017-12-21T12:04:14.886-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="android developers" /><category scheme="http://www.blogger.com/atom/ns#" term="app updates" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Services" /><title type="text">Improving app security and performance on Google Play for years to come</title><content type="html">&lt;em&gt;Posted by Edward Cunningham, Product Manager, Android&lt;/em&gt;
&lt;p&gt;
&lt;em&gt;[&lt;strong&gt;Edit&lt;/strong&gt;: Updated post on Dec 21 to clarify that when the
64-bit requirement is introduced in August 2019, 32-bit support is not going
away. Apps that include a 32-bit library just need to have a 64-bit version
too.]&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Google Play powers billions of app installs and updates annually. We
relentlessly focus on security and performance to ensure everyone has a positive
experience discovering and installing apps and games they love. Today we're
giving Android developers a heads-up about three changes designed to support
these goals, as well as explaining the reasons for each change, and how they
will help make Android devices even more secure and performant for the long
term.
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;In the second half of 2018, Play will require that new apps and app updates
target a recent Android API level. This will be required for new apps in
&lt;strong&gt;August 2018&lt;/strong&gt;, and for updates to existing apps in
&lt;strong&gt;November 2018&lt;/strong&gt;. This is to ensure apps are built on the latest
APIs optimized for security and performance.
&lt;li&gt;In &lt;strong&gt;August 2019&lt;/strong&gt;, Play will require that new apps and app
updates with native libraries provide 64-bit versions in addition to their
32-bit versions.
&lt;li&gt;Additionally, in early 2018, Play will start adding a small amount of
security metadata on top of each APK to further verify app authenticity. You do
not need to take any action for this change.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
We deeply appreciate our developer ecosystem, and so hope this long advance
notice is helpful in planning your app releases. We will continue to provide
reminders and share developer resources as key dates approach to help you
prepare.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Target API level requirement from late 2018&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
API behavior changes advance the security and privacy protections of Android –
helping developers secure their apps and protecting people from malware. Here
are a few such changes from recent platform versions:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Implicit intents for bindService() no longer supported (&lt;a
href="https://developer.android.com/about/versions/android-5.0-changes.html#BindService"&gt;Android
5.0&lt;/a&gt;)
&lt;li&gt;Runtime permissions (&lt;a
href="https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html#behavior-runtime-permissions"&gt;Android
6.0&lt;/a&gt;)
&lt;li&gt;User-added CAs not trusted by default for secure connections (&lt;a
href="https://developer.android.com/about/versions/nougat/android-7.0.html#default_trusted_ca"&gt;Android
7.0&lt;/a&gt;)
&lt;li&gt;Apps can't access user accounts without explicit user approval (&lt;a
href="https://developer.android.com/about/versions/oreo/android-8.0-changes.html#aaad"&gt;Android
8.0&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Many of these changes only apply to apps that explicitly declare their support
for new API behaviors, through the &lt;code&gt;&lt;a
href="https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#target"&gt;targetSdkVersion&lt;/a&gt;&lt;/code&gt; 
manifest attribute. For example, only apps with a &lt;code&gt;targetSdkVersion&lt;/code&gt; of 23
(the API level of Android 6.0) or higher give the user full control over what
private data – such as contacts or location – the app can access via runtime
permissions. Similarly, recent releases include user experience improvements
that prevent apps from accidentally overusing resources like battery and memory;
&lt;a
href="https://developer.android.com/about/versions/oreo/background.html"&gt;background
execution limits&lt;/a&gt; is a good example of this type of improvement.
&lt;/p&gt;
&lt;p&gt;
In order to provide users with the best Android experience possible, the Google
Play Console will require that apps target a recent API level:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;August 2018:&lt;/strong&gt; New apps required to target API level 26
(Android 8.0) or higher.
&lt;li&gt;&lt;strong&gt;November 2018:&lt;/strong&gt; Updates to existing apps required to target
API level 26 or higher.
&lt;li&gt;&lt;strong&gt;2019 onwards:&lt;/strong&gt; Each year the &lt;code&gt;targetSdkVersion&lt;/code&gt; requirement
will advance. Within one year following each Android dessert release, new apps
and app updates will need to target the corresponding API level or
higher.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Existing apps that are not receiving updates are unaffected. Developers remain
free to use a &lt;code&gt;&lt;a
href="https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#min"&gt;minSdkVersion&lt;/a&gt;&lt;/code&gt;
of their choice, so there is no change to your ability to build apps for older
Android versions. We encourage developers to provide backwards compatibility as
far as reasonably possible. Future Android versions will also restrict apps that
don't target a recent API level and adversely impact performance or security. We
want to proactively reduce fragmentation in the app ecosystem and ensure apps
are secure and performant while providing developers with a long window and
plenty of notice in order to plan ahead.
&lt;/p&gt;
&lt;p&gt;
This year we released Android Oreo, the most secure and best performing version
of Android yet, and we introduced &lt;a
href="https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html"&gt;Project
Treble&lt;/a&gt; to help the latest releases reach devices faster. Get started
building apps that target &lt;a href="http://d.android.com/o"&gt;Android 8.1 Oreo&lt;/a&gt;
today.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;64-bit support requirement in 2019&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Platform support for 64-bit architectures was introduced in Android 5.0. Today,
over 40% of Android devices coming online have 64-bit support, while still
maintaining 32-bit compatibility. For apps that use native libraries, 64-bit
code typically offers significantly better performance, with additional
registers and new instructions.
&lt;/p&gt;
&lt;p&gt;
In anticipation of future Android devices that support 64-bit code only, the
Play Console will require that new apps and app updates with native libraries
provide 64-bit versions in addition to their 32-bit versions. This can be within
a single APK or as one of the &lt;a href="https://developer.android.com/google/play/publishing/multiple-apks.html"&gt;multiple APKs&lt;/a&gt; published.
&lt;/p&gt;
&lt;p&gt;
We are not removing 32-bit support. Google Play will continue to support 32-bit
apps and devices. Apps that do not include native code are unaffected.
&lt;/p&gt;
&lt;p&gt;
This change will come into effect in August 2019. We're providing advance notice
today to allow plenty of time for developers who don't yet support 64-bit to
plan the transition. Stay tuned for a future post in which we'll take an
in-depth look at the performance benefits of 64-bit native libraries on Android,
and check out the &lt;a
href="https://developer.android.com/ndk/guides/arch.html"&gt;CPUs and
Architectures&lt;/a&gt; guide of the NDK for more info.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Security metadata in early 2018&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Next year we'll begin adding a small amount of security metadata on top of each
APK to verify that it was officially distributed by Google Play. Often when you
buy a physical product, you'll find an official label or a badge which signifies
the product's authenticity. The metadata we're adding to APKs is like a Play
badge of authenticity for your Android app.
&lt;/p&gt;
&lt;p&gt;
No action is needed by developers or users. We'll adjust Play's maximum APK size
to take into account the small metadata addition, which is inserted into the &lt;a
href="https://source.android.com/security/apksigning/v2"&gt;APK Signing Block&lt;/a&gt;
and does not alter the functionality of your app. In addition to enhancing the
integrity of Play's mobile app ecosystem, this metadata will enable new
distribution opportunities for developers in the future and help more people
keep their apps up to date.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Looking ahead&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
2017 has been a fantastic year for developers who have seen growth and success
on Google Play. We've been hard at work on features (including those announced
at &lt;a
href="https://android-developers.googleblog.com/2017/05/whats-new-in-google-play-at-io-2017.html"&gt;I/O
2017&lt;/a&gt; and at &lt;a
href="https://android-developers.googleblog.com/2017/10/playtime-2017-find-success-on-google.html"&gt;Playtime&lt;/a&gt;)
to help you improve your app quality and business performance. With these
features and the upcoming updates, we hope to see the Android and Play ecosystem
continue to thrive in 2018 and beyond.
&lt;/p&gt;
&lt;p&gt;
 How useful did you find this blogpost?
&lt;/p&gt;
&lt;center&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;amp;entry.2056663615&amp;amp;entry.646747778=appupdates-12/17" style="color:gold;" &gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;amp;entry.2056663615&amp;amp;entry.646747778=appupdates-12/17" style="color:gold;" &gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;amp;entry.2056663615&amp;amp;entry.646747778=appupdates-12/17" style="color:gold;" &gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;amp;entry.2056663615&amp;amp;entry.646747778=appupdates-12/17" style="color:gold;" &gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;amp;entry.2056663615&amp;amp;entry.646747778=appupdates-12/17" style="color:gold;" &gt;★&lt;/a&gt; &lt;/center&gt;

&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=x88NK2bHglg:mgACQ888ih0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=x88NK2bHglg:mgACQ888ih0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=x88NK2bHglg:mgACQ888ih0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/x88NK2bHglg" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6213090278226044609" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6213090278226044609" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/x88NK2bHglg/improving-app-security-and-performance.html" title="Improving app security and performance on Google Play for years to come" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-8406581067987969446</id><published>2017-12-18T10:13:00.000-08:00</published><updated>2017-12-18T10:27:12.113-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Emulator" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" /><title type="text"> Quick Boot &amp; the Top Features in the Android Emulator</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Quick Boot &amp; the Top Features in the Android Emulator"&gt;
&lt;meta name="twitter:description" content="Today, we are excited to announce Quick Boot for the Android Emulator. With
Quick Boot, you can launch the Android Emulator in under 6 seconds."&gt;
&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-vR9KU5AIfRI/WjfzpyInlmI/AAAAAAAAE6Q/7fiLLaGkIrYPVM1ylpSqPk5QszzEnKfswCLcBGAs/s1600/image5.png"&gt;

&lt;em&gt;Posted by &lt;a href="https://www.google.com/+JamalEason"&gt;Jamal Eason&lt;/a&gt;, Product Manager, Android&lt;/em&gt;

&lt;div class="blgimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-KKfHGyztPBY/WjfzJPsk1gI/AAAAAAAAE6E/zuXucIqvQ04lmZUo602BTdXSAu61vkKoACLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-KKfHGyztPBY/WjfzJPsk1gI/AAAAAAAAE6E/zuXucIqvQ04lmZUo602BTdXSAu61vkKoACLcBGAs/s1600/image3.png" data-original-width="250" data-original-height="225" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
Today, we are excited to announce Quick Boot for the Android Emulator. With
Quick Boot, you can launch the Android Emulator in under 6 seconds. Quick Boot
works by snapshotting an emulator session so you can reload in seconds. Quick
Boot was first released with Android Studio 3.0 in the canary update channel and
we are excited to release the feature as a stable update today.
&lt;/p&gt;
&lt;p&gt;
In addition to this new feature, we also wanted to highlight some of the top
features from recent releases. Since the complete revamp of the Android Emulator
&lt;a
href="https://android-developers.googleblog.com/2015/12/android-studio-20-preview-android.html"&gt;two
years ago&lt;/a&gt;, we continue to focus on improving speed, stability and adding a
rich set of features that accelerate your app development and testing. With all
the recent changes, it is definitely worth updating to the latest version of the
Android Emulator to use it today.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;Top 5 Features &lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Quick Boot&lt;/strong&gt; - Released as a stable feature today, Quick Boot
allows you to resume your Android Emulator session in under 6 seconds. The first
time you start an Android Virtual Device (AVD) with the Android Emulator, it
must perform a cold boot (just like powering on a device), but subsequent starts
are fast and the system is restored to the state at which you closed the
emulator last (similar to waking a device). We accomplished this by completely
re-engineering the legacy emulator snapshot architecture to work with virtual
sensors and GPU acceleration. No additional setup is required because Quick Boot
is enabled by default starting with Android Emulator v27.0.2.&lt;/li&gt;&lt;/ul&gt;

&lt;div class="blgimg2"&gt;&lt;a href="https://4.bp.blogspot.com/-TKy0vJfZ5vA/WjfzdkppCEI/AAAAAAAAE6I/Zkv4O_k_Z9wq0cdZJ4cv6m0XTYCjmVHtQCLcBGAs/s1600/image2.gif" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-TKy0vJfZ5vA/WjfzdkppCEI/AAAAAAAAE6I/Zkv4O_k_Z9wq0cdZJ4cv6m0XTYCjmVHtQCLcBGAs/s1600/image2.gif" data-original-width="1124" data-original-height="847" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;center&gt;&lt;em&gt;Quick Boot in the Android Emulator&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android CTS Compatibility &lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;With each
release of the Android SDK, we ensure that the Android Emulator is ready for
your app development needs, from testing backwards compatibility with Android
KitKat to integrating the latest APIs of the developer preview. To increase
product quality and reliability of emulator system images, we now qualify final
Android System Image builds from Android Nougat (API 24) and higher against the
&lt;a href="https://source.android.com/compatibility/"&gt;Android Compatibility Test
Suite&lt;/a&gt; (CTS)—the same testing suite that official Android physical devices
must pass.   &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Google Play Support &lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;We know that many
app developers use Google Play Services, and it can be difficult to keep the
service up to date in the Android Emulator system images. To solve this problem,
we now offer versions of Android System Images that include the Play Store app.
The Google Play images are available starting with Android Nougat (API 24). With
these new emulator images, you can update Google Play Services via the Play
Store app in your emulator just as you would on a physical Android device. Plus,
you can now test end-to-end install, update, and purchase flows with the Google
Play Store. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Performance Improvements &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;Making the
emulator fast and performant is an on-going goal for our team. We continuously
look at the performance impact of running the emulator on your development
machine, especially RAM usage. With the latest versions of the Android Emulator,
we now allocate RAM on demand, instead of allocating and pinning the memory to
the max RAM size defined in your AVD.  We do this by tapping into the native
hypervisors for Linux (KVM) and macOS&lt;sup&gt;®&lt;/sup&gt; (Hypervisor.Framework), and an
enhanced Intel&lt;sup&gt;®&lt;/sup&gt; HAXM (v6.2.1 and higher) for Microsoft&lt;sup&gt;®&lt;/sup&gt;
Windows&lt;sup&gt;®&lt;/sup&gt;, which uses the new on-demand memory allocation.&lt;/li&gt;
&lt;p&gt;
    Additionally, over the last several releases, we have improved CPU and I/O
performance while enhancing GPU performance, including OpenGL ES 3.0 support.
Looking at a common task such as ADB push highlights the improvements in the
Android CPU and I/O pipelines:
&lt;/p&gt;
&lt;div class="blgimg3"&gt;&lt;a href="https://4.bp.blogspot.com/-vR9KU5AIfRI/WjfzpyInlmI/AAAAAAAAE6Q/7fiLLaGkIrYPVM1ylpSqPk5QszzEnKfswCLcBGAs/s1600/image5.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-vR9KU5AIfRI/WjfzpyInlmI/AAAAAAAAE6Q/7fiLLaGkIrYPVM1ylpSqPk5QszzEnKfswCLcBGAs/s1600/image5.png" data-original-width="1600" data-original-height="989" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;center&gt;&lt;em&gt;ADB Push Speed Comparison with Android Emulator&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;
    For GPU performance, we created a sample &lt;a
href="https://github.com/google/gpu-emulation-stress-test"&gt;GPU emulation stress
test app&lt;/a&gt; to gauge improvements over time. We found that the latest emulator
can render higher frame rates than before, and it is one of the few emulators
that can render OpenGL ES 3.0 accurately per the Android specification.
&lt;/p&gt;&lt;/ul&gt;
&lt;div class="blgimg4"&gt;&lt;a href="https://4.bp.blogspot.com/-bgYW6_GU8bY/Wjfz4zv_OAI/AAAAAAAAE6U/ECTtrleCUSs-dksSBIJ5T62-ymx9TmDbQCLcBGAs/s1600/image1.gif" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-bgYW6_GU8bY/Wjfz4zv_OAI/AAAAAAAAE6U/ECTtrleCUSs-dksSBIJ5T62-ymx9TmDbQCLcBGAs/s1600/image1.gif" data-original-width="986" data-original-height="535" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;center&gt;&lt;em&gt;GPU Emulation Stress Test - Android App&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;

&lt;div class="blgimg5"&gt;&lt;a href="https://4.bp.blogspot.com/-gOcq-URxxTM/WjgIWLtf20I/AAAAAAAAE6o/E2nhpU_hFcQcC2qxxOQHK3QVOawhLgY6ACLcBGAs/s1600/gpu_emulator_stress_test_chart.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-gOcq-URxxTM/WjgIWLtf20I/AAAAAAAAE6o/E2nhpU_hFcQcC2qxxOQHK3QVOawhLgY6ACLcBGAs/s1600/gpu_emulator_stress_test_chart.png" data-original-width="1216" data-original-height="752" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;center&gt;&lt;em&gt;GPU Emulation Stress Test with Android Emulator&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;



&lt;p&gt;
&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;More Features &lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
In addition to these major features, there are a whole host of additional
features that we have added to the Android Emulator over the last year that you
may not be aware of:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Wi-Fi support&lt;/strong&gt; - Starting with API 24 system images, you can
create an AVD that both connects to a virtual cellular network and a virtual
Wi-Fi Access Point.
&lt;li&gt;&lt;strong&gt;Google Cast support &lt;/strong&gt;- When using a Google Play system
image, you can cast screen and audio content to Chromecast devices on the same
Wi-Fi network.
&lt;li&gt;&lt;strong&gt;Drag and drop APKs &amp; files&lt;/strong&gt; - Simply drag an APK onto the
Android Emulator window to trigger an app install. Also you can drag any other
data file and find it in the /Downloads folder in your Android Virtual Device.
&lt;li&gt;&lt;strong&gt;Host copy &amp; paste &lt;/strong&gt;- You can copy &amp; paste text between the
Android Emulator and your development machine.
&lt;li&gt;&lt;strong&gt;Virtual 2-finger pinch &amp; zoom &lt;/strong&gt;- When interacting with apps
like Google Maps, hold down the Ctrl Key (on Microsoft&lt;sup&gt;®&lt;/sup&gt;
Windows&lt;sup&gt;®&lt;/sup&gt; or Linux) or ⌘ (on macOS&lt;sup&gt;®&lt;/sup&gt; ) , and a finger
overlay appears on screen to aid with pinch &amp; zoom actions.
&lt;li&gt;&lt;strong&gt;GPS location &lt;/strong&gt;- Manually select a GPS point or set of GPS
points under the Location tab of the Android Emulator.
&lt;li&gt;&lt;strong&gt;Virtual sensors&lt;/strong&gt; - There is a dedicated page in the extended
controls panel that has supported sensors in the Android Emulator including
acceleration, rotation, proximity and many more.
&lt;li&gt;&lt;strong&gt;WebCam support &lt;/strong&gt;-  You can use a webcam or your laptop
built-in webcam as a virtual camera in the AVD. Validate your AVD camera
settings in the Advanced Settings page in the AVD Manager.
&lt;li&gt;&lt;strong&gt;Host machine keyboard&lt;/strong&gt; - You can use your real keyboard to
enter text into the Android Virtual Device.
&lt;li&gt;&lt;strong&gt;Virtual SMS and phone calls&lt;/strong&gt; - In the extended controls
panel, you can trigger a virtual SMS or phone call to test apps with telephony
dependencies.
&lt;li&gt;&lt;strong&gt;Screen zooming&lt;/strong&gt; - On the main toolbar, click on the magnify
glass icon to enter zoom mode, and then select a region of the screen you want
to inspect.
&lt;li&gt;&lt;strong&gt;Window resizing&lt;/strong&gt; - Simply drag a corner of the Android
Emulator window to change to the desired size.
&lt;li&gt;&lt;strong&gt;Network proxy support&lt;/strong&gt; - Add a custom HTTP proxy for your
Android Emulator session by going to the Settings page under the Proxy tab.
&lt;li&gt;&lt;strong&gt;Bug reporting &lt;/strong&gt; - You can quickly generate a bug report for
your app by using the Bug Report section in the extended controls panel to share
with your team or to send feedback to Google. &lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Learn more about the Android Emulator in the &lt;a
href="https://developer.android.com/studio/run/emulator.html"&gt;Emulator
documentation&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;span style="text-decoration:underline;"&gt;Getting Started
&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
All of these features and improvements are available to download and use now
with Android Emulator v27.0.2+, which you can get via the SDK Manager in Android
Studio. For a fast experience, we recommend creating and running the x86 version
of emulator system images, with the latest Android Emulator, Intel®  HAXM (if
applicable) and graphics drivers installed.
&lt;/p&gt;
&lt;p&gt;
We appreciate any feedback on things you like, issues or features you would like
to see. If you find a bug, issue, or have a feature request feel free to &lt;a
href="https://developer.android.com/studio/report-bugs.html#emulator-bugs"&gt;file
an issue&lt;/a&gt;. We are definitely not done, but we hope you are excited about the
improvements so far.
&lt;/p&gt;







&lt;style&gt;

.blgimg1 img{
width: 41%;
padding: 10px 0 0 0;
margin: 0;
border: 0;
float: right;
}

.blgimg2 img{
width: 100%;
padding: 10px 0 0 0;
margin: 0;
border: 0;

}

.blgimg3 img{
width: 100%;
padding: 10px 0 0 0;
margin: 0;
border: 0;

}

.blgimg4 img{
width: 100%;
padding: 10px 0 0 0;
margin: 0;
border: 0;

}

.blgimg5 img{
width: 100%;
padding: 10px 0 0 0;
margin: 0;
border: 0;

}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=X24y-xXygnM:VZVySh5vc7o:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=X24y-xXygnM:VZVySh5vc7o:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=X24y-xXygnM:VZVySh5vc7o:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/X24y-xXygnM" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8406581067987969446" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8406581067987969446" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/X24y-xXygnM/quick-boot-top-features-in-android.html" title=" Quick Boot &amp; the Top Features in the Android Emulator" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-KKfHGyztPBY/WjfzJPsk1gI/AAAAAAAAE6E/zuXucIqvQ04lmZUo602BTdXSAu61vkKoACLcBGAs/s72-c/image3.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/12/quick-boot-top-features-in-android.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1116848608088096155</id><published>2017-12-14T10:00:00.000-08:00</published><updated>2017-12-14T10:00:06.110-08:00</updated><title type="text">LoWPAN on Android Things</title><content type="html">
&lt;em&gt;Posted by &lt;a href="https://google.com/+DaveSmithDev"&gt;Dave Smith&lt;/a&gt;,
Developer Advocate for IoT&lt;/em&gt;

&lt;div class="blgimg1"&gt;&lt;a href="https://3.bp.blogspot.com/-xk8zXgFxxeo/WjFwciIa4eI/AAAAAAAAE5k/F33NVCunAeoFhQL1VIxaU6-r_MhHyiLpwCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-xk8zXgFxxeo/WjFwciIa4eI/AAAAAAAAE5k/F33NVCunAeoFhQL1VIxaU6-r_MhHyiLpwCLcBGAs/s1600/image1.png" data-original-width="1229" data-original-height="1600" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
Creating robust connections between IoT devices can be difficult. WiFi and
Bluetooth are ubiquitous and work well in many scenarios, but suffer limitations
when power is constrained or large numbers of devices are required on a single
network. In response to this, new communications technologies have arisen to
address the power and scalability requirements for IoT.
&lt;/p&gt;
&lt;p&gt;
Low-power Wireless Personal Area Network (LoWPAN) technologies are specifically
designed for peer-to-peer usage on constrained battery-powered devices. Devices
on the same LoWPAN can communicate with each other using familiar IP networking,
allowing developers to use standard application protocols like HTTP and CoAP.
The specific LoWPAN technology that we are most excited about is &lt;a
href="https://www.threadgroup.org/What-is-Thread/Overview"&gt;Thread&lt;/a&gt;: a secure,
fault-tolerant, low-power mesh-networking technology that is quickly becoming an
industry standard.
&lt;/p&gt;
&lt;p&gt;
Today we are announcing API support for configuring and managing LoWPAN as a
part of Android Things Developer Preview 6.1, including first-class networking
support for Thread. By adding an 802.15.4 radio module to one of our &lt;a
href="https://developer.android.com/things/hardware/index.html"&gt;developer
kits&lt;/a&gt;, Android Things devices can communicate directly with other peer
devices on a Thread network. These types of low-power connectivity solutions
enable Android Things devices to perform &lt;a
href="https://en.wikipedia.org/wiki/Edge_computing"&gt;edge computing&lt;/a&gt; tasks,
aggregating data locally from nearby devices to make critical decisions without
a constant connection to cloud services. See the LoWPAN &lt;a
href="https://developer.android.com/things/sdk/apis/lowpan.html"&gt;API guide&lt;/a&gt;
for more details on building apps to create and join local mesh networks.
&lt;/p&gt;
&lt;h3&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;
&lt;a href="http://openthread.io/"&gt;OpenThread&lt;/a&gt; makes getting started with LoWPAN
on Android Things easy. Choose a supported radio platform, such as the &lt;a
href="https://openthread.io/platforms/nrf52840"&gt;Nordic nRF52840&lt;/a&gt;, and
download &lt;a href="https://openthread.io/guides/ncp/firmware"&gt;pre-built
firmware&lt;/a&gt; to enable it as a Network Co-Processor (NCP). Integrate the radio
into Android Things using the &lt;a
href="https://github.com/androidthings/contrib-drivers/tree/master/lowpan"&gt;LoWPAN
NCP user driver&lt;/a&gt;. You can also expand support to other radio hardware by
building your own user drivers. See the LoWPAN &lt;a
href="https://developer.android.com/things/sdk/drivers/lowpan.html"&gt;user driver
API guide&lt;/a&gt; for more details.
&lt;/p&gt;
&lt;p&gt;
To get started with DP6.1, use the &lt;a
href="https://partner.android.com/things/console"&gt;Android Things Console&lt;/a&gt; to
download system images and flash existing devices. Then download the &lt;a href="
https://github.com/androidthings/sample-lowpan"&gt;LoWPAN sample app&lt;/a&gt; to try it
out for yourself! LoWPAN isn't the only exciting thing happening in the latest
release. See the &lt;a
href="https://developer.android.com/things/preview/releases.html#preview-6-1"&gt;release
notes&lt;/a&gt; for the full set of fixes and updates included in DP6.1.
&lt;/p&gt;
&lt;h3&gt;Feedback&lt;/h3&gt;
&lt;p&gt;
Please send us your feedback by filing &lt;a
href="https://issuetracker.google.com/issues/new?component=192720&amp;template=847005"&gt;bug
reports&lt;/a&gt; and &lt;a
href="https://issuetracker.google.com/issues/new?component=192720&amp;template=848805"&gt;feature
requests&lt;/a&gt;, as well as asking any questions on &lt;a
href="https://stackoverflow.com/questions/tagged/android-things"&gt;Stack
Overflow&lt;/a&gt;. You can also join &lt;a href="https://g.co/iotdev"&gt;Google's IoT
Developers Community&lt;/a&gt; on Google+, a great resource to get updates and discuss
ideas. Also, we have our new &lt;a href="https://hackster.io/google"&gt;hackster.io
community&lt;/a&gt;, where everyone can share the amazing projects they have built. We
look forward to seeing what you build with Android Things!
&lt;/p&gt;
&lt;style&gt;

.blgimg1 img{
width: 41%;
padding: 10px 0 0 0;
margin: 0;
border: 0;
float: right;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=eOOhE9yJcQw:hwJBxRI_irg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=eOOhE9yJcQw:hwJBxRI_irg:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=eOOhE9yJcQw:hwJBxRI_irg:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/eOOhE9yJcQw" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1116848608088096155" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1116848608088096155" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/eOOhE9yJcQw/lowpan-on-android-things.html" title="LoWPAN on Android Things" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-xk8zXgFxxeo/WjFwciIa4eI/AAAAAAAAE5k/F33NVCunAeoFhQL1VIxaU6-r_MhHyiLpwCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/12/lowpan-on-android-things.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-5828199416518563618</id><published>2017-12-13T09:03:00.001-08:00</published><updated>2017-12-18T10:12:56.153-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="3d" /><category scheme="http://www.blogger.com/atom/ns#" term="gapid" /><category scheme="http://www.blogger.com/atom/ns#" term="Virtual Reality" /><category scheme="http://www.blogger.com/atom/ns#" term="VR" /><title type="text">Diagnose and understand your app's GPU behavior with GAPID</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Diagnose and understand your app's GPU behavior with GAPID"&gt;
&lt;meta name="twitter:description" content="Developing for 3D is complicated. Whether you're using a native graphics API or
enlisting the help of your favorite game engine, there are thousands of graphics
commands that have to come together perfectly to produce beautiful 3D images on
your phone, desktop or VR headsets."&gt;
&lt;meta name="twitter:image" content="https://3.bp.blogspot.com/-ut-Ed4OeCHI/WjCAvs_aWdI/AAAAAAAAE3o/N56-WPhSNm8ONeCvWHkMWSEYPfysHzOpACLcBGAs/s1600/image2.gif"&gt;

&lt;em&gt;Posted by Andrew Woloszyn, Software Engineer&lt;/em&gt;

&lt;p&gt;
Developing for 3D is complicated. Whether you're using a native graphics API or
enlisting the help of your favorite game engine, there are thousands of graphics
commands that have to come together perfectly to produce beautiful 3D images on
your phone, desktop or VR headsets.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://developers.google.com/vr/tools/gapid"&gt;GAPID (Graphics API
Debugger)&lt;/a&gt; is a new tool that helps developers diagnose rendering and
performance issues with their applications. With GAPID, you can capture a trace
of your application and step through each graphics command one-by-one. This lets
you visualize how your final image is built and isolate problematic calls, so
you spend less time debugging through trial-and-error.
&lt;/p&gt;
&lt;p&gt;
GAPID supports OpenGL ES on Android, and Vulkan on Android, Windows and Linux.
&lt;/p&gt;

&lt;div class="blgimg"&gt;
&lt;a href="https://3.bp.blogspot.com/-ut-Ed4OeCHI/WjCAvs_aWdI/AAAAAAAAE3o/N56-WPhSNm8ONeCvWHkMWSEYPfysHzOpACLcBGAs/s1600/image2.gif" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-ut-Ed4OeCHI/WjCAvs_aWdI/AAAAAAAAE3o/N56-WPhSNm8ONeCvWHkMWSEYPfysHzOpACLcBGAs/s1600/image2.gif" data-original-width="1080" data-original-height="675" /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div class="blgcptn"&gt;
Debugging in action, one draw call at a time
&lt;/div&gt;

&lt;p&gt;
GAPID not only enables you to diagnose issues with your rendering commands, but
also acts as a tool to run quick experiments and see immediately how these
changes would affect the presented frame.
&lt;/p&gt;
&lt;p&gt;
Here are a few examples where GAPID can help you isolate and fix issues with
your application:
&lt;/p&gt;
&lt;h3&gt;What's the GPU doing?&lt;/h3&gt;

&lt;div class="blgimg"&gt;
&lt;a href="https://4.bp.blogspot.com/-u1zx8IJeo3Q/WjCAKWyxWNI/AAAAAAAAE3c/-nL6OS90cUU8FpFQev57j9PzVj7FvQEWQCLcBGAs/s1600/image1.gif" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-u1zx8IJeo3Q/WjCAKWyxWNI/AAAAAAAAE3c/-nL6OS90cUU8FpFQev57j9PzVj7FvQEWQCLcBGAs/s1600/image1.gif" data-original-width="1080" data-original-height="675" /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div class="blgcptn"&gt;
Why isn't my text appearing?!
&lt;/div&gt;

&lt;p&gt;
Working with a graphics API can be frustrating when you get an unexpected
result, whether it's a blank screen, an upside-down triangle, or a missing mesh.
As an offline debugger, GAPID lets you take a trace of these applications, and
then inspect the calls afterwards. You can track down exactly which command
produced the incorrect result by looking at the framebuffer, and inspect the
state at that point to help you diagnose the issue.
&lt;/p&gt;
&lt;h3&gt;What happens if I do X?&lt;/h3&gt;

&lt;div class="blgimg"&gt;
&lt;a href="https://2.bp.blogspot.com/-o6ZkArxfVjE/WjCAerAsozI/AAAAAAAAE3k/xIbFTI30ai46zkCQudrQUaTfs8SDKrYmgCLcBGAs/s1600/image3.gif" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-o6ZkArxfVjE/WjCAerAsozI/AAAAAAAAE3k/xIbFTI30ai46zkCQudrQUaTfs8SDKrYmgCLcBGAs/s1600/image3.gif" data-original-width="1080" data-original-height="675" /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div class="blgcptn"&gt;
Using GAPID to edit shader code
&lt;/div&gt;

&lt;p&gt;
Even when a program is working as expected, sometimes you want to experiment.
GAPID allows you to modify API calls and shaders at will, so you can test things
like:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;What if I used a different texture on this object?
&lt;li&gt;What if I changed the calculation of bloom in this shader?&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
With GAPID, you can now iterate on the look and feel of your app without having
to recompile your application or rebuild your assets.
&lt;/p&gt;
&lt;p&gt;
Whether you're building a stunning new desktop game with Vulkan or a beautifully
immersive VR experience on Android, we hope that GAPID will save you both time
and frustration and help you get the most out of your GPU. To get started with
GAPID and see just how powerful it is, &lt;a
href="https://github.com/google/gapid/releases"&gt;download it&lt;/a&gt;, take your
favorite application, and &lt;a
href="https://google.github.io/gapid/tutorials/capturetrace"&gt;capture a
trace&lt;/a&gt;!
&lt;/p&gt;

&lt;style&gt;

.blgimg img{
width: 100%;
padding: 10px 0 0 0;
margin: 0;
border: 0;
}

.blgcptn {
padding: 5px 0 10px 0;
margin: 0;
border: 0;
font-style: italic;
text-align: center;
font-size: 80%;
}

&lt;/style&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O5h8QAFrqPU:UMspmb0w4Ag:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O5h8QAFrqPU:UMspmb0w4Ag:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=O5h8QAFrqPU:UMspmb0w4Ag:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/O5h8QAFrqPU" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5828199416518563618" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5828199416518563618" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/O5h8QAFrqPU/diagnose-and-understand-your-apps-gpu_13.html" title="Diagnose and understand your app's GPU behavior with GAPID" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-ut-Ed4OeCHI/WjCAvs_aWdI/AAAAAAAAE3o/N56-WPhSNm8ONeCvWHkMWSEYPfysHzOpACLcBGAs/s72-c/image2.gif" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/12/diagnose-and-understand-your-apps-gpu_13.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6323303361865867985</id><published>2017-12-05T09:59:00.001-08:00</published><updated>2017-12-20T16:46:55.428-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android 8.1" /><category scheme="http://www.blogger.com/atom/ns#" term="Android O" /><category scheme="http://www.blogger.com/atom/ns#" term="android oreo" /><category scheme="http://www.blogger.com/atom/ns#" term="Billions" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="go edition" /><title type="text">Welcoming Android 8.1 Oreo and Android Oreo (Go edition)</title><content type="html">&lt;style&gt;

.blgimg1 img {
width: 40% !important;
border: 0 !important;
margin: 0 !important;
padding:10px 0 10px 0 !important;
float: right !important;


}
&lt;/style&gt;

&lt;div class="blgimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-sLGydlfK8AM/WibSkBxHOlI/AAAAAAAAE20/hewUiVpk-uYb8YvRjbcGXJzrNh-twjH5gCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-sLGydlfK8AM/WibSkBxHOlI/AAAAAAAAE20/hewUiVpk-uYb8YvRjbcGXJzrNh-twjH5gCLcBGAs/s1600/image1.png" data-original-width="1056" data-original-height="1600" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt;
&lt;p&gt;
At &lt;a
href="https://www.blog.google/products/android/introducing-android-oreo-go-edition"&gt;Google
for India&lt;/a&gt; this Monday, we announced the final release of Android 8.1 Oreo.
Android 8.1 Oreo is another exciting step toward bringing to life our vision of
an AI-first mobile platform, for everyone, everywhere.
&lt;/p&gt;
&lt;p&gt;
Android 8.1 introduces  support for our new &lt;strong&gt;&lt;a
href="https://www.android.com/versions/oreo-8-0/go-edition/"&gt;Android Oreo (Go edition)&lt;/a&gt;&lt;/strong&gt; software experience for entry-level
devices. Android Oreo (Go edition) brings the best of Android to the rapidly
growing market for low-memory devices around the world, including your apps and
games.
&lt;/p&gt;
&lt;p&gt;
Android 8.1 also introduces the &lt;strong&gt;&lt;a
href="https://developer.android.com/ndk/guides/neuralnetworks/index.html"&gt;Neural
Networks API&lt;/a&gt;&lt;/strong&gt;, a hardware accelerated machine learning runtime to
support ML capabilities in your apps. On supported devices, the Neural Networks
API enables fast and efficient inference for a range of key use cases, starting
with vision-based object classification.
&lt;/p&gt;
&lt;p&gt;
You can get started with Android 8.1 Oreo (API level 27) today. We're pushing
sources to &lt;a href="https://source.android.com/"&gt;Android Open Source Project&lt;/a&gt;
now, and rolling out the update to supported Pixel and Nexus devices over the
next week. We're also working with our device maker partners to bring Android
8.1 to more devices, including Android Oreo (Go edition) devices, in the months
ahead.
&lt;/p&gt;
&lt;h3&gt;Android Oreo (Go edition)&lt;/h3&gt;
&lt;p&gt;
As &lt;a
href="https://www.youtube.com/watch?v=Y2VF8tmLFHw&amp;t=1h29m36s"&gt;announced&lt;/a&gt; at
Google I/O 2017, the "Android Go" project is our initiative to optimize the
Android experience for billions of people coming online around the world.
Starting with Android 8.1, we're making Android a great platform for entry-level
devices in the &lt;strong&gt;Android Oreo (Go edition)&lt;/strong&gt; configuration:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Memory optimizations&lt;/strong&gt; -- Improved memory usage across the
platform to ensure that apps can run efficiently on devices with 1GB or less
RAM.
&lt;li&gt;&lt;strong&gt;Flexible targeting options &lt;/strong&gt;-- New &lt;a
href="https://developer.android.com/reference/android/content/pm/PackageManager.html#FEATURE_RAM_LOW"&gt;hardware
feature constants&lt;/a&gt; to let you target the distribution of your apps to normal
or low-RAM devices through Google Play.
&lt;li&gt;&lt;strong&gt;Optimized Google apps&lt;/strong&gt;: Rebuilt and optimized versions of
Google apps, using less memory, storage space, and mobile data.
&lt;li&gt;&lt;strong&gt;Google Play&lt;/strong&gt;: While all apps will be available on Android
Oreo (Go edition) devices, Google Play will give visibility to apps specifically
optimized by developers to provide a great experience for billions of people
with the &lt;a
href="https://developer.android.com/develop/quality-guidelines/building-for-billions.html"&gt;building
for billions guidelines&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
We've updated the &lt;strong&gt;building for billions guidelines&lt;/strong&gt; with
additional guidance on &lt;a
href="https://developer.android.com/develop/quality-guidelines/building-for-billions-device-capacity.html#androidgo"&gt;how
to optimize your app for Android Oreo (Go edition) devices&lt;/a&gt;. For most
developers, optimizing your existing APK or using Google Play's &lt;a
href="https://developer.android.com/google/play/publishing/multiple-apks.html"&gt;Multiple
APK feature&lt;/a&gt; to target a version of your APK to low-RAM devices is the best
way to prepare for Android Oreo (Go edition) devices. Remember that &lt;a
href="https://medium.com/googleplaydev/shrinking-apks-growing-installs-5d3fcba23ce2"&gt;making
your app lighter&lt;/a&gt; and more efficient benefits your whole audience, regardless
of device.
&lt;/p&gt;
&lt;h3&gt;Neural Networks API&lt;/h3&gt;
&lt;p&gt;
The &lt;a
href="https://developer.android.com/ndk/guides/neuralnetworks/index.html"&gt;Neural
Networks API&lt;/a&gt; provides accelerated computation and inference for on-device
machine learning frameworks like &lt;a
href="https://www.tensorflow.org/mobile/tflite/"&gt;TensorFlow Lite&lt;/a&gt; -- Google's
cross-platform ML library for mobile -- as well as Caffe2 and others. TensorFlow
Lite is &lt;a
href="https://developers.googleblog.com/2017/11/announcing-tensorflow-lite.html"&gt;now
available to developers&lt;/a&gt;, so visit the &lt;a
href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite"&gt;TensorFlow
Lite open source repo&lt;/a&gt; for downloads and docs. TensorFlow Lite works with the
Neural Networks API to run models like &lt;a
href="https://research.googleblog.com/2017/06/mobilenets-open-source-models-for.html"&gt;MobileNets&lt;/a&gt;,
&lt;a href="https://arxiv.org/abs/1512.00567"&gt;Inception v3&lt;/a&gt;, and &lt;a
href="https://research.googleblog.com/2017/11/on-device-conversational-modeling-with.html"&gt;Smart
Reply&lt;/a&gt; efficiently on your mobile device.
&lt;/p&gt;
&lt;h3&gt;Autofill enhancements and more&lt;/h3&gt;
&lt;p&gt;
Android 8.1 includes select &lt;a
href="https://developer.android.com/about/versions/oreo/android-8.1.html"&gt;new
features and developer APIs&lt;/a&gt; (API level 27), along with the latest
optimizations, bug fixes, and security patches. Extend your app with &lt;a
href="https://developer.android.com/about/versions/oreo/index.html"&gt;Autofill&lt;/a&gt;
enhancements, a &lt;a
href="https://developer.android.com/reference/android/os/SharedMemory.html"&gt;SharedMemory&lt;/a&gt;
API, and more. You can also add established Android Oreo features as well, see
the &lt;a
href="https://developer.android.com/about/versions/oreo/android-8.0.html"&gt;Android
Oreo site&lt;/a&gt; for details.
&lt;/p&gt;
&lt;h3&gt;Test your apps on Android 8.1&lt;/h3&gt;
&lt;p&gt;
If haven't already, take a few moments today to test your apps and make sure
they offer the experience you want for users upgrading to Android 8.1 Oreo.
&lt;/p&gt;
&lt;p&gt;
Just install your current app from Google Play onto a device or &lt;a
href="https://developer.android.com/studio/run/managing-avds.html"&gt;emulator&lt;/a&gt;
running Android Oreo and test the user flows. The app should run and look great,
and handle the Android Oreo &lt;a
href="https://developer.android.com/about/versions/o/android-8.0-changes.html"&gt;behavior
changes&lt;/a&gt; properly. In particular, pay attention to &lt;a
href="https://developer.android.com/about/versions/o/android-8.0-changes.html#abll"&gt;background
location limits&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/notifiers/notifications.html#ManageChannels"&gt;notification
channels&lt;/a&gt;, and changes in &lt;a
href="https://developer.android.com/about/versions/o/android-8.0-changes.html#networking-all"&gt;networking&lt;/a&gt;,
&lt;a
href="https://developer.android.com/about/versions/o/android-8.0-changes.html#security-all"&gt;security&lt;/a&gt;,
and &lt;a
href="https://developer.android.com/about/versions/o/android-8.0-changes.html#privacy-all"&gt;identifiers&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;Speed your development with Android Studio&lt;/h3&gt;
&lt;p&gt;
To build with Android 8.1, we recommend updating to &lt;a
href="https://android-developers.googleblog.com/2017/10/android-studio-30.html"&gt;Android
Studio 3.0&lt;/a&gt;, which is now &lt;a
href="https://developer.android.com/studio/index.html"&gt;available from the stable
channel&lt;/a&gt;. On top of the new app &lt;a
href="https://developer.android.com/studio/profile/android-profiler.html"&gt;performance
profiling tools&lt;/a&gt;, support for the &lt;a
href="http://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html"&gt;Kotlin
programming language&lt;/a&gt;, and Gradle build optimizations, Android Studio 3.0
makes it easier to develop for Android Oreo features like &lt;a
href="https://android-developers.googleblog.com/2017/05/android-instant-apps-is-open-to-all.html"&gt;Instant
Apps&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;XML
Fonts&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;downloadable
fonts&lt;/a&gt;, and &lt;a
href="https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive.html"&gt;adaptive
icons&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
With the final platform we're updating the SDK and build tools in Android
Studio, as well as the API Level 27 emulator system images. We recommend
updating to the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;Android
Support Library 27.0.2&lt;/a&gt;, which is available from &lt;a
href="https://developer.android.com/studio/build/dependencies.html#google-maven"&gt;Google's
Maven repository&lt;/a&gt;. See the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html#27-0-0"&gt;version
notes&lt;/a&gt; for details on what's new.
&lt;/p&gt;
&lt;p&gt;
As always, we're providing downloadable factory and OTA images on the &lt;a
href="https://developers.google.com/android/images?utm_campaign=android_launch_androidnougat_120516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;Nexus
Images&lt;/a&gt; page to help you do final testing on your Pixel and Nexus devices.
&lt;/p&gt;
&lt;h3&gt;Publish your updates to Google Play&lt;/h3&gt;
&lt;p&gt;
When you're ready, you can publish your APK updates targeting API level 27 in
your alpha, beta, or production channels. Make sure that your updated app runs
well on Android Oreo as well as older versions. We recommend using &lt;a
href="https://developer.android.com/distribute/engage/beta.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;beta
testing&lt;/a&gt; to get early feedback from a small group of users and a &lt;a
href="https://developer.android.com/distribute/best-practices/launch/pre-launch-crash-reports.html"&gt;pre-launch
report&lt;/a&gt; to help you identify any issues, then do a &lt;a
href="https://developer.android.com/distribute/best-practices/launch/progressive-updates.html"&gt;staged
rollout&lt;/a&gt;. Head over to the Android Developers site to find more info on &lt;a
href="https://developer.android.com/distribute/best-practices/launch/launch-checklist.html"&gt;launch
best practices&lt;/a&gt;. We're looking forward to seeing your app updates!
&lt;/p&gt;
&lt;h3&gt;What's next for Android Oreo?&lt;/h3&gt;
&lt;p&gt;
We'll soon be closing the Developer Preview issue tracker, but please keep the
feedback coming! If you still see an issue that you filed in the preview
tracker, just &lt;a href="https://source.android.com/source/report-bugs.html"&gt;file
a new issue&lt;/a&gt; against Android 8.1 in the AOSP issue tracker. You can also
continue to give us feedback or ask questions in the &lt;a
href="https://plus.google.com/communities/105153134372062985968/stream/755bb91d-c101-4e32-9277-1e560c4e26d2"&gt;developer
community&lt;/a&gt;.
&lt;/p&gt;

&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=G1BLRmMJ8UU:0kPMJdmFDj4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=G1BLRmMJ8UU:0kPMJdmFDj4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=G1BLRmMJ8UU:0kPMJdmFDj4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/G1BLRmMJ8UU" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6323303361865867985" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6323303361865867985" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/G1BLRmMJ8UU/welcoming-android-81-oreo-and-android.html" title="Welcoming Android 8.1 Oreo and Android Oreo (Go edition)" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-sLGydlfK8AM/WibSkBxHOlI/AAAAAAAAE20/hewUiVpk-uYb8YvRjbcGXJzrNh-twjH5gCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/12/welcoming-android-81-oreo-and-android.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4190148107633921278</id><published>2017-12-04T10:19:00.000-08:00</published><updated>2017-12-05T10:00:41.361-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="long aspect ratio" /><category scheme="http://www.blogger.com/atom/ns#" term="Screens" /><title type="text"> Tuning your apps and games for long screen devices</title><content type="html">&lt;em&gt;Posted by Fred Chung, Developer Advocate&lt;/em&gt;
&lt;p&gt;
In recent months, there's a growing trend for handset makers to ship new devices
with long screen aspect ratio (stretching beyond 16:9), many of which also sport
rounded corners.  This attests to the Android ecosystem's breadth and choice.
Pixel 2 XL and Huawei Mate 10 Pro are just two of many examples.  These screen
characteristics could bring a very immersive experience to users and they take
notice of apps and games that don't take advantage of the long aspect ratio
screen on these new devices.  Therefore it is important for developers to
optimize for these screen designs.  Let's have a look at related support
provided by the Android OS.
&lt;/p&gt;
&lt;h3&gt;Optimize for long aspect ratio screens&lt;/h3&gt;
&lt;p&gt;
Most apps using standard UI widgets will likely work out-of-the-box on these devices.  &lt;a
href="https://developer.android.google.cn/guide/practices/screens_support.html"&gt;Android
documentation&lt;/a&gt; details techniques for flexibly working on multiple screen
sizes.  However, some games and apps with custom UIs may run into issues due to
incorrect assumptions on certain aspect ratios.  We're sharing a few typical
issues faced by developers, so you can pay attention to those relevant to you:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Certain sides of the screen are cropped&lt;/strong&gt;.  This makes any
graphic or UI elements in the affected regions look incomplete.
&lt;li&gt;&lt;strong&gt;Touch targets are offset from UI elements&lt;/strong&gt; (e.g. buttons).
Users may be confused on UI elements that are seemingly interactive.
&lt;li&gt;For full screen mode on rounded corners devices, any&lt;strong&gt; UI elements
very close to the corners may be outside of the curved corner viewable
area&lt;/strong&gt;.  Imagine if a commerce app's "Purchase" button was partially
obstructed?  We recommend referencing &lt;a
href="https://material.io/guidelines/layout/metrics-keylines.html#metrics-keylines-keylines-spacing"&gt;Material
Design guidelines&lt;/a&gt; by leaving 16dp side margins in layouts.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
If responsive UI is really not suitable for your situation, &lt;em&gt;as a last
resort&lt;/em&gt; declare an explicit maximum supported aspect ratio as follows.  On
devices with a wider aspect ratio, the app will be shown in a compatibility mode
padded with letterbox.  Keep in mind that certain device models provide an
override for users to force the app into full-screen compatibility mode, so be
sure to test under these scenarios too!
&lt;/p&gt;
&lt;p&gt;
Targets API level 26 or higher: Use &lt;code&gt;android:maxAspectRatio
&lt;/code&gt;attributes.
&lt;/p&gt;
&lt;p&gt;
Targets API level 25 or lower: Use &lt;code&gt;android.max_aspect &lt;/code&gt;meta-data.
&lt;em&gt;Note that maximum aspect ratio values will be respected only if your
activities don't support &lt;code&gt;resizableActivity&lt;/code&gt;.  &lt;/em&gt;See &lt;a
href="https://developer.android.google.cn/guide/practices/screens_support.html#MaxAspectRatio"&gt;documentation&lt;/a&gt;
for detail.

&lt;p&gt;
&lt;em&gt;System letterboxes an app when the declared maximum aspect ratio is smaller
than the device's screen.&lt;/em&gt;
&lt;/p&gt;
&lt;div class="blgimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-6fJy9jVGKfs/WiV_ceRScvI/AAAAAAAAE2k/x6HL8M4NERERC7RNViV3hfI_-io7QGANACLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-6fJy9jVGKfs/WiV_ceRScvI/AAAAAAAAE2k/x6HL8M4NERERC7RNViV3hfI_-io7QGANACLcBGAs/s1600/image1.png" data-original-width="960" data-original-height="540" /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;h3&gt;Consider using side-by-side activities &lt;/h3&gt;
&lt;p&gt;
Long aspect ratio devices enable even more multi-window use cases that could
increase user productivity.  Beginning in Android 7.0, the platform offers a
standard way for developers to implement multi-window on supported devices as
well as perform data drag and drop between activities.  Refer to &lt;a
href="https://developer.android.com/guide/topics/ui/multi-window.html#configuring"&gt;documentation&lt;/a&gt;
for details.
&lt;/p&gt;
&lt;p&gt;
Testing is crucial.  If you don't have access to one of these long screen
devices, be sure to test on the emulator with adequate screen size and
resolution hardware properties, which are explained in the &lt;a
href="https://developer.android.com/studio/run/managing-avds.html#hpproperties"&gt;emulator
documentation&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
 We know you want to delight your users with long screen devices.  With a few
steps, you can ensure your apps and games taking full advantage of these
devices!
&lt;/p&gt;

&lt;style&gt;

.blgimg1 img {
width: 100%;
border: 0;
margin: 0;
padding:10px 0 10px 0;


}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_-XwqtD_1UM:JK1hwwJYnlc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_-XwqtD_1UM:JK1hwwJYnlc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=_-XwqtD_1UM:JK1hwwJYnlc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/_-XwqtD_1UM" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4190148107633921278" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4190148107633921278" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/_-XwqtD_1UM/tuning-your-apps-and-games-for-long.html" title=" Tuning your apps and games for long screen devices" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-6fJy9jVGKfs/WiV_ceRScvI/AAAAAAAAE2k/x6HL8M4NERERC7RNViV3hfI_-io7QGANACLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/12/tuning-your-apps-and-games-for-long.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6594287360386328833</id><published>2017-11-29T17:20:00.000-08:00</published><updated>2017-11-30T09:28:02.431-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Things" /><category scheme="http://www.blogger.com/atom/ns#" term="Developer Preview" /><category scheme="http://www.blogger.com/atom/ns#" term="things" /><title type="text">Android Things Developer Preview 6</title><content type="html">&lt;em&gt;Posted by &lt;a href="https://google.com/+WaynePiekarski"&gt;Wayne Piekarski&lt;/a&gt;,
Developer Advocate for IoT&lt;/em&gt;

&lt;p&gt;
The next release of Android Things Developer Preview 6 (DP6) is here with lots
of new features and bug fixes. Android Things is Google's platform that enables
Android Developers to create Internet of Things (IoT) devices with support for
powerful applications such as video and audio processing and on-board machine
learning with TensorFlow. For the specifics on what is new, visit the &lt;a
href="https://developer.android.com/things/preview/releases.html"&gt;release
notes&lt;/a&gt;. Here are a few of the highlights of what is in DP6.
&lt;/p&gt;
&lt;h3&gt;IoT launcher&lt;/h3&gt;
&lt;p&gt;
DP6 includes a new IoT launcher that allows the user to see the current state of
the device and change settings using a touch screen or USB input devices.
Settings such as configuring the WiFi, finding the build ID, and checking for
updates is now something that can be done interactively, making it even easier
to get started. This launcher is visible when no other developer-provided &lt;a
href="https://developer.android.com/things/sdk/index.html#home_activity_support"&gt;IOT_LAUNCHER&lt;/a&gt;
Activity is present.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg1"&gt;&lt;a href="https://4.bp.blogspot.com/-_ORMRmIuIPg/Wh9RxBsb5bI/AAAAAAAAE2Q/MaOxY0FGOTEdWrzsPju6Po7hXiLYkeQngCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-_ORMRmIuIPg/Wh9RxBsb5bI/AAAAAAAAE2Q/MaOxY0FGOTEdWrzsPju6Po7hXiLYkeQngCLcBGAs/s1600/image2.png" data-original-width="800" data-original-height="480" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;h3&gt;Graphics acceleration defaults&lt;/h3&gt;
&lt;p&gt;
Android Things uses the open-source &lt;a
href="https://github.com/google/swiftshader"&gt;SwiftShader&lt;/a&gt; library, a
CPU-based implementation of the OpenGL ES APIs. This enables common OpenGL
support across all platforms, even those with no GPU hardware. However, many
simple 2D UIs render faster if the drawing is done directly to the framebuffer
and OpenGL emulation is not used. In DP6, OpenGL rendering is disabled by
default to ensure that most apps run with the fastest UI possible. If you need
OpenGL support for 3D rendering, WebView, or TextureView, then explicitly enable
it in your AndroidManifest.xml according to the &lt;a
href="https://developer.android.com/guide/topics/graphics/hardware-accel.html"&gt;documentation&lt;/a&gt;:
&lt;/p&gt;


&lt;pre class="prettyprint"&gt;&amp;lt;activity

    ...
    android:hardwareAccelerated="true"&gt;
&lt;/pre&gt;
&lt;h3&gt;API 27 and Google Play Services&lt;/h3&gt;
&lt;p&gt;
DP6 is now based on the latest Android 8.1 developer preview, with API level 27.
Most of the standard Android samples now work on DP6. For example, the &lt;a
href="https://github.com/googlesamples/android-Camera2Basic"&gt;Camera2Basic&lt;/a&gt;
sample using the Camera2 API and TextureView now works on both NXP and Raspberry
Pi based devices (with the hardwareAccelerated flag set to true). Google Play
Services has been updated to support SDK version 11.6, supporting all the &lt;a
href="https://developers.google.com/android/guides/releases"&gt;latest
features&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;Command-line flashing tool&lt;/h3&gt;
&lt;p&gt;
We heard from developers that flashing and configuring a board using fastboot
can be tedious, so the &lt;a
href="https://partner.android.com/things/console/#/tools"&gt;Android Things
Console&lt;/a&gt; now brings a new and simpler way of flashing device images. Instead
of using fastboot and adb commands manually, a new interactive command-line
&lt;code&gt;&lt;a
href="https://partner.android.com/things/console/#/tools"&gt;android-things-setup-utility&lt;/a&gt;&lt;/code&gt;
is now provided. This tool makes it much easier to get started with Android
Things, and automates the download and flashing process.

&lt;h3&gt;Android Things Console updates&lt;/h3&gt;
&lt;p&gt;
DP6 introduces the new partition scheme that will be used for the upcoming
production release. Due to the new partition layout, the over-the-air update
(OTA) system cannot update existing DP5.1 or earlier devices. Developers will
need to go to the &lt;a href="https://partner.android.com/things/console"&gt;Android
Things Console&lt;/a&gt;, and download and flash a new DP6 build. The Console UI has
also been changed for DP6 features, and will only allow you to create new builds
based on DP6. If you have any older existing builds, they are still available
for download but will not support OTA updates. Developers are encouraged to move
all work to DP6.
&lt;/p&gt;
&lt;h3&gt;GPIO pin naming&lt;/h3&gt;
&lt;p&gt;
The interactive IoT launcher shown at boot now includes an I/O pinout section
where you can discover the labels of all the pins. The pin naming used by the
i.MX7 has been changed, and you should update your code to use this new naming
convention. See the &lt;a
href="https://developer.android.com/things/hardware/imx7d-pico-io.html"&gt;i.MX7
documentation&lt;/a&gt; for the complete list of pin names.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg2"&gt;&lt;a href="https://1.bp.blogspot.com/-8xfOLL0vaEg/Wh9R6H20EsI/AAAAAAAAE2U/P2A0CDytRD0aMgP1XH_Hd-74sU3p95RlQCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-8xfOLL0vaEg/Wh9R6H20EsI/AAAAAAAAE2U/P2A0CDytRD0aMgP1XH_Hd-74sU3p95RlQCLcBGAs/s1600/image1.png" data-original-width="800" data-original-height="480" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;h3&gt;Settings and Device Update APIs&lt;/h3&gt;
&lt;p&gt;
New APIs have been added to Android Things that control the &lt;a
href="https://developer.android.com/things/sdk/apis/settings.html"&gt;configuration&lt;/a&gt;
of the local device and device &lt;a
href="https://developer.android.com/things/sdk/apis/update.html"&gt;updates&lt;/a&gt;. &lt;a
href="https://developer.android.com/things/reference/com/google/android/things/update/UpdateManager.html"&gt;UpdateManager&lt;/a&gt;
gives developers control over when updates and reboots can be performed,
ensuring the device is available for the user when needed. &lt;a
href="https://developer.android.com/things/reference/com/google/android/things/device/DeviceManager.html"&gt;DeviceManager&lt;/a&gt;
controls factory reset, reboot, and device locales. APIs are also provided for
settings such as &lt;a
href="https://developer.android.com/things/reference/com/google/android/things/device/ScreenManager.html"&gt;ScreenManager&lt;/a&gt;
to control the screen, and &lt;a
href="https://developer.android.com/things/reference/com/google/android/things/device/TimeManager.html"&gt;TimeManager&lt;/a&gt;
to control the clock and time zone.
&lt;/p&gt;
&lt;h3&gt;Peripheral command-line tool&lt;/h3&gt;
&lt;p&gt;
We now provide a command-line tool &lt;code&gt;&lt;a
href="https://developer.android.com/things/sdk/pio/pio-cli.html"&gt;pio&lt;/a&gt;&lt;/code&gt;
that gives developers access to the Peripheral API via the adb shell. Developers
can interactively test GPIO, PWM, UART, I2C, SPI, and future interfaces from an
adb shell, which is useful for debugging and automated testing.

&lt;h3&gt;Feedback&lt;/h3&gt;
&lt;p&gt;
DP6 includes significant changes and improvements to the platform. Please send
us your feedback by filing &lt;a
href="https://code.google.com/p/android/issues/entry?template=Android%20Things%20bug%20report"&gt;bug
reports&lt;/a&gt; and &lt;a
href="https://code.google.com/p/android/issues/entry?template=Android%20Things%20feature%20request"&gt;feature
requests&lt;/a&gt;, as well as asking any questions on &lt;a
href="http://stackoverflow.com/questions/tagged/android-things"&gt;Stack
Overflow&lt;/a&gt;. To start using DP6, use the &lt;a
href="https://partner.android.com/things/console"&gt;Android Things Console&lt;/a&gt; to
download system images and flash existing devices, or use the &lt;code&gt;&lt;a
href="https://partner.android.com/things/console/#/tools"&gt;android-things-setup-utility&lt;/a&gt;&lt;/code&gt;.
More information about the changes are available in the &lt;a
href="https://developer.android.com/things/preview/releases.html"&gt;release
notes&lt;/a&gt;. You can also join &lt;a href="http://g.co/iotdev"&gt;Google's IoT
Developers Community&lt;/a&gt; on Google+, a great resource to get updates and discuss
ideas. Also, we have our new &lt;a href="https://hackster.io/google"&gt;hackster.io
community&lt;/a&gt;, where everyone can share the amazing projects they have built. We
look forward to seeing what you build with Android Things!

&lt;style&gt;

.blgimg1 img {
width: 60%;
border: 0;
margin: 0;
padding:10px 0 10px 0;


}

.blgimg2 img {
width: 60%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;

}
&lt;/style&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=OWhA-q2-rDM:7CpCOitFkq4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=OWhA-q2-rDM:7CpCOitFkq4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=OWhA-q2-rDM:7CpCOitFkq4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/OWhA-q2-rDM" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6594287360386328833" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6594287360386328833" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/OWhA-q2-rDM/android-things-developer-preview-6.html" title="Android Things Developer Preview 6" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-_ORMRmIuIPg/Wh9RxBsb5bI/AAAAAAAAE2Q/MaOxY0FGOTEdWrzsPju6Po7hXiLYkeQngCLcBGAs/s72-c/image2.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/android-things-developer-preview-6.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7785051685428023747</id><published>2017-11-28T10:00:00.000-08:00</published><updated>2017-11-28T10:00:47.353-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Advanced Android course" /><category scheme="http://www.blogger.com/atom/ns#" term="Advanced Android training" /><title type="text"> Delve deeper into Android development with our new course!</title><content type="html">&lt;em&gt;Posted by Jocelyn Becker, Senior Program Manager, Google Developer Training&lt;/em&gt;

&lt;p&gt;
If you know the basics of building Android apps and want to delve deeper, take a
look at our new &lt;a
href="http://developers.google.com/training/courses/android-advanced"&gt;Advanced
Android Development&lt;/a&gt; course built by the Google Developers Training team.
&lt;/p&gt;
&lt;div class="blgimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-kndfWHfVK98/WhSntra0xeI/AAAAAAAAE1Y/YeJZ4z64uLka5AahLSWar70yIvunt2rBwCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-kndfWHfVK98/WhSntra0xeI/AAAAAAAAE1Y/YeJZ4z64uLka5AahLSWar70yIvunt2rBwCLcBGAs/s1600/image1.png" data-original-width="296" data-original-height="296" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
Do you want to learn how to use fragments, add widgets for your app, and fine
tune your app's performance? Make your app available to a diverse user base
through localization and accessibility features? Use sensors in your app? How
about creating custom views, drawing directly to the screen and running
animations?
&lt;/p&gt;
&lt;p&gt;
Each lesson in our new course takes you through building an app that illustrates
an advanced concept, from incorporating maps into your app to using a
SurfaceView to draw outside the main UI thread.
&lt;/p&gt;
&lt;p&gt;
This course is intended for experienced Java programmers who already know the
fundamentals of building Android apps. It is a follow-on course to our &lt;a
href="https://developers.google.com/training/courses/android-fundamentals"&gt;Android
Developer Fundamentals&lt;/a&gt; course. The course is intended to be taught as
instructor-led training. However, all the materials are published online and are
available to anyone who wants to learn more advanced concepts of Android
development.
&lt;/p&gt;
&lt;p&gt;
We have published detailed written &lt;a
href="https://google-developer-training.gitbooks.io/android-developer-advanced-course-practicals/content/"&gt;tutorials&lt;/a&gt;,
&lt;a
href="https://google-developer-training.gitbooks.io/android-developer-advanced-course-concepts/content/"&gt;concept
guides&lt;/a&gt;, slide decks, and most importantly, a treasure trove of &lt;a
href="https://github.com/google-developer-training/android-advanced"&gt;apps in
GitHub&lt;/a&gt;. You can find links to everything at &lt;a
href="https://developers.google.com/training/courses/android-advanced"&gt;developers.google.com/training/android-advanced&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Educational institutions worldwide are invited to use this course to teach your
students. Individual developers are welcome (and encouraged) to work through the
tutorials to learn on their own.
&lt;/p&gt;
&lt;p&gt;
Each lesson presents a different, advanced topic, and you can teach or learn
each topic independently of the others.
&lt;/p&gt;
&lt;div class="blgimg2"&gt;&lt;a href="https://4.bp.blogspot.com/-yrBi6CiA5X0/WhSoKqNQumI/AAAAAAAAE1c/Bj5Ppqd2hTkyHvyJRS6PDDs76G_wjaIeQCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-yrBi6CiA5X0/WhSoKqNQumI/AAAAAAAAE1c/Bj5Ppqd2hTkyHvyJRS6PDDs76G_wjaIeQCLcBGAs/s1600/image2.png" data-original-width="1007" data-original-height="721" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;em&gt;Build apps as you learn how to use sensors, add places to your app, and draw
directly to a canvas. And much more!&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
The new course covers:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;using fragments
&lt;li&gt;building widgets
&lt;li&gt;using sensors
&lt;li&gt;measuring and improving application performance
&lt;li&gt;localizing your app
&lt;li&gt;making your app accessible
&lt;li&gt;adding location, places and maps to your apps
&lt;li&gt;creating custom views
&lt;li&gt;drawing to the canvas
&lt;li&gt;drawing to a SurfaceView off the main thread
&lt;li&gt;running animations&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Learn more at &lt;a
href="https://developers.google.com/training/courses/android-advanced"&gt;developers.google.com/training/android-advanced&lt;/a&gt;.
&lt;/p&gt;
&lt;style&gt;

.blgimg1 img {
width: 40%;
border: 0;
margin: 0;
padding:10px 20px 10px 10px;
float: left;

}

.blgimg2 img {
width: 100%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;

}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=NvvNkGlDnio:_qWT6tT7ElM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=NvvNkGlDnio:_qWT6tT7ElM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=NvvNkGlDnio:_qWT6tT7ElM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/NvvNkGlDnio" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7785051685428023747" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7785051685428023747" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/NvvNkGlDnio/delve-deeper-into-android-development.html" title=" Delve deeper into Android development with our new course!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-kndfWHfVK98/WhSntra0xeI/AAAAAAAAE1Y/YeJZ4z64uLka5AahLSWar70yIvunt2rBwCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/delve-deeper-into-android-development.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-8806414999820789956</id><published>2017-11-27T10:32:00.000-08:00</published><updated>2017-11-27T10:32:18.262-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="8.1" /><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="developer" /><category scheme="http://www.blogger.com/atom/ns#" term="Preview" /><title type="text">Final preview of Android 8.1 now available</title><content type="html">&lt;div class="blgimg1"&gt;&lt;a href="https://3.bp.blogspot.com/-Iv33CasWcc0/WhxI0Q3yVrI/AAAAAAAAE1s/0CChWl5WmB8_6HxGVlFoKaITo5Of43zpgCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-Iv33CasWcc0/WhxI0Q3yVrI/AAAAAAAAE1s/0CChWl5WmB8_6HxGVlFoKaITo5Of43zpgCLcBGAs/s1600/image1.png" data-original-width="716" data-original-height="716" /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt;
&lt;p&gt;
Starting today we're rolling out an update to the Android 8.1 developer preview,
the last before the official launch to consumers in December. Android 8.1 adds
targeted enhancements to the Oreo platform, including optimizations for
&lt;strong&gt;Android Go&lt;/strong&gt; (for devices with 1GB or less of memory) and a
&lt;strong&gt;Neural Networks API&lt;/strong&gt; to accelerate on-device machine
intelligence. We've also included a few smaller enhancements to Oreo in response
to user and developer feedback.
&lt;/p&gt;
&lt;p&gt;
If you have a device enrolled in the &lt;a
href="http://www.android.com/beta"&gt;Android Beta Program&lt;/a&gt;, you'll receive the
update over the next few days. If you haven't enrolled yet, just visit the &lt;a
href="http://www.android.com/beta"&gt;Android Beta site&lt;/a&gt; to enroll and get the
update.
&lt;/p&gt;
&lt;p&gt;
At the official release in December we'll bring Android 8.1 to all supported
Pixel and Nexus devices worldwide -- including &lt;a
href="https://www.blog.google/products/pixel/new-pixel-2/"&gt;Pixel 2 and Pixel 2
XL&lt;/a&gt;, Pixel, Pixel XL, Pixel C, Nexus 5X, and Nexus 6P. Watch for
announcements soon.
&lt;/p&gt;
&lt;h3&gt;What's in this update?&lt;/h3&gt;
&lt;p&gt;
This preview update includes near-final Android 8.1 system images for Pixel and
Nexus devices, with official APIs (API level 27), the latest optimizations and
bug fixes, and the November 2017 security patch updates.  You can use the images
for compatibility testing or to develop using new Android 8.1 features like the
&lt;a
href="https://developer.android.com/ndk/guides/neuralnetworks/index.html"&gt;Neural
Networks API&lt;/a&gt; and &lt;a
href="https://android-developers.googleblog.com/2017/10/android-81-developer-preview.html"&gt;others&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The Neural Networks API provides accelerated computation and inference for
on-device machine learning frameworks like &lt;a
href="https://www.tensorflow.org/mobile/tflite/"&gt;TensorFlow Lite&lt;/a&gt; -- Google's
cross-platform ML library for mobile -- as well as Caffe2 and others. TensorFlow
Lite is &lt;a
href="https://developers.googleblog.com/2017/11/announcing-tensorflow-lite.html"&gt;now
available to developers&lt;/a&gt;, so visit the &lt;a
href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite"&gt;TensorFlow
Lite open source repo&lt;/a&gt; for downloads and docs. TensorFlow Lite works with the
Neural Networks API to run models like &lt;a
href="https://research.googleblog.com/2017/06/mobilenets-open-source-models-for.html"&gt;MobileNets&lt;/a&gt;,
&lt;a href="https://arxiv.org/abs/1512.00567"&gt;Inception v3&lt;/a&gt;, and &lt;a
href="https://research.googleblog.com/2017/11/on-device-conversational-modeling-with.html"&gt;Smart
Reply&lt;/a&gt; efficiently on your mobile device.
&lt;/p&gt;
&lt;p&gt;
Also, for Pixel 2 users, the Android 8.1 update on these devices enables &lt;a
href="https://www.blog.google/products/pixel/pixel-visual-core-image-processing-and-machine-learning-pixel-2/"&gt;Pixel
Visual Core&lt;/a&gt; -- Google's first custom-designed co-processor for image
processing and ML -- through a new developer option. Once enabled, apps using
Android Camera API can capture HDR+ shots through Pixel Visual Core. See the &lt;a
href="https://developer.android.com/preview/release-notes.html#test-pixel"&gt;release
notes&lt;/a&gt; for details.
&lt;/p&gt;
&lt;h3&gt;Get your apps ready&lt;/h3&gt;
&lt;p&gt;
With the consumer launch coming &lt;a
href="https://developer.android.com/preview/overview.html"&gt;in December&lt;/a&gt;, it's
important to test your current app now. This ensures that users transition
seamlessly to Android 8.1 when it arrives on their devices.
&lt;/p&gt;
&lt;p&gt;
Just enroll your eligible device in &lt;a
href="http://www.android.com/beta"&gt;Android Beta&lt;/a&gt; to get the latest update,
then install your app from Google Play and test. If you don't have a Pixel or
Nexus device, you can set up an Android 8.1 emulator for testing instead. If you
notice any issues, fix them and update your app in Google Play right away --
without changing the app's platform targeting.
&lt;/p&gt;
&lt;p&gt;
When you're ready, take advantage of new features and APIs in Android 8.1. See
the &lt;a href="https://developer.android.com/preview/api-overview.html"&gt;developer
preview site&lt;/a&gt;, the &lt;a
href="https://developer.android.com/sdk/api_diff/27/changes.html"&gt;API 27 diff
report&lt;/a&gt;, and the &lt;a href="https://developer.android.com/reference/"&gt;updated
API reference&lt;/a&gt; for details.
&lt;/p&gt;
&lt;h3&gt;Speed your development with Android Studio&lt;/h3&gt;
&lt;p&gt;
To build with Android 8.1, we recommend updating to &lt;a
href="https://android-developers.googleblog.com/2017/10/android-studio-30.html"&gt;Android
Studio 3.0&lt;/a&gt;, which is now &lt;a
href="https://developer.android.com/studio/index.html"&gt;available from the stable
channel&lt;/a&gt;. On top of  the new app &lt;a
href="https://developer.android.com/studio/profile/android-profiler.html"&gt;performance
profiling tools&lt;/a&gt;, support for the &lt;a
href="http://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html"&gt;Kotlin
programming language&lt;/a&gt;, and Gradle build optimizations, Android Studio 3.0
makes it easier to develop with Android Oreo features like &lt;a
href="https://android-developers.googleblog.com/2017/05/android-instant-apps-is-open-to-all.html"&gt;Instant
Apps&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;XML
Fonts&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;downloadable
fonts&lt;/a&gt;, and &lt;a
href="https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive.html"&gt;adaptive
icons&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We also recommend updating to the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;Android
Support Library 27.0.0&lt;/a&gt;, which is available from &lt;a
href="https://developer.android.com/studio/build/dependencies.html#google-maven"&gt;Google's
Maven repository&lt;/a&gt;. See the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html#27-0-0"&gt;version
notes&lt;/a&gt; for details on what's new.
&lt;/p&gt;
&lt;h3&gt;Publish your updates to Google Play&lt;/h3&gt;
&lt;p&gt;
Google Play is open for apps compiled against or targeting API 27. When you're
ready, you can publish your APK updates in your alpha, beta, or production
channels.
&lt;/p&gt;
&lt;p&gt;
To make sure your app runs well on Android 8.1 as well as older versions, we
recommend using Google Play's &lt;a
href="https://developer.android.com/distribute/engage/beta.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;beta
testing feature&lt;/a&gt; to run an alpha test on small group of users. Then run a
much open beta test on a much larger group of users. When you're ready to launch
your update, you can use a &lt;a
href="https://developer.android.com/distribute/best-practices/launch/progressive-updates.html"&gt;staged
rollout&lt;/a&gt; in your production channel. We're looking forward to seeing your app
updates!
&lt;/p&gt;
&lt;h3&gt;Give us your feedback&lt;/h3&gt;
&lt;p&gt;
As always, your feedback is crucial, so please &lt;a
href="https://developer.android.com/preview/feedback.html"&gt;keep it coming!&lt;/a&gt;.
We've set up different hotlists where you can report &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024208"&gt;Android
platform issues&lt;/a&gt;, &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=808305"&gt;app
compatibility issues&lt;/a&gt;, and &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=809305"&gt;third-party
SDKs and tools issues&lt;/a&gt;. We also have a dedicated hotlist for &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024216"&gt;Neural
Networks API issues&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You can also give us feedback through the &lt;a
href="https://plus.google.com/communities/105153134372062985968/stream/755bb91d-c101-4e32-9277-1e560c4e26d2"&gt;Android
Developer community&lt;/a&gt; or &lt;a
href="https://plus.google.com/communities/106765800802768335079"&gt;Android Beta
community&lt;/a&gt; as we work towards the consumer release in December.
&lt;/p&gt;

&lt;style&gt;

.blgimg1 img {
width: 40%;
border: 0;
margin: 0;
padding:10px 20px 10px 10px;
float: right;

}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ZTZIFfdk5xU:zmDP3boQ7oM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ZTZIFfdk5xU:zmDP3boQ7oM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=ZTZIFfdk5xU:zmDP3boQ7oM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/ZTZIFfdk5xU" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8806414999820789956" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8806414999820789956" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/ZTZIFfdk5xU/final-preview-of-android-81-now.html" title="Final preview of Android 8.1 now available" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-Iv33CasWcc0/WhxI0Q3yVrI/AAAAAAAAE1s/0CChWl5WmB8_6HxGVlFoKaITo5Of43zpgCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/final-preview-of-android-81-now.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1201254702875467044</id><published>2017-11-21T11:36:00.003-08:00</published><updated>2017-11-21T11:36:58.361-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play services" /><title type="text">Moving Past GoogleApiClient</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Moving Past GoogleApiClient"&gt;
&lt;meta name="twitter:description" content="The release of version 11.6.0 of the Google Play services SDK moves a number of popular APIs to a new paradigm for accessing Google APIs on Android. We have reworked the APIs to reduce boilerplate, improve UX, and simplify authentication and authorization."&gt;
&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-HAhxeN9shOA/WhSAOMFdLSI/AAAAAAAAE1I/-goHbTWGDeAmWuqAYxW14hRjP82kZ4SAACLcBGAs/s1600/Screen%2BShot%2B2017-11-21%2Bat%2B11.35.00%2BAM.png"&gt;

&lt;em&gt;Posted by Sam Stern, Developer Programs Engineer&lt;/em&gt;
&lt;p&gt;The release of version 11.6.0 of the Google Play services SDK moves a number of popular APIs to a new paradigm for accessing Google APIs on Android. We have reworked the APIs to reduce boilerplate, improve UX, and simplify authentication and authorization.
&lt;/p&gt;
&lt;p&gt;
The primary change in this release is the introduction of new &lt;code&gt;Task&lt;/code&gt;
and &lt;code&gt;&lt;a
href="https://developers.google.com/android/reference/com/google/android/gms/common/api/GoogleApi"&gt;GoogleApi&lt;/a&gt;&lt;/code&gt;
based APIs to replace the &lt;code&gt;GoogleApiClient&lt;/code&gt; access pattern.

&lt;p&gt;
The following APIs are newly updated to eliminate the use of
&lt;code&gt;GoogleApiClient&lt;/code&gt;:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Auth&lt;/strong&gt; - updated the Google Sign In and Credentials APIs.
&lt;li&gt;&lt;strong&gt;Drive&lt;/strong&gt; - updated the Drive and Drive Resource APIs.
&lt;li&gt;&lt;strong&gt;Fitness&lt;/strong&gt; - updated the Ble, Config, Goals, History,
Recording, Sensors, and Sessions APIs.
&lt;li&gt;&lt;strong&gt;Games&lt;/strong&gt; - updated the Achievements, Events, Games, Games
Metadata, Invitations, Leaderboards, Notifications, Player Stats, Players,
Realtime Multiplayer, Snapshots, Turn Based Multiplayer, and Videos APIs.
&lt;li&gt;&lt;strong&gt;Nearby&lt;/strong&gt; - updated the Connections and Messages
APIs.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
These APIs join others that made the switch in previous releases, such as the
Awareness, Cast, Places, Location, and Wallet APIs.
&lt;/p&gt;
&lt;h1&gt;The Past: Using GoogleApiClient&lt;/h1&gt;
&lt;p&gt;
Here is a simple Activity that demonstrates how one would access the Google
Drive API using &lt;code&gt;GoogleApiClient&lt;/code&gt; using a previous version of the
Play services SDK:
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;public class MyActivity extends AppCompatActivity implements
        GoogleApiClient.OnConnectionFailedListener,
        GoogleApiClient.ConnectionCallbacks {

    private static final int RC_SIGN_IN = 9001;

    private GoogleApiClient mGoogleApiClient;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        GoogleSignInOptions options =
               new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                        .requestScopes(Drive.SCOPE_FILE)
                        .build();

        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this, this)
                .addConnectionCallbacks(this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, options)
                .addApi(Drive.API)
                .build();
    }

    // ...
    // Not shown: code to handle sign in flow
    // ...

    @Override
    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
        // GoogleApiClient connection failed, most API calls will not work...
    }

    @Override
    public void onConnected(@Nullable Bundle bundle) {
        // GoogleApiClient is connected, API calls should succeed...
    }

    @Override
    public void onConnectionSuspended(int i) {
        // ...
    }

    private void createDriveFile() {
        // If this method is called before "onConnected" then the app will crash,
        // so the developer has to manage multiple callbacks to make this simple
        // Drive API call.
        Drive.DriveApi.newDriveContents(mGoogleApiClient)
            .setResultCallback(new ResultCallback&amp;lt;DriveApi.DriveContentsResult&gt;() {
                // ...
            });
    }
}&lt;/pre&gt;
&lt;p&gt;
The code is dominated by the concept of a connection, despite using the
simplified "automanage" feature. A &lt;code&gt;GoogleApiClient&lt;/code&gt; is only
connected when all APIs are available and the user has signed in (when APIs
require it).
&lt;/p&gt;
&lt;p&gt;
This model has a number of pitfalls:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Any connection failure prevents use of any of the requested APIs, but using
multiple &lt;code&gt;GoogleApiClient&lt;/code&gt; objects is unwieldy.
&lt;li&gt;The concept of a "connection" is inappropriately overloaded. Connection
failures can be result from Google Play services being missing or from
authentication issues.
&lt;li&gt;The developer has to track the connection state, because making some calls
before &lt;code&gt;onConnected&lt;/code&gt; is called will result in a crash.
&lt;li&gt;Making a simple API call can mean waiting for two callbacks.  One to wait
until the &lt;code&gt;GoogleApiClient&lt;/code&gt; is connected and another for the API call
itself.&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;The Future: Using GoogleApi&lt;/h1&gt;
&lt;p&gt;
Over the years the need to replace &lt;code&gt;GoogleApiClient&lt;/code&gt; became apparent,
so we set out to completely abstract the "connection" process and make it easier
to access individual Google APIs without boilerplate.
&lt;/p&gt;
&lt;p&gt;
Rather than tacking multiple APIs onto a single API client, each API now has a
purpose-built client object class that extends &lt;code&gt;GoogleApi&lt;/code&gt;.  Unlike
with &lt;code&gt;GoogleApiClient&lt;/code&gt; there is no performance cost to creating many
client objects.  Each of these client objects abstracts the connection logic,
connections are automatically managed by the SDK in a way that maximizes both
speed and efficiency.
&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Authenticating with GoogleSignInClient&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;
When using &lt;code&gt;GoogleApiClient&lt;/code&gt;, authentication was part of the
"connection" flow.  Now that you no longer need to manage connections, you
should use the new &lt;code&gt;GoogleSignInClient&lt;/code&gt; class to initiate
authentication:
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;public class MyNewActivity extends AppCompatActivity {

    private static final int RC_SIGN_IN = 9001;

    private GoogleSignInClient mSignInClient;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        GoogleSignInOptions options =
               new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                        .requestScopes(Drive.SCOPE_FILE)
                        .build();

        mSignInClient = GoogleSignIn.getClient(this, options);
    }

    private void signIn() {
        // Launches the sign in flow, the result is returned in onActivityResult
        Intent intent = mSignInClient.getSignInIntent();
        startActivityForResult(intent, RC_SIGN_IN);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == RC_SIGN_IN) {
            Task&amp;lt;GoogleSignInAccount&gt; task = 
                    GoogleSignIn.getSignedInAccountFromIntent(data);
            if (task.isSuccessful()) {
                // Sign in succeeded, proceed with account
                GoogleSignInAccount acct = task.getResult();
            } else {
                // Sign in failed, handle failure and update UI
                // ...
            }
        }
    }
}&lt;/pre&gt;
&lt;h2&gt;&lt;strong&gt;Making Authenticated API Calls&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;
Making API calls to authenticated APIs is now much simpler and does not require
waiting for multiple callbacks.
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;    private void createDriveFile() {
        // Get currently signed in account (or null)
        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);

        // Synchronously check for necessary permissions
        if (!GoogleSignIn.hasPermissions(account, Drive.SCOPE_FILE)) {
            // Note: this launches a sign-in flow, however the code to detect
            // the result of the sign-in flow and retry the API call is not
            // shown here.
            GoogleSignIn.requestPermissions(this, RC_DRIVE_PERMS, 
                    account, Drive.SCOPE_FILE);
            return;
        }

        DriveResourceClient client = Drive.getDriveResourceClient(this, account);
        client.createContents()
                .addOnCompleteListener(new OnCompleteListener&amp;lt;DriveContents&gt;() {
                    @Override
                    public void onComplete(@NonNull Task&amp;lt;DriveContents&gt; task) {
                        // ...
                    }
                });
    }&lt;/pre&gt;
&lt;p&gt;
Before making the API call we add an inline check to make sure that we have
signed in and that the sign in process granted the scopes we require.
&lt;/p&gt;
&lt;p&gt;
The call to &lt;code&gt;createContents()&lt;/code&gt; is simple, but it's actually taking
care of a lot of complex behavior. If the connection to Play services has not
yet been established, the call is queued until there is a connection. This is in
contrast to the old behavior where calls would fail or crash if made before
connecting.
&lt;/p&gt;
&lt;p&gt;
In general, the new &lt;code&gt;GoogleApi&lt;/code&gt;-based APIs have the following
benefits:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;No connection logic, calls that require a connection are queued until a
connection is available. Connections are pooled when appropriate and torn down
when not in use, saving battery and preventing memory leaks.
&lt;li&gt;Sign in is completely separated from APIs that consume
&lt;code&gt;GoogleSignInAccount&lt;/code&gt; which makes it easier to use authenticated APIs
throughout your app.
&lt;li&gt;Asynchronous API calls use the new &lt;code&gt;Task&lt;/code&gt; API rather than
&lt;code&gt;PendingResult&lt;/code&gt;, which allows for easier management and
chaining.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
These new APIs will improve your development process and enable you to make
better apps.
&lt;/p&gt;
&lt;h1&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;
Ready to get started with the new Google Play services SDK?
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/identity/sign-in/android/sign-in"&gt;Use
GoogleSignInClient to add sign in to your Android app&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/android/guides/tasks"&gt;Use the Tasks
API to control asynchronous operations&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Happy building!
&lt;/p&gt;

&lt;style&gt;
code {
font-size: 100%;
}


&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=uGgMYI8AQcY:ai9rJK9WsoQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=uGgMYI8AQcY:ai9rJK9WsoQ:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=uGgMYI8AQcY:ai9rJK9WsoQ:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/uGgMYI8AQcY" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1201254702875467044" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1201254702875467044" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/uGgMYI8AQcY/moving-past-googleapiclient_21.html" title="Moving Past GoogleApiClient" /><author><name>Google Devs</name><uri>https://plus.google.com/116954523003757714329</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://android-developers.googleblog.com/2017/11/moving-past-googleapiclient_21.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-5470315621933779662</id><published>2017-11-20T13:49:00.000-08:00</published><updated>2017-11-22T10:54:31.037-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="app attribution" /><category scheme="http://www.blogger.com/atom/ns#" term="app install" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="install referrer" /><category scheme="http://www.blogger.com/atom/ns#" term="install track" /><title type="text"> Google Play Referrer API: Track and measure your app installs easily and securely</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content=" Google Play Referrer API: Track and measure your app installs easily and securely"&gt;
&lt;meta name="twitter:description" content="Understanding how people find your app and what they do once they've installed
it is crucial to helping you make the right product and marketing decisions.
This is especially important when you're deciding your advertising strategy and
budget. "&gt;
&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-71kM4QWOKJc/WhNkIxbb0CI/AAAAAAAAE04/NtNUUkPyrW8d8uoDDt6tUMXTcO3RlbpJQCLcBGAs/s1600/growth.jpg"&gt;

&lt;em&gt;Posted by Neto Marin, Developer Advocate&lt;/em&gt;
&lt;p&gt;
Understanding how people find your app and what they do once they've installed
it is crucial to helping you make the right product and marketing decisions.
This is especially important when you're deciding your advertising strategy and
budget. Today many app measurement companies and ad networks offer ad
attribution solutions based on referral data. As such accurate install referral
data is vital for correctly attributing app installs, as well as discounting
fraudulent attempts for install credit.
&lt;/p&gt;
&lt;p&gt;
To help you obtain more accurate and reliable data about your installs, we're
introducing the &lt;strong&gt;Google Play Install Referrer API&lt;/strong&gt;, a reliable
way to securely retrieve install referral content. Using this API, your app will
get precise information straight from the Play Store, including:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;The referrer URL of the installed package.
&lt;li&gt;The timestamp, in seconds, of when the referrer click happened.
&lt;li&gt;The timestamp, in seconds, of when the installation began.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
We've tested the API with our &lt;a
href="https://www.google.com/adwords/appcampaigns/attribution/"&gt;App Attribution
Program&lt;/a&gt; partners including &lt;strong&gt;Adjust&lt;/strong&gt;,
&lt;strong&gt;AppsFlyer&lt;/strong&gt;, &lt;strong&gt;Singular &lt;/strong&gt;and&lt;strong&gt; TUNE&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;center&gt;&lt;em&gt;"The new Play API provides us with the data we need to effectively detect
and prevent click injection; it's a monumental step in securing a crucial
information exchange on Android."&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;- Paul Müller, CTO &amp; Co-Founder, &lt;strong&gt;Adjust&lt;/strong&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"The new Google Play API introduces fresh insights into both mobile ad fraud
and the mobile user journey, two key domains with impact across the ecosystem."
&lt;p&gt;- Elad Mashiach, VP, &lt;strong&gt;AppsFlyer&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"This additional data directly from the Play Store provides increased precision for the Kochava fraud suite to further minimize fraud for our customers."&lt;/p&gt;&lt;p&gt; - Charles Manning, CEO, &lt;strong&gt;Kochava&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"Google's new API is a game changer that will help marketing analytics
platforms like Singular identify and prevent a significant portion of Ad Fraud,
and provide security and accuracy to mobile advertisers"
&lt;p&gt;- Gadi Eliashiv, CEO &amp;
Co-Founder, &lt;strong&gt;Singular&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"This new data from Google Play is essential for marketers who demand
accountability out of their mobile app install advertising spend. At TUNE, this
data is allowing us to outright eliminate entire forms of mobile app install
fraud while providing new insight into how mobile app installs are driven."
&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;– Dan Koch, Chief Technical Officer, &lt;strong&gt;TUNE&lt;/strong&gt;&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;p&gt;
Starting today, the API works with the Play Store app from version
&lt;strong&gt;&lt;em&gt;8.3.73&lt;/em&gt;&lt;/strong&gt; and later for all developers.
&lt;/p&gt;
&lt;h3&gt;Play Install Referrer Library 1.0 now available&lt;/h3&gt;
&lt;p&gt;
To make it easy to integrate the Install Referrer API, we've released the
Install Referrer Library 1.0 for Android.  The library is available in our Maven
repository. To start using it, add the following dependency to your app module
build.gradle file:
&lt;/p&gt;


&lt;pre class="prettyprint"&gt;dependencies {
          ...
          compile 'com.android.installreferrer:installreferrer:1.0'
      }
&lt;/pre&gt;
&lt;p&gt;
All communication with the Play Store app happens through a Service, so the
first step is to establish the connection between your app and the Play Store.
Also, to receive the connection result and updates it's necessary to implement a
listener, &lt;code&gt;InstallReferrerStateListener&lt;/code&gt;. This listener could be your
current Activity or any other class you want to use:
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;public class MainActivity extends AppCompatActivity 
    implements InstallReferrerStateListener {
    …
}
&lt;/pre&gt;
&lt;p&gt;
Now that you have an &lt;code&gt;InstallReferrerStateListener&lt;/code&gt;, you can start
binding your app to the Play Store app service. To establish the connection, you
must build an &lt;code&gt;InstallReferrerClient&lt;/code&gt; instance and call the
&lt;code&gt;startConnection()&lt;/code&gt; method:
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;InstallReferrerClient mReferrerClient
...
mReferrerClient = newBuilder(this).build();
mReferrerClient.startConnection(this);
&lt;/pre&gt;
&lt;p&gt;
Then, handle the connection result in the
&lt;code&gt;onInstallReferrerSetupFinished()&lt;/code&gt; method. If the connection is OK,
the app can retrieve install referrer information, by calling the
&lt;code&gt;getInstallReferrer()&lt;/code&gt; method:
&lt;/p&gt;


&lt;pre
class="prettyprint"&gt;@Override
public void onInstallReferrerSetupFinished(int responseCode) {
   switch (responseCode) {
       case InstallReferrerResponse.OK:
           try {
               Log.v(TAG, "InstallReferrer conneceted");
               ReferrerDetails response = mReferrerClient.getInstallReferrer();
               handleReferrer(response);
               mReferrerClient.endConnection();
           } catch (RemoteException e) {
               e.printStackTrace();
           }
           break;
       case InstallReferrerResponse.FEATURE_NOT_SUPPORTED:
           Log.w(TAG, "InstallReferrer not supported");
           break;
       case InstallReferrerResponse.SERVICE_UNAVAILABLE:
           Log.w(TAG, "Unable to connect to the service");
           break;
       default:
           Log.w(TAG, "responseCode not found.");
   }
}
&lt;/pre&gt;
&lt;p&gt;
For more details about the new API and the client library, visit the &lt;a
href="https://developer.android.com/google/play/installreferrer/library.html"&gt;Install
Referrer Client Library page&lt;/a&gt; and the &lt;a
href="https://developer.android.com/reference/com/android/installreferrer/"&gt;reference
documentation&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;Other Implementations&lt;/h3&gt;
&lt;p&gt;
If you are not able to use our client library, you can use the AIDL interface
and establish the connection with Google Play Store on your own. Check out the
&lt;code&gt;&lt;a
href="https://developer.android.com/google/play/installreferrer/igetinstallreferrerservice.html"&gt;IGetInstallReferrerService
AIDL reference&lt;/a&gt;&lt;/code&gt; for details of the methods and the service
specification.

&lt;h3&gt;What's next?&lt;/h3&gt;
&lt;p&gt;
Check out the &lt;a
href="https://developer.android.com/google/play/installreferrer/library.html"&gt;Play
Install Referrer API documentation&lt;/a&gt; for details about the new API, the &lt;a
href="https://developer.android.com/reference/com/android/installreferrer/"&gt;library's
reference docs&lt;/a&gt;, and our &lt;a
href="https://developer.android.com/google/play/installreferrer/library.html"&gt;Quick
Start guide&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;center&gt;&lt;div class="blgimg1"&gt;&lt;a href="https://4.bp.blogspot.com/-fDFKbzstHko/WhMZgYEbZjI/AAAAAAAAE0o/vrRDhBi7X8M1q4PKmzkesJCDx-lBFyJRgCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-fDFKbzstHko/WhMZgYEbZjI/AAAAAAAAE0o/vrRDhBi7X8M1q4PKmzkesJCDx-lBFyJRgCLcBGAs/s1600/image1.png" data-original-width="499" data-original-height="281" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;

&lt;style&gt;

.blgimg1 img {
width: 40%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=J8bFV_rJgpQ:3LZwej4DzCM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=J8bFV_rJgpQ:3LZwej4DzCM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=J8bFV_rJgpQ:3LZwej4DzCM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/J8bFV_rJgpQ" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5470315621933779662" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5470315621933779662" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/J8bFV_rJgpQ/google-play-referrer-api-track-and.html" title=" Google Play Referrer API: Track and measure your app installs easily and securely" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-fDFKbzstHko/WhMZgYEbZjI/AAAAAAAAE0o/vrRDhBi7X8M1q4PKmzkesJCDx-lBFyJRgCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/google-play-referrer-api-track-and.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4764176606081809746</id><published>2017-11-17T10:00:00.000-08:00</published><updated>2017-11-20T15:23:03.899-08:00</updated><title type="text">Android Things Contest Winners</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Android Things Contest Winners"&gt;
&lt;meta name="twitter:description" content="This project showcases how Android Things makes it easy to build devices that integrate with the various services provided by the Google Cloud Platform for robust data collection and analysis. It's a clever end-to-end solution that shows understanding of both the problem domain as well as the technology."&gt;
&lt;meta name="twitter:image" content="https://2.bp.blogspot.com/-LeDF7cu6ax4/Wg4iNqTrI-I/AAAAAAAAE0U/hu3hvhQzu38mgS4TNaYhvSX7iNeteibDACLcBGAs/s1600/image2.png"&gt;


&lt;em&gt;Posted by &lt;a href="https://google.com/+DaveSmithDev"&gt;Dave Smith&lt;/a&gt;,
Developer Advocate for IoT&lt;/em&gt;

&lt;p&gt;
Back in September, we &lt;a
href="https://android-developers.googleblog.com/2017/09/android-things-hackster-contest.html"&gt;worked
with Hackster.io&lt;/a&gt; to encourage the developer community to build smart
connected devices using Android Things and post their projects to the &lt;a
href="https://www.hackster.io/contests/Google"&gt;Developer Challenge for Android
Things&lt;/a&gt;. The goal was to showcase the combination of turnkey hardware and a
powerful SDK for building and maintaining devices at scale.
&lt;/p&gt;
&lt;p&gt;
Thank you to everyone who participated in the contest and submitted a project or
idea. We had over 1100 participants register for the contest, resulting in over
350 submissions. Out of that group, we've chosen three winners. Each winner will
receive support and tools from &lt;a
href="https://www.dragoninnovation.com/"&gt;Dragon Innovation&lt;/a&gt; to develop their
concepts into commercial products. Join us in congratulating the following
makers!
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Best Enterprise Project:&lt;/strong&gt; &lt;a
href="https://www.hackster.io/james-puderer/distributed-air-quality-monitoring-using-taxis-69647e"&gt;Distributed
Air Quality Monitoring&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Maker: &lt;a href="https://www.hackster.io/james-puderer"&gt;James
Puderer&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Monitor air quality on a street-by-street level using Android Things, Google
Cloud IoT Core, and taxis!&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
This project showcases how Android Things makes it easy to build devices that
integrate with the various services provided by the Google Cloud Platform for
robust data collection and analysis. It's a clever end-to-end solution that
shows understanding of both the problem domain as well as the technology.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-coD73Bh5fgw/Wg4iErMcraI/AAAAAAAAE0Q/ns2RGetF0JMX5c4GVQB2XqRkYWMmnul3gCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-coD73Bh5fgw/Wg4iErMcraI/AAAAAAAAE0Q/ns2RGetF0JMX5c4GVQB2XqRkYWMmnul3gCLcBGAs/s1600/image3.png" data-original-width="900" data-original-height="675" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;p&gt;
&lt;strong&gt;Best Start Up Project:&lt;/strong&gt; &lt;a
href="https://www.hackster.io/iot-design-shop/brewcentral-great-tasting-all-grain-brewing-for-everyone-d7660a"&gt;BrewCentral&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Maker: &lt;a href="https://www.hackster.io/shum"&gt;Trent Shumay&lt;/a&gt; and &lt;a
href="https://www.hackster.io/spridie"&gt;Steven Pridie&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Brewing amazing beer is a balance of art, science, and ritual. The
BrewCentral system makes it possible for anyone to do an all-grain brew!&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
BrewCentral pairs a real-time PID controller with the touch-enabled UI and
decision-making compute power of Android Things. The result is a system that
accurately controls the time, temperature, and flow rates necessary to achieve
repeatable results during a brew cycle. The planned enhancements for cloud-based
brewing recipes will make this a connected experience for the entire brewing
community.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg2"&gt;&lt;a href="https://2.bp.blogspot.com/-LeDF7cu6ax4/Wg4iNqTrI-I/AAAAAAAAE0U/hu3hvhQzu38mgS4TNaYhvSX7iNeteibDACLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-LeDF7cu6ax4/Wg4iNqTrI-I/AAAAAAAAE0U/hu3hvhQzu38mgS4TNaYhvSX7iNeteibDACLcBGAs/s1600/image2.png" data-original-width="900" data-original-height="675" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;p&gt;
&lt;strong&gt;Best IoT Project:&lt;/strong&gt; &lt;a
href="https://www.hackster.io/hitherejoe/braillebox-braille-news-reader-e86060"&gt;BrailleBox
- Braille News Reader&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Maker: &lt;a href="https://www.hackster.io/hitherejoe"&gt;Joe Birch&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;BrailleBox is a small piece of hardware that empowers users who are
hard-of-sight to read the latest news articles in Braille.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
This project is a great use case of using IoT to have a social impact. The
current proof of concept streams articles from a news feed to the Braille pad,
but this project has the potential to leverage machine learning on the device to
translate additional input from the physical world into a Braille result.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg3"&gt;&lt;a href="https://1.bp.blogspot.com/-3rnvFonLyGA/Wg4iVFf2XVI/AAAAAAAAE0Y/0mkTdPaXtaIvaM2LY6AU5_JAEbxWjYYdgCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-3rnvFonLyGA/Wg4iVFf2XVI/AAAAAAAAE0Y/0mkTdPaXtaIvaM2LY6AU5_JAEbxWjYYdgCLcBGAs/s1600/image1.png" data-original-width="900" data-original-height="675" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;p&gt;
&lt;strong&gt;Honorable Mentions&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The community submitted some amazing projects for the contest, which made the
choice of picking only three winners extremely difficult. Here are a few of our
favorite projects that weren't selected for a prize:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackster.io/avinash-m-m/andro-cart-f05111"&gt;Andro
Cart&lt;/a&gt;: A shopping cart device powered by Android Things. Designed to help
decentralize point of sale (POS) billing.
&lt;li&gt;&lt;a href="https://www.hackster.io/foxlab/sight-for-the-blind-c1e1b9"&gt;SIGHT:
For the Blind&lt;/a&gt;: A pair of smart glasses for the blind, powered by Android
Things and TensorFlow.
&lt;li&gt;&lt;a
href="https://www.hackster.io/mhanuel/industrial-iot-gateway-based-on-android-things-c680d1"&gt;Industrial
IoT Gateway&lt;/a&gt;: A smart industrial gateway for the IoT world based on Android
Things.
&lt;li&gt;&lt;a
href="https://www.hackster.io/oscarsalguero/sentinel-8234b3"&gt;Sentinel&lt;/a&gt;: The
first semi-autonomous home security robot based on Android Things.
&lt;li&gt;&lt;a
href="https://www.hackster.io/daniele-bonaldo/android-things-word-clock-46cc14"&gt;Word
Clock&lt;/a&gt;: A creative take on reading the time, powered by Android Things.
Control it via the Nearby API or the Google Assistant.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
We encourage everyone to check out all the new projects in the &lt;a
href="https://www.hackster.io/google/products/android-things?sort=trending"&gt;Google
Hackster community&lt;/a&gt;, and submit your own as well! You can also join &lt;a
href="https://g.co/iotdev"&gt;Google's IoT Developers Community&lt;/a&gt; on Google+, a
great resource to get updates, ask questions, and discuss ideas. We look forward
to seeing what exciting projects you build!
&lt;/p&gt;

&lt;style&gt;

.blgimg1 img {
width: 80%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

.blgimg2 img {
width: 80%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

.blgimg3 img {
width: 80%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ba8gmksW3yY:evFh39O_rOo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ba8gmksW3yY:evFh39O_rOo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=ba8gmksW3yY:evFh39O_rOo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/ba8gmksW3yY" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4764176606081809746" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4764176606081809746" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/ba8gmksW3yY/android-things-contest-winners.html" title="Android Things Contest Winners" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-coD73Bh5fgw/Wg4iErMcraI/AAAAAAAAE0Q/ns2RGetF0JMX5c4GVQB2XqRkYWMmnul3gCLcBGAs/s72-c/image3.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/android-things-contest-winners.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4294254403849636462</id><published>2017-11-16T10:00:00.000-08:00</published><updated>2017-12-05T14:16:04.148-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="autofill" /><category scheme="http://www.blogger.com/atom/ns#" term="developers" /><category scheme="http://www.blogger.com/atom/ns#" term="Google" /><category scheme="http://www.blogger.com/atom/ns#" term="oreo" /><title type="text">Getting your Android app ready for Autofill</title><content type="html">&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:site" content="@AndroidDevelopersBlog"&gt;
&lt;meta name="twitter:creator" content="@AndroidDevelopers"&gt;
&lt;meta name="twitter:title" content="Getting your Android app ready for Autofill"&gt;
&lt;meta name="twitter:description" content="Forms in your apps can now be filled automatically, and your users no longer have to remember complicated passwords or type the same bits of information more than once."&gt;
&lt;meta name="twitter:image" content="https://4.bp.blogspot.com/-hWn0XHYOflQ/Wg3eUzopncI/AAAAAAAAE0A/QJBPgNQiAQEeVooU68kHHvSd3DXVKZXKwCLcBGAs/s1600/image2.png"&gt;
&lt;em&gt;Posted by Wojtek Kalicinski, Android Developer Advocate, Akshay Kannan,
Product Manager for Android Authentication, and Felipe Leme, Software Engineer on Android Frameworks&lt;/em&gt;
&lt;p&gt;
Starting in Oreo, Autofill makes it easy for users to provide credit cards,
logins, addresses, and other information to apps. Forms in your apps can now be
filled automatically, and your users no longer have to remember complicated
passwords or type the same bits of information more than once.
&lt;/p&gt;
&lt;p&gt;
Users can choose from multiple Autofill services (similar to keyboards today).
By default, we include Autofill with Google, but users can also select any third
party Autofill app of their choice. Users can manage this from
Settings-&gt;System-&gt;Languages&gt;Advanced-&gt;Autofill service.
&lt;/p&gt;
&lt;center&gt;&lt;div class="blgimg1"&gt;&lt;a href="https://4.bp.blogspot.com/-lVe8xrfcdeI/Wgy9BY13hRI/AAAAAAAAEzg/GCVosf8ahRYovP_w4vPZIA_CILqC0_e7wCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-lVe8xrfcdeI/Wgy9BY13hRI/AAAAAAAAEzg/GCVosf8ahRYovP_w4vPZIA_CILqC0_e7wCLcBGAs/s1600/image1.png" data-original-width="1080" data-original-height="1101" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;h3&gt;What's available today&lt;/h3&gt;
&lt;p&gt;
Today, Autofill with Google supports filing credit cards, addresses, logins,
names, and phone numbers. When logging in or creating an account for the first
time, Autofill also allows users to save the new credentials to their account.
If you use WebViews in your app, which many apps do for logins and other
screens, your users can now also benefit from Autofill support, as long as they
have Chrome 61 or later installed.
&lt;/p&gt;
&lt;p&gt;
The Autofill API is open for any developer to implement a service. We are actively
working with &lt;a
href="https://support.1password.com/android-autofill/#set-up-autofill"&gt;1Password&lt;/a&gt;,
&lt;a
href="https://blog.dashlane.com/introducing-dashlane-support-for-android-o-autofill-api/"&gt;Dashlane&lt;/a&gt;,
&lt;a
href="https://blog.keepersecurity.com/2017/09/06/android-o-customers-now-have-the-support-they-need-to-autofill-apps-with-keeperfill/"&gt;Keeper&lt;/a&gt;,
and &lt;a
href="https://blog.lastpass.com/2017/08/lastpass-public-beta-android-oreo.html/"&gt;LastPass&lt;/a&gt;
to help them with their implementations and will be working with other password managers shortly.
We are also creating a new curated collection on the Play Store, which the "Add service" button in Settings will link to. If you
are a password manager developer and would like us to review your app, please &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScem3Xhk4991YKhX3YtPUZ7_YSuFZGacdH5r5yFO8lrSMQNqA/viewform?usp=sf_link"&gt;get
in touch&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;What you need to do as a developer&lt;/h3&gt;
&lt;p&gt;
As an app developer, there are a few simple things you can do to take advantage
of this new functionality and make sure that it works in your apps:
&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Test your app and annotate your views if needed&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;
In many cases, Autofill may work in your app without any effort. But to ensure
consistent behavior, we recommend providing explicit hints to tell the framework
about the contents of your field. You can do this using either the &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#providing_hints_for_autofill"&gt;android:autofillHints
attribute&lt;/a&gt; or the &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#providing_hints_for_autofill"&gt;setAutofillHints()
method&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Similarly, with WebViews in your apps, you can use HTML &lt;a
href="https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill"&gt;Autocomplete
Attributes&lt;/a&gt; to provide hints about fields. Autofill will work in WebViews as
long as you have Chrome 61 or later installed on your device. Even if your app
is using custom views, you can also &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#custom_views_with_standard_view_structure"&gt;define
the metadata that allows autofill to work&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For views where Autofill does not make sense, such as a Captcha or a message
compose box, you can explicitly mark the view as &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#mark_fields_as_important_for_autofill"&gt;IMPORTANT_FOR_AUTOFILL_NO&lt;/a&gt;
(or &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#mark_fields_as_important_for_autofill"&gt;IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS&lt;/a&gt;
in the root of a view hierarchy). Use this field responsibly, and remember that
users can always bypass this by long pressing an EditText and selecting
"Autofill" in the overflow menu.
&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Affiliate your website and mobile app&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;
Autofill with Google can seamlessly share logins across websites and mobile apps
‒ passwords saved through Chrome can also be provided to native apps. But in
order for this to work, as an app developer, you must explicitly declare the
association between your website with your mobile app. This involves 2 steps:
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 1: Host a JSON file at
yourdomain.com/.well-known/assetlinks.json&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;
If you've used technologies like App Links or Google Smart Lock before, you
might have heard about the Digital Asset Links (DAL) file. It's a JSON file
placed under a well known location in your website that lets you make public,
verifiable statements about other apps or websites.
&lt;/p&gt;
&lt;p&gt;
You should follow the &lt;a
href="https://developers.google.com/identity/smartlock-passwords/android/associate-apps-and-sites"&gt;Smart
Lock for Passwords guide&lt;/a&gt; for information about how to create and host the
DAL file correctly on your server. Even though Smart Lock is a more advanced way
of signing users into your app, our Autofill service uses the same
infrastructure to verify app-website associations. What's more, because DAL
files are public, third-party Autofill service developers can also use the
association information to secure their implementations.
&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 2: Update your App's Manifest with the same
information&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;
Once again, follow the &lt;a
href="https://developers.google.com/identity/smartlock-passwords/android/associate-apps-and-sites"&gt;Smart
Lock for Passwords guide&lt;/a&gt; to do this, under "Declare the association in the
Android app."
&lt;/p&gt;
&lt;p&gt;
You'll need to update your app's manifest file with an asset_statements
resource, which links to the URL where your assetlinks.json file is hosted. Once
that's done, you'll need to submit your updated app to the Play Store, and fill
out the &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLSc3FCn8ccGpgXd1jtLBVRlNJ6EhWQK50hNO5jT_9nuqHI79pg/viewform"&gt;Affiliation
Submission Form&lt;/a&gt; for the association to go live.
&lt;/p&gt;
&lt;p&gt;
When using Android Studio 3.0, the App Links Assistant can generate all of this
for you. When you open the DAL generator tool (Tools -&gt; App Links Assistant -&gt;
Open Digital Asset Links File Generator), simply make sure you enable the new
checkbox labeled "Support sharing credentials between the app and website".
&lt;/p&gt;
&lt;div class="blgimg2"&gt;&lt;a href="https://4.bp.blogspot.com/-nex8CCm_6yo/Wgy93-r4s9I/AAAAAAAAEzo/ARQhogm6_4o3Te9SFEEmF2ijoHMZoJgSgCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-nex8CCm_6yo/Wgy93-r4s9I/AAAAAAAAEzo/ARQhogm6_4o3Te9SFEEmF2ijoHMZoJgSgCLcBGAs/s1600/image2.png" data-original-width="847" data-original-height="286" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
Then, click on "Generate Digital Asset Links file", and copy the preview content
to the DAL file hosted on your server and in your app. Please remember to verify
that the selected domain names and certificates are correct.
&lt;/p&gt;
&lt;h3&gt;Future work&lt;/h3&gt;
&lt;p&gt;
It's still very early days for Autofill in Android. We are continuing to make
some major investments going forward to improve the experience, whether you use
Autofill with Google or a third party password manager.
&lt;/p&gt;
&lt;p&gt;
Some of our key areas of investment include:
&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Autofill with Google:&lt;/strong&gt; We want to provide a great experience
out of the box, so we include Autofill with Google with all Oreo devices. We're
constantly improving our field detection and data quality, as well as expanding
our support for saving more types of data.
&lt;li&gt;&lt;strong&gt;WebView support: &lt;/strong&gt;We introduced initial support for filling
WebViews in Chrome 61, and we'll be continuing to test, harden, and make
improvements to this integration over time, so if your app uses WebViews you'll
still be able to benefit from this functionality.
&lt;li&gt;&lt;strong&gt;Third party app support: &lt;/strong&gt;We are working with the ecosystem
to make sure that apps work as intended with the Autofill framework. We urge you
as developers to give your app a spin on Android Oreo and make sure that things
work as expected with Autofill enabled. For more info, see our full
documentation on the &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html"&gt;Autofill
Framework&lt;/a&gt;.&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
If you encounter any issues or have any suggestions for how we can make this
better for you, please &lt;a
href="https://docs.google.com/forms/d/e/1FAIpQLScem3Xhk4991YKhX3YtPUZ7_YSuFZGacdH5r5yFO8lrSMQNqA/viewform?usp=sf_link"&gt;send
us feedback&lt;/a&gt;.
&lt;/p&gt;
&lt;style&gt;

.blgimg1 img {
width: 40%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

.blgimg2 img {
width: 100%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0Yt6ezknNzo:2ZsDU9Top8E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0Yt6ezknNzo:2ZsDU9Top8E:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=0Yt6ezknNzo:2ZsDU9Top8E:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/0Yt6ezknNzo" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4294254403849636462" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4294254403849636462" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/0Yt6ezknNzo/getting-your-android-app-ready-for.html" title="Getting your Android app ready for Autofill" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-lVe8xrfcdeI/Wgy9BY13hRI/AAAAAAAAEzg/GCVosf8ahRYovP_w4vPZIA_CILqC0_e7wCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/getting-your-android-app-ready-for.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-8411749363184308163</id><published>2017-11-13T17:44:00.001-08:00</published><updated>2017-11-14T15:51:08.226-08:00</updated><title type="text">How the Pixel 2’s security module delivers enterprise-grade security</title><content type="html">&lt;img itemprop="image" style="display:none" src="https://2.bp.blogspot.com/-gQdOLhIZ2no/Wgt_PzBklKI/AAAAAAAAEzQ/9jhB7TLO6DkrU2WZGRQam1FD4Ibr3_OKQCLcBGAs/s1600/image1.png"&gt;

&lt;em&gt;Posted by Xiaowen Xin, Android Security Team&lt;/em&gt;
&lt;p&gt;
The new Google Pixel 2 ships with a dedicated hardware security module designed to be robust against physical attacks. This hardware module performs lockscreen passcode verification and  protects your lock screen better than software alone.
&lt;/p&gt;
&lt;p&gt;
To learn more about the new protections, let's first review the role of the lock screen. Enabling a lock screen protects your data, not just against casual thieves, but also against sophisticated attacks. Many Android devices, including all Pixel phones, use your lockscreen passcode to derive the key that is then used to encrypt your data. Before you unlock your phone for the first time after a reboot, an attacker cannot recover the key (and hence your data) without knowing your passcode first. To protect against &lt;a href="https://en.wikipedia.org/wiki/Brute-force_attack"&gt;brute-force&lt;/a&gt; guessing your passcode, devices running Android 7.0+ verify your attempts in a secure environment that limits how often you can repeatedly guess. Only when the secure environment has successfully verified your passcode does it reveal a device and user-specific secret used to derive the disk encryption key.
&lt;/p&gt;
&lt;h2&gt;Benefits of tamper-resistant hardware&lt;/h2&gt;

&lt;p&gt;
The goal of these protections is to prevent attackers from decrypting your data without knowing your passcode, but the protections are only as strong as the secure environment that verifies the passcode. Performing these types of security-critical operations in tamper-resistant hardware significantly increases the difficulty of attacking it.
&lt;/p&gt;
&lt;div class="blogimg1"&gt;&lt;a href="https://2.bp.blogspot.com/-ZHRHG2uOze4/WgTzQSiCZCI/AAAAAAAAEy0/tSKhGTpQf6AuIxWxo-eVQHRPKAmyyvbVgCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-ZHRHG2uOze4/WgTzQSiCZCI/AAAAAAAAEy0/tSKhGTpQf6AuIxWxo-eVQHRPKAmyyvbVgCLcBGAs/s1600/image1.png" data-original-width="624" data-original-height="200" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Tamper-resistant hardware comes in the form of a discrete chip separate from the &lt;a href="https://en.wikipedia.org/wiki/System_on_a_chip"&gt;System on a Chip&lt;/a&gt; (SoC). It includes its own flash, RAM, and other resources inside a single package, so it can fully control its own execution. It can also detect and defend against outside attempts to physically tamper with it. In particular:
&lt;/p&gt;&lt;ul&gt;

&lt;li&gt;Because it has its own dedicated RAM, it's robust against many side-channel information leakage attacks, such as those described in the &lt;a href="https://eprint.iacr.org/2016/980.pdf"&gt;TruSpy cache side-channel paper&lt;/a&gt;.
&lt;li&gt;Because it has its own dedicated flash, it's harder to interfere with its ability to store state persistently.
&lt;li&gt;It loads its operating system and software directly from internal ROM and flash, and it controls all updates to it, so attackers can't directly tamper with its software to inject malicious code.
&lt;li&gt;Tamper-resistant hardware is resilient against many physical fault injection techniques including attempts to run outside normal operating conditions, such as wrong voltage, wrong clock speed, or wrong temperature.  This is standardized in specifications such as the &lt;a href="https://www.commoncriteriaportal.org/files/ppfiles/ssvgpp01.pdf"&gt;SmartCard IC Platform Protection Profile&lt;/a&gt;, and tamper-resistant hardware is often certified to these standards.
&lt;li&gt;Tamper-resistant hardware is usually housed in a package that is resistant to physical penetration and designed to resist side channel attacks, including power analysis, timing analysis, and electromagnetic sniffing, such as described in the &lt;a href="https://eprint.iacr.org/2015/561.pdf"&gt;SoC it to EM paper&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;Security module in Pixel 2&lt;/h2&gt;


&lt;p&gt;
The new Google Pixel 2 ships with a security module built using tamper-resistant hardware that protects your lock screen and your data against many sophisticated hardware attacks.
&lt;/p&gt;
&lt;p&gt;
In addition to all the benefits already mentioned, the security module in Pixel 2 also helps protect you against software-only attacks:
&lt;/p&gt;&lt;ol&gt;

&lt;li&gt;Because it performs very few functions, it has a super small attack surface.
&lt;li&gt;With passcode verification happening in the security module, even in the event of a full compromise elsewhere, the attacker cannot derive your disk encryption key without compromising the security module first.
&lt;li&gt;The security module is designed so that nobody, including Google, can update the passcode verification logic to a weakened version without knowing your passcode first.&lt;/li&gt;&lt;/ol&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;
Just like many other Google products, such as &lt;a href="https://www.chromium.org/developers/design-documents/tpm-usage"&gt;Chromebooks&lt;/a&gt; and &lt;a href="https://cloudplatform.googleblog.com/2017/08/Titan-in-depth-security-in-plaintext.html"&gt;Cloud&lt;/a&gt;, Android and Pixel are investing in additional hardware protections to make your device more secure. With the new Google Pixel 2, your data is safer against an entire class of sophisticated hardware attacks.
&lt;/p&gt;
&lt;style&gt;

.blogimg1 img {
width: 100%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=j6_3mJNJy3Y:70MswjyeqdY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=j6_3mJNJy3Y:70MswjyeqdY:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=j6_3mJNJy3Y:70MswjyeqdY:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/j6_3mJNJy3Y" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8411749363184308163" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8411749363184308163" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/j6_3mJNJy3Y/how-pixel-2s-security-module-delivers.html" title="How the Pixel 2’s security module delivers enterprise-grade security" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://2.bp.blogspot.com/-gQdOLhIZ2no/Wgt_PzBklKI/AAAAAAAAEzQ/9jhB7TLO6DkrU2WZGRQam1FD4Ibr3_OKQCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/how-pixel-2s-security-module-delivers.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1906174342012043203</id><published>2017-11-13T15:00:00.000-08:00</published><updated>2017-11-13T15:00:07.509-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Security" /><title type="text"> 10 things you might be doing wrong when using the SafetyNet Attestation API</title><content type="html">&lt;em&gt;Posted by Oscar Rodriguez, Developer Advocate&lt;/em&gt;
&lt;p&gt;
&lt;a href="https://developer.android.com/training/safetynet/attestation.html"&gt;The
SafetyNet Attestation API&lt;/a&gt; helps you assess the security and compatibility of
the Android environments in which your apps run.  Since it was introduced in
March 2015, many developers have successfully integrated it into their Android
apps to make more informed decisions based on the integrity and compatibility of
the devices running their apps.
&lt;/p&gt;
&lt;p&gt;
Throughout the years, the SafetyNet Attestation API has evolved, and its
adoption has steadily increased. However, as with any security/anti-abuse
related API, there are many common pitfalls that may lead developers into
developing unstable systems, or worse, into a false sense of security.
&lt;/p&gt;
&lt;p&gt;
In this post, we provide a list of the most common mistakes we have seen
developers make when integrating the SafetyNet Attestation API.
&lt;/p&gt;
&lt;h3&gt;1. Not getting an API key&lt;/h3&gt;
&lt;p&gt;
Just like many other Google APIs, the SafetyNet Attestation API requires an API
key in order to run. Furthermore, the SafetyNet Attestation API has a per-key
usage quota. Although you can get this quota increased, you need to provide your
API key to do so.
&lt;/p&gt;
&lt;p&gt;
Getting an API key is easy and free of charge. There is no reason not to get an
API key, so if you haven't already, &lt;a
href="https://developer.android.com/training/safetynet/attestation.html#add-api-key"&gt;get
an API key now&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;2. Not using the latest version of the API&lt;/h3&gt;
&lt;p&gt;
The SafetyNet Attestation API has evolved throughout its history, and with it,
there have been some interface changes. Most recently, with the release of
Google Play services 11.0.0, we revamped the entire SafetyNet API to offer an
interface that is easier and more streamlined to use: the new API uses &lt;code&gt;&lt;a
href="https://developers.google.com/android/reference/com/google/android/gms/safetynet/SafetyNetClient"&gt;SafetyNetClient&lt;/a&gt;&lt;/code&gt;
instead of &lt;code&gt;&lt;a
href="https://developers.google.com/android/reference/com/google/android/gms/safetynet/SafetyNetApi"&gt;SafetyNetApi&lt;/a&gt;&lt;/code&gt;,
which is now deprecated, so make sure you update your implementation to use the
latest version of the API.

&lt;p&gt;
Most devices should have the latest version of Google Play services installed,
but if a device doesn't have Google Play services installed, or doesn't have it
up to date, using the SafetyNet Attestation API may lead to the app becoming
unresponsive or crashing. You can prevent this by &lt;a
href="https://developer.android.com/training/safetynet/attestation.html#check-gps-version"&gt;checking
the installed version of Google Play services&lt;/a&gt; before using the API.
&lt;/p&gt;
&lt;h3&gt;3. Using nonces incorrectly&lt;/h3&gt;
&lt;p&gt;
The SafetyNet Attestation API lets you set a nonce to uniquely and globally
identify each call to the API. Use this feature to prevent a malicious user from
reusing a successful attestation result in place of an unsuccessful result (also
known as a &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Replay_attack"&gt;Replay
Attack&lt;/a&gt;&lt;/em&gt;).
&lt;/p&gt;
&lt;p&gt;
&lt;a
href="https://developer.android.com/training/safetynet/attestation.html#single-use-token"&gt;One
good way to create a nonce&lt;/a&gt; is to create a large (16 bytes or longer) random
number on your server using a cryptographically-secure random function. The
SafetyNet attestation response includes the nonce you set, so make sure you
verify that the returned nonce matches the one you included in the request you
made.
&lt;/p&gt;
&lt;h3&gt;4. Not checking the results on your server&lt;/h3&gt;
&lt;p&gt;
SafetyNet can provide useful signals about the state of the device in which your
app is running. However, if the logic that acts on these signals is only
implemented and enforced directly on the device, an attacker could be able to
modify your app and bypass any checks you perform.
&lt;/p&gt;
&lt;p&gt;
To prevent this situation, you should run any logic that verifies the
attestation result and enforces any actions based on them on a server that you
control and trust.
&lt;/p&gt;
&lt;h3&gt;5. Using the test attestation verification service for production&lt;/h3&gt;
&lt;p&gt;
In order to simplify development and testing of the SafetyNet Attestation API,
Google offers an &lt;a
href="https://developer.android.com/training/safetynet/attestation.html#verify-compat-check"&gt;online
verification service&lt;/a&gt; that checks the digital signature of a SafetyNet
Attestation result using a simple HTTPS request.
&lt;/p&gt;
&lt;p&gt;
As useful as this service may seem, it is designed for test purposes only, and
it has very strict usage quotas that will not be increased upon request.
Instead, you should implement the digital signature verification logic on your
server in a way that it doesn't depend on Google's servers. Most JWT libraries
offer signature verification functionality, and we have &lt;a
href="https://github.com/googlesamples/android-play-safetynet"&gt;code samples&lt;/a&gt;
that show how to perform this verification in Java and C#. We plan to provide
samples for more languages in the future.
&lt;/p&gt;
&lt;h3&gt;6. Not checking the nonce, timestamp, APK name, and hashes&lt;/h3&gt;
&lt;p&gt;
The SafetyNet Attestation API is most widely known for its integrity and
compatibility checks, whose results are returned in &lt;code&gt;ctsProfileMatch&lt;/code&gt;
and &lt;code&gt;basicIntegrity&lt;/code&gt;. Although these two values are indeed very
useful, you should check the other values in the response, as they contain
important information as well.
&lt;/p&gt;
&lt;p&gt;
Use &lt;code&gt;nonce&lt;/code&gt; to match a response to its request,
as explained above, and use &lt;code&gt;timestampMs&lt;/code&gt; to check how much time has passed since you made the
request and you got the response. A delayed response that arrives several hours
or days after the request may suggest suspicious activity.
&lt;/p&gt;
&lt;p&gt;
Use &lt;code&gt;apkPackageName&lt;/code&gt; to check the name of the APK that made the
attestation request, and match &lt;code&gt;apkDigestSha256&lt;/code&gt; and
&lt;code&gt;apkCertificateDigestSha256&lt;/code&gt; to those from your app's signed APK in
Google Play, to get a signal about the integrity of the installed app.
&lt;/p&gt;
&lt;p&gt;
Remember that the trustworthiness of the response as a whole is tied to the
results of &lt;code&gt;ctsProfileMatch&lt;/code&gt; and &lt;code&gt;basicIntegrity&lt;/code&gt;. It is
not unthinkable for a compromised device that fails &lt;code&gt;basicIntegrity&lt;/code&gt;
to have forged the rest of the values in the response.
&lt;/p&gt;
&lt;h3&gt;7. Not understanding the differences between &lt;code&gt;ctsProfileMatch&lt;/code&gt;
and &lt;code&gt;basicIntegrity&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;
The SafetyNet Attestation API initially provided a single value called
&lt;code&gt;basicIntegrity&lt;/code&gt; to help developers determine the integrity of a
device. As the API evolved, we introduced a new, stricter check whose results
appear in a value called &lt;code&gt;ctsProfileMatch&lt;/code&gt;, which allows developers
to more finely evaluate the devices on which their app is running.
&lt;/p&gt;
&lt;p&gt;
In broad terms, &lt;code&gt;basicIntegrity&lt;/code&gt; gives you a signal about the general
&lt;em&gt;integrity&lt;/em&gt; of the device and its API. Rooted devices fail
&lt;code&gt;basicIntegrity&lt;/code&gt;, as do emulators, virtual devices, and devices with
signs of tampering, such as API hooks.
&lt;/p&gt;
&lt;p&gt;
On the other hand, &lt;code&gt;ctsProfileMatch&lt;/code&gt; gives you a much stricter signal
about the &lt;em&gt;compatibility&lt;/em&gt; of the device. Only unmodified devices that
have been certified by Google can pass &lt;code&gt;ctsProfileMatch&lt;/code&gt;. Devices
that will fail &lt;code&gt;ctsProfileMatch&lt;/code&gt; include the following:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Devices that fail &lt;code&gt;basicIntegrity&lt;/code&gt;
&lt;li&gt;Devices with an unlocked bootloader
&lt;li&gt;Devices with a custom system image (custom ROM)
&lt;li&gt;Devices for which the manufactured didn't apply for, or pass, Google
certification
&lt;li&gt;Devices with a system image built directly from the &lt;a
href="https://source.android.com/"&gt;Android Open Source Program&lt;/a&gt; source files
&lt;li&gt;Devices with a system image distributed as part of a beta or developer
preview program (including the &lt;a
href="https://www.google.com/android/beta"&gt;Android Beta Program&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;8. Not having a strategy for timing attestation checks&lt;/h3&gt;
&lt;p&gt;
The SafetyNet Attestation API gives you a snapshot of the state of a device at
the moment when the attestation request was made. A successful attestation
doesn't necessarily mean that the device would have passed attestation in the
past, or that it will in the future.
&lt;/p&gt;
&lt;p&gt;
Because an attestation is just a spot check, you should plan a sensible strategy
for choosing when to make attestation requests. You may choose to require
successful attestations before users make in-app purchases, after a certain
number of days have passed since the last successful attestation, each time your
app is launched, after every reboot, or any other strategy that makes sense for
your app.
&lt;/p&gt;
&lt;p&gt;
Keep in mind that an attestation request is computationally expensive, consumes
battery and bandwidth, and uses your quota. We recommend you plan a strategy to
use the least amount of attestations required to satisfy your use case.
&lt;/p&gt;
&lt;h3&gt;9. Using the SafetyNet Attestation API results as the &lt;em&gt;only&lt;/em&gt; signal
to attack abuse&lt;/h3&gt;
&lt;p&gt;
It may be tempting to think that the SafetyNet Attestation API provides all the
necessary signals for protecting an app against abusers, and use it as the only
signal for building an anti-abuse system.
&lt;/p&gt;
&lt;p&gt;
The SafetyNet Attestation API can only give signals about the &lt;em&gt;state&lt;/em&gt; of
a device, not the &lt;em&gt;intent&lt;/em&gt; of a user, which is what an anti-abuse system
should be designed to detect. Therefore,  you might want to consider including
other signals, such as access logs and behavioral patterns, to more accurately
detect abusive users, and consider not blocking users solely on a failed
attestation. Furthermore, there are many other conditions that cause an
attestation to fail, such as network connection problems, quota issues, and
other transient problems.
&lt;/p&gt;
&lt;p&gt;
In other words, not all users who fail attestation are necessarily abusers, and
not all abusers will necessarily fail attestation. By blocking users solely on
their attestation results, you might be missing abusive users that don't fail
attestations. Furthermore, you might also be blocking legitimate, loyal
customers who fail attestations for reasons other than abuse.
&lt;/p&gt;
&lt;h3&gt;10. Not monitoring and managing your usage quota&lt;/h3&gt;
&lt;p&gt;
As mentioned before, &lt;a
href="https://developer.android.com/training/safetynet/attestation.html#add-api-key"&gt;the
SafetyNet Attestation API is rate limited&lt;/a&gt;, and there is a default quota of
10,000 requests per day for each API key. Although this quota might be enough
for most development, testing, and initial app launches, your app might reach
the default limit as it increases in popularity.
&lt;/p&gt;
&lt;p&gt;
To prevent inadvertently reaching your quota and getting attestation errors, you
should build a system that monitors your usage of the API and warns you well
before you reach your quota so you can get it increased. You should also be
prepared to handle attestation failures because of an exceeded quota and avoid
blocking all your users in this situation.
&lt;/p&gt;
&lt;p&gt;
If you are close to reaching your quota, or expect a short-term spike that may
lead you to exceed your quota, you can &lt;a href="https://goo.gl/Q7iES2"&gt;submit
this form&lt;/a&gt; to request short or long-term increases to the quota for your API
key. This process, as well as the additional quota, is free of charge.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=kCLqg0bTjFI:CYPsIHaZBzw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=kCLqg0bTjFI:CYPsIHaZBzw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=kCLqg0bTjFI:CYPsIHaZBzw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/kCLqg0bTjFI" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1906174342012043203" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1906174342012043203" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/kCLqg0bTjFI/10-things-you-might-be-doing-wrong-when.html" title=" 10 things you might be doing wrong when using the SafetyNet Attestation API" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://android-developers.googleblog.com/2017/11/10-things-you-might-be-doing-wrong-when.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7480026815904549553</id><published>2017-11-09T16:04:00.000-08:00</published><updated>2017-11-13T14:36:46.011-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Activity Recognition" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" /><category scheme="http://www.blogger.com/atom/ns#" term="Driving Do Not Disturb" /><category scheme="http://www.blogger.com/atom/ns#" term="On-Device Machine Learning" /><category scheme="http://www.blogger.com/atom/ns#" term="Pixel" /><title type="text">Making Pixel better for Drivers</title><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;
&lt;em&gt;Posted by Marc Stogaitis and Tajinder Gadh, Software Engineers&lt;/em&gt;
&lt;br /&gt;
&lt;div class="blogimg1"&gt;
&lt;a href="https://4.bp.blogspot.com/-U3dIIoAmeSc/WgTevJaPN_I/AAAAAAAAEyk/a3M8vwbjM44ES9pT7QXzuvAqJTR4B2kYgCLcBGAs/s1600/image1.gif" imageanchor="1"&gt;&lt;img border="0" data-original-height="360" data-original-width="640" src="https://4.bp.blogspot.com/-U3dIIoAmeSc/WgTevJaPN_I/AAAAAAAAEyk/a3M8vwbjM44ES9pT7QXzuvAqJTR4B2kYgCLcBGAs/s1600/image1.gif" /&gt;&lt;/a&gt;&lt;/div&gt;
Driving is an essential part of our daily activities. So at Google we spend a
lot of time thinking how we can make Android devices better and safer for our
users. How we can prevent distracted driving and together build an open
ecosystem to enable safety first smartphone experiences.
&lt;br /&gt;
Recently we launched Driving Do-Not-Disturb on the newly announced Pixel 2
generation of devices.  Once enabled, Driving Do-Not-Disturb automatically puts
your device into a do not disturb mode while driving. During this mode any
incoming messages and notifications are silenced while you can still receive
incoming calls, navigation directions and voice interactions using a connected
Car bluetooth.  The product is designed to limit distractions during driving
while at the same time not getting in the way so users can continue to use
navigation or other similar apps with minimal friction.
&lt;br /&gt;
Behind the scenes, it uses AI powered on-device &lt;a href="https://developers.google.com/location-context/activity-recognition/"&gt;Activity
Recognition&lt;/a&gt; that detects when a person is driving using low power signals
from multiple sensors, bluetooth and WiFi. Activity Recognition uses the Android
Sensor Hub to ensure low latency, low power and accurate driving detection.
&lt;br /&gt;
This is a next step in our journey, but we are far from done.  Early next year
we are introducing the Activity Recognition Transition API, which is the same
API used by Driving Do Not Disturb to build distraction-free driving
experiences.
&lt;br /&gt;
We appreciate the feedback, and will continue to listen to your feedback as the
product evolves.
&lt;br /&gt;
If you have questions about setting up the Driving Do-Not-Disturb, check out our
&lt;a href="https://support.google.com/pixelphone/answer/6111295"&gt;Help Center.&lt;/a&gt;
&lt;br /&gt;
&lt;style&gt;

.blogimg1 img {
width: 100% !important;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

&lt;/style&gt;
&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cROvFVoebD4:BES2LCqBSnc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=cROvFVoebD4:BES2LCqBSnc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=cROvFVoebD4:BES2LCqBSnc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/cROvFVoebD4" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7480026815904549553" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7480026815904549553" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/cROvFVoebD4/making-pixel-better-for-drivers.html" title="Making Pixel better for Drivers" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-U3dIIoAmeSc/WgTevJaPN_I/AAAAAAAAEyk/a3M8vwbjM44ES9pT7QXzuvAqJTR4B2kYgCLcBGAs/s72-c/image1.gif" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/making-pixel-better-for-drivers.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1496698428003793093</id><published>2017-11-07T11:29:00.001-08:00</published><updated>2017-11-13T15:21:17.333-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="game design" /><category scheme="http://www.blogger.com/atom/ns#" term="Games" /><category scheme="http://www.blogger.com/atom/ns#" term="google computer science" /><category scheme="http://www.blogger.com/atom/ns#" term="infinite deviation: games" /><title type="text">Google and Ideas United announce Infinite Deviation: Games winners </title><content type="html">&lt;em&gt; Posted by Kate Brennan and Mathilde Cohen Solal, Google Play and Daraiha Greene, CS in Media &lt;/em&gt; &lt;p&gt;Google Play is committed to empowering new and existing voices in gaming. Earlier this year, we hosted the Indie Games Festival and sponsored the Girls Make Games &lt;a
href="https://plus.google.com/u/0/+GoogleDevelopers/posts/fH3NMC6gSRT"&gt;summer camp&lt;/a&gt;. We also &lt;a
href="https://android-developers.googleblog.com/2017/09/google-and-ideas-united-launch-program.html"&gt;announced&lt;/a&gt; a collaboration between Infinite Deviation and Google Play. &lt;/p&gt;&lt;p&gt;&lt;a href="http://infinitedeviation.com"&gt;Infinite Deviation&lt;/a&gt; is an&lt;em&gt; &lt;/em&gt;initiative created by Google Computer Science (CS) in Media and &lt;a
href="http://ideasunited.com/"&gt;Ideas United&lt;/a&gt; in order to tackle issues of representation in computer science. The collaboration between Google Play and Ideas United brought the Infinite Deviation program to gaming, called &lt;a href="http://infinitedeviation.com/games"&gt;Infinite Deviation: Games&lt;/a&gt;. The program invited game designers from all backgrounds to pitch an original mobile game concept that resonates with underrepresented audiences. &lt;/p&gt;&lt;p&gt;Today we are excited to announce the three teams selected for the Infinite Deviation: Games development program. &lt;/p&gt;&lt;p&gt;A select panel of industry experts reviewed applications and chose the top three ideas. The judging panel included Colleen Macklin (Founder and Co-Director, PETLab), Jeremy Vanhoozer (Senior Creative Director, Plants vs Zombies), Molly Proffitt (CEO, Ker-Chunk Games), Shirin Laor-Raz Salemnia (Founder and CEO, PlayWerks), and Sarah Thomson (Global BD Lead, Indies, Google). These judges scored and delivered personal feedback for each submission, with the three highest scoring games moving into further development. &lt;/p&gt;&lt;p&gt;Here's a closer look at the three games we'll be funding and supporting development over the next six months: &lt;/p&gt;&lt;h3&gt;    Historic Gay Bar Tycoon &lt;/h3&gt;&lt;p&gt;    Mo Cohen &amp; Maria Del Castillo Infantas - Queermo Games &lt;/p&gt;&lt;p&gt;    Historic Gay Bar Tycoon (name pending) starts you off with a brand new queer bar in the 1920s. This game explores the role bars played in LGBT history.  Will your bar survive revolutions, epidemics, and the rise of dating apps? &lt;/p&gt;&lt;center&gt;&lt;div class="blgimg1"&gt;&lt;a href="https://4.bp.blogspot.com/-UCI2QwPVlBI/WgIBS1Pt4-I/AAAAAAAAExQ/mKJoQDVZ4UkaH9XYEC9RKFkY7wC5ciSNACLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://4.bp.blogspot.com/-UCI2QwPVlBI/WgIBS1Pt4-I/AAAAAAAAExQ/mKJoQDVZ4UkaH9XYEC9RKFkY7wC5ciSNACLcBGAs/s1600/image1.png" data-original-width="1323" data-original-height="196" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="blgimg2"&gt;&lt;a href="https://1.bp.blogspot.com/-0q7uQ995ppU/WgIDrLU-QwI/AAAAAAAAExo/RHbUqJ2ruW0EEJEgrpXJQvfQU2OOmaVVQCLcBGAs/s1600/image4.jpg" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-0q7uQ995ppU/WgIDrLU-QwI/AAAAAAAAExo/RHbUqJ2ruW0EEJEgrpXJQvfQU2OOmaVVQCLcBGAs/s1600/image4.jpg" data-original-width="1459" data-original-height="1600" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;&lt;p&gt;Queermo Games is pretty much what it sounds like: a scrappy and small indie game developing team just trying to make more LGBT games. Conveniently, they are also next door neighbors.  Maria is a queer Latina who handles the art and the music, and Mo is a non-binary Jewish queer who tackles the programming and writing. Together, they also work on another longer-term project called Queer Quest with their buddy Hagen. &lt;/p&gt;&lt;h3&gt;    Burn Ban&lt;/h3&gt;&lt;p&gt;    Harrison Barton &amp; Morgan Rowe - Pride Interactive &lt;/p&gt;&lt;p&gt;    Burn Ban is an interactive visual novel in which you assume the role of Twig, a mentally ill queer girl. After showing destructive tendencies to cope with the death of a close friend, she is sent to Camp Sisquoc, a summer retreat for misguided students. After attending the camp for a few days, her dead friend's online social media page mysteriously starts posting again, and Twig and friends are set with determining the mystery behind the posts. &lt;/p&gt;&lt;center&gt;&lt;div class="blgimg3"&gt;&lt;a href="https://3.bp.blogspot.com/-Kqfsjh5Qs0A/WgIEByejhjI/AAAAAAAAExs/a9eN--MZVykkr85xuxofQOYg4def7-psgCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-Kqfsjh5Qs0A/WgIEByejhjI/AAAAAAAAExs/a9eN--MZVykkr85xuxofQOYg4def7-psgCLcBGAs/s1600/image3.png" data-original-width="1085" data-original-height="1600" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;&lt;p&gt;    Pride Interactive is currently made up of two developers, Harrison Barton and Morgan Rowe. Pride Interactive was started as a student game team, and is now continuing on to develop independent projects. Pride Interactive endeavors to further their mission of creating a more diverse environment in the industry through games that deal with serious themes, and diverse character driven narratives. &lt;/p&gt;&lt;h3&gt;    Ghost in the Graveyard&lt;/h3&gt;&lt;p&gt;    Adnan Agha, Vivian Allum, and Armand Silvani - Ghost Stories &lt;/p&gt;&lt;p&gt;    Ghost in the Graveyard is a story-driven mobile mystery game where you snoop through your missing brother's old phone to try and find him. "Can you find a missing person when all you have is their phone?" &lt;/p&gt;&lt;center&gt;&lt;div class="blgimg4"&gt;&lt;a href="https://3.bp.blogspot.com/-S7hqywp5c4M/WgIEK3Z3fHI/AAAAAAAAEx0/-HlSu_YocqwEe9YNXN-JRQ3ns_z-Fwy5QCLcBGAs/s1600/image2.jpg" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-S7hqywp5c4M/WgIEK3Z3fHI/AAAAAAAAEx0/-HlSu_YocqwEe9YNXN-JRQ3ns_z-Fwy5QCLcBGAs/s1600/image2.jpg" data-original-width="1600" data-original-height="1600" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;&lt;p&gt;    Ghost Stories is a three member team from NYC with a mission to create genuine and unique experiences that connect with players. The team consists of Vivian, the lead designer and programmer, Armand, the artist and writer, and Adnan, the programmer and resident ghost. They've previously published a school project to the Xbox One and are thrilled to be able to work with Infinite Deviation to publish to Google Play. &lt;/p&gt;&lt;p&gt;You can find more information about the program at &lt;a href="http://infinitedeviation.com/games"&gt;InfiniteDeviation.com/Games&lt;/a&gt;. Congratulations to the three winners and thanks to all the people who have entered the competition for their continuous work to push the boundaries of gaming design and providing a unique voice to the industry. &lt;/p&gt;&lt;style&gt;

.blgimg1 img {
width: 50%;
border: 0;
margin: 0;
padding: 10px 0 0px 0;
}

.blgimg2 img {
width: 50%;
border: 0;
margin: 0;
padding: 10px 0 10px 0;
}

.blgimg3 img {
width: 50%;
border: 0;
margin: 0;
padding: 20px 0 10px 0;
}

.blgimg4 img {
width: 50%;
border: 0;
margin: 0;
padding: 20px 0 10px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_UI0_8bDJY8:WSeAamvdQEI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_UI0_8bDJY8:WSeAamvdQEI:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=_UI0_8bDJY8:WSeAamvdQEI:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/_UI0_8bDJY8" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1496698428003793093" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1496698428003793093" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/_UI0_8bDJY8/google-and-ideas-united-announce.html" title="Google and Ideas United announce Infinite Deviation: Games winners " /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><feedburner:origLink>http://android-developers.googleblog.com/2017/11/google-and-ideas-united-announce.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-3070562340371344876</id><published>2017-11-06T13:01:00.000-08:00</published><updated>2017-11-08T11:19:25.600-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Architecture Components" /><category scheme="http://www.blogger.com/atom/ns#" term="Best Practices" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><title type="text">Announcing Architecture Components 1.0 Stable</title><content type="html">&lt;p&gt;&lt;em&gt;Posted by Lukas Bergstrom, Product Manager, Android Developer Frameworks Team&lt;/em&gt;&lt;/p&gt;


&lt;div class="imgfloat"&gt;
&lt;img border="0" src="https://4.bp.blogspot.com/-iRzg0p4Y2Vk/WRzePUb2TqI/AAAAAAAAEME/KmIkplhQJL4WL592-YSJanocRgiMu3MqgCLcB/s1600/Screen%2BShot%2B2017-05-17%2Bat%2B4.33.14%2BPM.png" /&gt;&lt;/div&gt;



&lt;p&gt;Android runs on billions of devices, from high-end phones to airplane seatbacks. The Android OS manages resources aggressively to perform well on this huge range of devices, and sometimes that can make building robust apps complicated.  To make it easier, we launched a preview of Architecture Components at Google I/O to provide guidance on app architecture, with libraries for common tasks like lifecycle management and data persistence. Together, these foundational components make it possible to write modular apps with less boilerplate code, so developers can focus on innovating instead of reinventing the wheel - and we hope to keep building on this foundation in the future. &lt;/p&gt;&lt;p&gt;Today we're happy to announce that the Room and Lifecycle &lt;a
href="http://developer.android.com/arch"&gt;Architecture Components&lt;/a&gt; libraries have reached 1.0 stable.  These APIs are ready for production apps and libraries, and are our recommendation for developers looking for help with app architecture and local storage (although they're only recommended, not required.) Lifecycles are now also integrated with the &lt;a
href="https://developer.android.com/topic/libraries/support-library/index.html"&gt;Support Library&lt;/a&gt;, so you can use them with standard classes like AppCompatActivity. &lt;/p&gt;&lt;p&gt;Although we're declaring them stable today, the beta components are already used in apps that together, have billions of installs. Top developers, like Zappos, have  been able to spend more time on what's important thanks to Architecture Components: &lt;/p&gt;



&lt;div class="blogcap" style="border-left:2px solid #ccc; padding:0 1em;"&gt;



&lt;p&gt;Prior to the release of Android Architecture Components we had our own ViewModel implementation. We used Loaders and Dependency Injection to persist our ViewModel through config changes. We recently switched to the Architecture Components ViewModel implementation and all that boilerplate went away. We found that we were able to spend more time on design, business logic and testing, and less on writing boilerplate or worrying about Android lifecycle issues. &lt;/p&gt;

&lt;p&gt;We've also started to use LiveData which hooks directly into the Activity lifecycle. We use it to retrieve and display network data and no longer have to concern ourselves with ​network call subscription management.&lt;/p&gt;
&lt;p&gt;- David Henry, Android Software Engineer, Zappos&lt;/p&gt;

&lt;div class="blogimg1"&gt;&lt;img border="0" src="https://3.bp.blogspot.com/-9KC1IqzY1SQ/WgCsr21x4FI/AAAAAAAAExA/w_e58e-UIH4lFmabMAFz8qVj06i5TC5DQCLcBGAs/s800/zappos-logo.jpg" /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Architecture Components provide a simple, flexible and practical approach that frees developers from some common problems so they can focus on building great experiences. This is based on core building blocks tied together by guidance on app architecture. &lt;/p&gt;&lt;h3&gt;Lifecycles&lt;/h3&gt;&lt;p&gt;Every Android developer has to deal with the operating system starting, stopping and destroying their Activities. That means managing the state of components - such as observables used to update UI - as you move through the lifecycle. &lt;a
href="https://developer.android.com/topic/libraries/architecture/lifecycle.html"&gt;Lifecycles&lt;/a&gt; enables the creation of &lt;em&gt;lifecycle-aware components &lt;/em&gt;that manage their own lifecycles, reducing the possibility of leaks or crashes. The Lifecycle library is the foundation for other Architecture Components like LiveData. &lt;/p&gt;&lt;h3&gt;LiveData&lt;/h3&gt;&lt;p&gt;&lt;a
href="https://developer.android.com/topic/libraries/architecture/livedata.html"&gt;LiveData&lt;/a&gt; is a lifecycle-aware observable that holds data and provides updates. Your UI code subscribes to changes and provides LiveData a reference to its &lt;a
href="https://developer.android.com/reference/android/arch/lifecycle/Lifecycle.html"&gt;Lifecycle&lt;/a&gt;. Because LiveData is lifecycle-aware, it provides updates when its Lifecycle is started or resumed, but stops providing updates when the LifecycleOwner is destroyed. LiveData is a simple way to build reactive UIs that are safer and more performant. &lt;/p&gt;&lt;h3&gt;ViewModel&lt;/h3&gt;&lt;p&gt;&lt;a
href="https://developer.android.com/topic/libraries/architecture/viewmodel.html"&gt;ViewModel&lt;/a&gt; separates ownership of view data and logic from lifecycle-bound entities like Activities and Fragments. A ViewModel is retained until its associated Activity or Fragment is disposed of forever - that means view data survives events like a Fragment being recreated due to rotation. ViewModels not only eliminate common lifecycle issues, they help build UIs that are more modular and easier to test. &lt;/p&gt;&lt;h3&gt;Room&lt;/h3&gt;&lt;p&gt;Nearly all apps need to store data locally. While Android has bundled SQLite with the platform since version 1, using it directly can be painful. &lt;a
href="https://developer.android.com/topic/libraries/architecture/room.html"&gt;Room&lt;/a&gt; is a simple object-mapping layer that provides the full power of SQlite with less boilerplate. Features like compile-time query verification and built-in migration make it easier to build a robust persistence layer, while integration with LiveData lets Room provide database-backed, lifecycle-aware observables. Room blends of simplicity, power and robustness for managing local storage, and we hope you give it a try. &lt;/p&gt;&lt;h3&gt;Guide to App Architecture and more&lt;/h3&gt;&lt;p&gt;Last but not least, we created a &lt;a
href="https://developer.android.com/topic/libraries/architecture/guide.html"&gt;Guide to App Architecture&lt;/a&gt; that provides core principles applicable to all developers, and specific guidance on using Architecture Components together. Because we've heard from you that clear and consistent guidance is important, today we're updating &lt;a href="https://developer.android.com"&gt;developer documentation&lt;/a&gt; to point to Architecture Components where appropriate. We also have a rich set of videos, codelabs and sample apps available at the &lt;a
href="http://developer.android.com/arch"&gt;Architecture Components site&lt;/a&gt;, with more to come. &lt;/p&gt;&lt;h3&gt;Watch this space&lt;/h3&gt;&lt;p&gt;Although the first set of Architecture Components is now stable, we know there's more work to do. Over the last few months, we've listened to &lt;a
href="https://developer.android.com/topic/libraries/architecture/feedback.html"&gt;your feedback &lt;/a&gt;and made improvements. We also recently launched a new Architecture Component, &lt;a
href="https://developer.android.com/topic/libraries/architecture/paging.html"&gt;PagedList&lt;/a&gt;, to alpha, in response to your feedback that handling large datasets with RecyclerView is too difficult. This is just the beginning - we have more major components under development that we're looking to announce in the upcoming months. &lt;/p&gt;&lt;p&gt;Our hope with Architecture Components is to free developers to focus on providing unique new experiences for mobile devices. We're glad we can finally announce them as stable for production use. We'd like to thank the community, which has given such great feedback along the way, and we look forward to continuing the discussion in the comments of this post. Finally, for those of you who've been waiting for this stable launch, &lt;a
href="http://developer.android.com/arch"&gt;get started today&lt;/a&gt;. &lt;/p&gt;

&lt;style&gt;

.blogcap {
font-style:italic;
margin:1.5em 2em 1.5em 2em;
}

.blogimg1 img {
width:25%;
border:0;
margin:0;
padding:;
}

.imgfloat img {
float:right;
width: 42%;
margin: 0;
padding:2em;
border: 0;
padding: 10px 0 10px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=gzCbYrL0260:QghyqjBaPp8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=gzCbYrL0260:QghyqjBaPp8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=gzCbYrL0260:QghyqjBaPp8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/gzCbYrL0260" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3070562340371344876" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3070562340371344876" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/gzCbYrL0260/announcing-architecture-components-10.html" title="Announcing Architecture Components 1.0 Stable" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://4.bp.blogspot.com/-iRzg0p4Y2Vk/WRzePUb2TqI/AAAAAAAAEME/KmIkplhQJL4WL592-YSJanocRgiMu3MqgCLcB/s72-c/Screen%2BShot%2B2017-05-17%2Bat%2B4.33.14%2BPM.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/announcing-architecture-components-10.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6660547999573187406</id><published>2017-11-02T09:05:00.001-07:00</published><updated>2017-11-02T09:24:46.223-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Developer" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Studio 3.0" /><category scheme="http://www.blogger.com/atom/ns#" term="guide" /><category scheme="http://www.blogger.com/atom/ns#" term="Kotlin" /><title type="text"> Update on Kotlin for Android</title><content type="html">&lt;em&gt;Posted by James Lau, Product Manager (&lt;a href="https://twitter.com/jmslau"&gt;twitter.com/jmslau)&lt;/a&gt;&lt;/em&gt;
&lt;p&gt;
Today is the beginning of &lt;a href="https://www.kotlinconf.com"&gt;KotlinConf&lt;/a&gt;.
It's been almost 6 months since we announced Kotlin as a first-class language
for Android at Google I/O. During this period, the number of apps on Google Play
using Kotlin has more than doubled. More than 17% of the projects in Android
Studio 3.0 are now using Kotlin. We are really excited about the strong
momentum, and we are thrilled that Android developers all over the world are
discovering the joy of Kotlin programming.
&lt;/p&gt;
&lt;p&gt;
Kotlin for Android is production-ready. From startups to Fortune 500 companies,
developers are already using Kotlin to build their apps. Developers from
Pinterest, to Expedia, to Basecamp -- and many others -- are finding their use
of Kotlin is increasing productivity and their overall developer happiness
levels. Take a look at some of their experiences with Kotlin below.
&lt;/p&gt;
&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/c6mhYGCKeaI" frameborder="0" gesture="media" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;
With the recent release of &lt;a
href="https://developer.android.com/studio/index.html"&gt;Android Studio 3.0&lt;/a&gt;,
there is now a stable version of our IDE that has Kotlin support built-in. With
&lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html"&gt;Support
Library 27&lt;/a&gt;, we have started adding nullability annotations to make the APIs
friendlier to use in Kotlin. We recently published the &lt;a
href="https://android.github.io/kotlin-guides/"&gt;Android Kotlin Guides on
GitHub&lt;/a&gt; to provide some guidance for Android Kotlin style and interop. We
have also been porting some of our &lt;a
href="https://developer.android.com/samples/index.html?language=kotlin"&gt;Android
samples to Kotlin&lt;/a&gt;, and we are adding Kotlin to our official documentation.
&lt;/p&gt;
&lt;h3&gt;Android Studio 3.0&lt;/h3&gt;
&lt;p&gt;
Last week, we &lt;a
href="https://android-developers.googleblog.com/2017/10/android-studio-30.html"&gt;released
Android Studio 3.0 on the stable channel&lt;/a&gt;. This is the first stable release
of Android Studio that has Kotlin support built-in. Building on the strength of
IntelliJ's Kotlin support, many critical IDE features like code completion and
syntax highlighting work well for Kotlin. You can choose to convert Java code to
Kotlin by using &lt;strong&gt;Code&lt;/strong&gt; → &lt;strong&gt;Convert Java File to Kotlin
File&lt;/strong&gt;, or you can convert snippets of code just by pasting Java code
into a Kotlin file.
&lt;/p&gt;
&lt;p&gt;
Project and code templates have also been updated with Kotlin support. When you
create a new project or add a new code file, you can choose Kotlin as one of the
language options.
&lt;/p&gt;
&lt;p&gt;
The tooling experience with Kotlin is by no means perfect yet. We are aware of
several &lt;a
href="https://developer.android.com/studio/preview/kotlin-issues.html"&gt;known
issues&lt;/a&gt;, and we will continue to improve the IDE support for Kotlin in future
releases.
&lt;/p&gt;
&lt;h3&gt;Android Kotlin Guides&lt;/h3&gt;
&lt;p&gt;
There are two separate  Android Kotlin Guides:
&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="https://android.github.io/kotlin-guides/style.html"&gt;Style guide&lt;/a&gt;
- details a set of rules and coding standards that Google recommends when
writing Kotlin for Android. The guide addresses naming conventions, formatting,
structure of the source contents, and much more.&lt;/li&gt;

&lt;li&gt;&lt;a href="https://android.github.io/kotlin-guides/interop.html"&gt;Interop
guide&lt;/a&gt; - provides a set of rules for creating APIs in the Java and Kotlin
programming languages, so that the consuming code in the other language will
feel idiomatic.&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
We intend these guides to be living documents and will evolve them over time.
They are hosted on GitHub and we welcome your &lt;a
href="https://android.github.io/kotlin-guides/contribute.html"&gt;contributions&lt;/a&gt;.
&lt;/p&gt;
&lt;h3&gt;Nullability Annotations&lt;/h3&gt;
&lt;p&gt;
Null-safety is an important feature of the Kotlin language. It helps developers
avoid NullPointerExceptions and improves the quality of their apps. Null-safety
is a bit more complicated when using Java code from Kotlin. Since any reference
in Java may be null, Kotlin's requirement for strict null-safety becomes
impractical for Java objects. Types declared in Java that do not contain
nullability annotations are called platform types - this means the Kotlin
compiler does not know whether it is nullable or not. When calling methods with
variables of platform types, the Kotlin compiler relaxes null-safety checks.
That means the overall null-safety of your app is weakened.
&lt;/p&gt;
&lt;p&gt;
To let developers take more advantage of Kotlin's strict null-safety, we have
started adding nullability annotations in &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html"&gt;Support
Library 27&lt;/a&gt;. The Support Library contains a huge API surface area, and we
will continue to expand the nullability annotation coverage in the next several
releases. In addition, we will also be adding nullability annotations to other
Android APIs over time.
&lt;/p&gt;
&lt;p&gt;
While the Kotlin adoption growth is fantastic, our commitment to the Java and
C++ programming languages remains unchanged. We've added &lt;a
href="https://developer.android.com/studio/write/java8-support.html"&gt;Java 8
language features support in Android Studio 3.0&lt;/a&gt;, and we've added more &lt;a
href="https://developer.android.com/about/versions/oreo/android-8.0.html#java"&gt;Java
8 language APIs in Android Oreo&lt;/a&gt;. We are also continuing to improve our
support for C++17 in the NDK. So even if you are not using Kotlin, your language
support will continue to improve.
&lt;/p&gt;
&lt;p&gt;
It's an exciting time to be an Android developer. If you haven't had a chance to
try Kotlin, you can get started by learning the &lt;a
href="http://kotlinlang.org/docs/reference/basic-syntax.html"&gt;basic syntax&lt;/a&gt;
and by playing with the excellent &lt;a href="https://try.kotlinlang.org/"&gt;Kotlin
Koans&lt;/a&gt;. When you are ready to use Kotlin in your Android app, you can jump to
the &lt;a href="http://developer.android.com/kotlin"&gt;Android Kotlin page&lt;/a&gt; for
more resources. With Kotlin's Java interoperability and Android Studio's Java to
Kotlin converter, it's easy to start using Kotlin in your project.
&lt;/p&gt;
&lt;p&gt;
Happy Kotlin-ing!
&lt;/p&gt;



&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=EXPknQVK1Us:BSL-xb40icw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=EXPknQVK1Us:BSL-xb40icw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=EXPknQVK1Us:BSL-xb40icw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/EXPknQVK1Us" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6660547999573187406" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6660547999573187406" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/EXPknQVK1Us/update-on-kotlin-for-android.html" title=" Update on Kotlin for Android" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://img.youtube.com/vi/c6mhYGCKeaI/default.jpg" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/11/update-on-kotlin-for-android.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7972427796672324628</id><published>2017-10-31T09:00:00.000-07:00</published><updated>2017-11-01T12:13:13.528-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="BLE" /><category scheme="http://www.blogger.com/atom/ns#" term="Bluetooth" /><category scheme="http://www.blogger.com/atom/ns#" term="Fast Pair" /><title type="text"> Announcing Fast Pair - effortless Bluetooth pairing for Android</title><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;
&lt;em&gt;Posted by Ritesh Nayak M and Ronald Ho, Product Managers&lt;/em&gt;
&lt;br /&gt;
Today we're announcing Fast Pair, a hassle-free process to pair your Bluetooth
devices on all supported Android devices running Google Play services 11.7+ with
compatibility back to Marshmallow (Android 6.0). Fast Pair makes discovery &amp;amp;
pairing of Bluetooth devices easy and is currently rolling out to Android 6.0+
devices. You can try this out with &lt;a href="https://www.blog.google/products/pixel/pixel-buds/"&gt;Google Pixel Buds&lt;/a&gt;
or &lt;a href="https://www.libratone.com/us/q-adapt-headphones/madeforgoogle"&gt;Libratone's
Q Adapt On-Ear&lt;/a&gt;, &lt;a href="https://www.bose.com/en_us/products/headphones/over_ear_headphones/quietcomfort-35-wireless-ii.html"&gt;Bose® QuietComfort 35 II,&lt;/a&gt; and soon on Plantronics Voyager 8200 series wireless headsets.
&lt;br /&gt;
&lt;div class="blogimg"&gt;
&lt;a href="https://1.bp.blogspot.com/-Hfk1w_g_Wf4/WfeWsgYlyRI/AAAAAAAAEv0/wsUPm1BGZaMbBT2LNIKrb54RiC7XoAq0gCLcBGAs/s1600/image1.gif" imageanchor="1"&gt;&lt;img border="0" data-original-height="360" data-original-width="640" src="https://1.bp.blogspot.com/-Hfk1w_g_Wf4/WfeWsgYlyRI/AAAAAAAAEv0/wsUPm1BGZaMbBT2LNIKrb54RiC7XoAq0gCLcBGAs/s1600/image1.gif" /&gt;&lt;/a&gt;&lt;/div&gt;
Ease of use, speed and security are the design principles driving the Fast Pair
specification. Fast Pair uses BLE (Bluetooth Low Energy) for advertising and
discovery and uses classic Bluetooth for pairing. Here's what a Fast Pair flow
looks like:
&lt;br /&gt;
&lt;ol&gt;
&lt;li&gt;Turn on a Fast Pair-enabled device and put it in pairing mode. &lt;ul&gt;
&lt;li&gt;Android scans for BLE broadcasts in close proximity of the user's phone and
discovers a Fast Pair packet (provided Bluetooth and Location is turned on).
 &lt;/li&gt;
&lt;li&gt;This packet is sent to our servers to get back the device's product image,
product name and companion app (if there is one).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The user receives a high priority notification asking them to "Tap to pair" to
the device. The notification contains the product name and image.
&lt;/li&gt;
&lt;li&gt;When the user taps on the notification, we use classic Bluetooth to
establish a connection.
&lt;/li&gt;
&lt;li&gt;A success notification is shown which contains a link to
download the companion app (if there is one). &lt;/li&gt;
&lt;/ol&gt;
Imagine doing all of this without ever fumbling with Bluetooth settings. Users get a seamless and secure pairing
experience and confidence that they're connecting to the right product.
Manufacturers get their brand, device name and companion app in front of the
users.
&lt;br /&gt;
Thanks to a couple of our partners who have been instrumental in prototyping and
testing this spec, and whose feedback has been invaluable to the Fast Pair
effort. If you are a Bluetooth accessory manufacturer and want to adopt Fast
Pair for your device, please &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdGJ34H69JhIkp4H8gBDAiY0mtOHsR86ZBFZ99q3LeFjBPrew/viewform?usp=sf_link"&gt;reach
out to us&lt;/a&gt;.
&lt;br /&gt;
&lt;em&gt;Plantronics is an audio pioneer and a global leader in the communications
industry. From Unified Communications and customer service ecosystems, to data
analytics and Bluetooth headsets, Plantronics delivers high-quality
communications solutions that customers count on today, while relentlessly
innovating on behalf of their future. For more information visit &lt;a href="http://plantronics.com/"&gt;plantronics.com&lt;/a&gt;&lt;/em&gt;
&lt;br /&gt;
&lt;em&gt;Libratone is on a mission to liberate sound and to expand peoples'
experiences with music in the era of streaming. Founded in 2009 in Denmark,
Libratone is one of the first audio companies to consider the aesthetics of
speakers – to move them out of the corner of the room and into the center and
onward, for the consumer on the move. For more information visit &lt;a href="https://www.libratone.com/"&gt;libratone.com&lt;/a&gt;&lt;/em&gt;
&lt;br /&gt;
&lt;style&gt;
.blogimg img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

&lt;/style&gt;&lt;/div&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=uIgZReUESo8:WJ3EGVwm-Is:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=uIgZReUESo8:WJ3EGVwm-Is:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=uIgZReUESo8:WJ3EGVwm-Is:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/uIgZReUESo8" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7972427796672324628" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7972427796672324628" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/uIgZReUESo8/announcing-fast-pair-effortless.html" title=" Announcing Fast Pair - effortless Bluetooth pairing for Android" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-Hfk1w_g_Wf4/WfeWsgYlyRI/AAAAAAAAEv0/wsUPm1BGZaMbBT2LNIKrb54RiC7XoAq0gCLcBGAs/s72-c/image1.gif" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/10/announcing-fast-pair-effortless.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-2841728332626847190</id><published>2017-10-30T09:09:00.000-07:00</published><updated>2017-10-30T09:09:12.379-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="GNSS" /><category scheme="http://www.blogger.com/atom/ns#" term="GPS" /><category scheme="http://www.blogger.com/atom/ns#" term="Location" /><title type="text"> GNSS Analysis Tools from Google</title><content type="html">&lt;em&gt;Posted by Frank van Diggelen, Software Engineer&lt;/em&gt;
&lt;p&gt;
Last year in Android Nougat, we  introduced APIs for retrieving Global
Navigation Satellite System (GNSS) Raw measurements from Android devices. This
past week, we publicly released &lt;a
href="https://developer.android.com/guide/topics/sensors/gnss.html#analyze"&gt;GNSS
Analysis Tools&lt;/a&gt; to process and analyze these measurements.
&lt;/p&gt;
&lt;p&gt;
Android powers over 2 billion devices, and Android phones are made by many
different manufacturers. The primary intent of these tools is to enable device
manufacturers to see in detail how well the GNSS receivers are working in each
particular device design, and thus improve the design and GNSS performance in
their devices. However, with the tools publicly available, there is also
significant value to the research and app developer community.
&lt;/p&gt;
&lt;h3&gt;How to use the tool&lt;/h3&gt;
&lt;p&gt;
The GNSS Analysis Tool is a desktop application that takes in raw the GNSS
Measurements logged from your Android device as input.
&lt;/p&gt;
&lt;div class="blogimg"&gt;&lt;a href="https://3.bp.blogspot.com/-AYjwvz3YgJE/WfdHV81unrI/AAAAAAAAEvM/nQ48UbiCJgs2a8FfxQ4NQ_7xpM4lugI8wCLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-AYjwvz3YgJE/WfdHV81unrI/AAAAAAAAEvM/nQ48UbiCJgs2a8FfxQ4NQ_7xpM4lugI8wCLcBGAs/s1600/image1.png" data-original-width="1011" data-original-height="532" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
This desktop application provides interactive plots, organized into three
columns showing the behavior of the RF, Clock, and Measurements. This data
allows you to see the behavior of the GNSS receiver in great detail, including
receiver clock offset and drift to the order of 1 nanosecond and 1 ppb and
measurement errors on a satellite-by-satellite basis. This allows you to do
sophisticated analysis at a level that, until now, was almost inaccessible to
anyone but the chip manufacturers themselves.
&lt;/p&gt;
&lt;p&gt;

The tools support multi-constellation (GPS, GLONASS, Galileo, BeiDou and QZSS)
and multi-frequency. The image below shows the satellite locations for L1, L5,
E1 and E5 signals tracked by a dual frequency chip.
&lt;/p&gt;
&lt;div class="blogimg2"&gt;&lt;a href="https://3.bp.blogspot.com/-lMjD-BF4N9M/WfdIZjAW5MI/AAAAAAAAEvc/gXSkE8lAhEwmHdjrb3tGqRExkSVv6HhrwCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-lMjD-BF4N9M/WfdIZjAW5MI/AAAAAAAAEvc/gXSkE8lAhEwmHdjrb3tGqRExkSVv6HhrwCLcBGAs/s1600/image2.png" data-original-width="702" data-original-height="525" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
The tools provide an interactive control screen from which you can manipulate
the plots, shown below. From this control screen, you can change the background
color, enable the Menu Bars for printing or saving, and select specific
satellites for the plots.
&lt;/p&gt;
&lt;div class="blogimg3"&gt;&lt;a href="https://2.bp.blogspot.com/-_V_yv3csjzA/WfdIkS6QvAI/AAAAAAAAEvg/KbjmwHovjrkcWJVcEwTfzKZDHhwuHl60wCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-_V_yv3csjzA/WfdIkS6QvAI/AAAAAAAAEvg/KbjmwHovjrkcWJVcEwTfzKZDHhwuHl60wCLcBGAs/s1600/image3.png" data-original-width="1380" data-original-height="1437" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;Receiver test report&lt;/h3&gt;
&lt;p&gt;
The tools also provide automatic test reports of receivers. Click "Make Report"
to automatically create the test report. The report evaluates the API
implementation, Received Signal, Clock behavior, and Measurement accuracy. In
each case it will report PASS or FAIL based on the performance against known
good benchmarks. This test report is primarily meant for the device
manufacturers to use as they iterate on the design and implementation of a new
device. A sample report is shown below.
&lt;/p&gt;
&lt;div class="blogimg4"&gt;&lt;a href="https://1.bp.blogspot.com/-ycWfMtG-79Q/WfdIrQO0EDI/AAAAAAAAEvk/x6lPOxyeNAs-o6l4YEQA-N55UKdfUFJIwCLcBGAs/s1600/image4.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-ycWfMtG-79Q/WfdIrQO0EDI/AAAAAAAAEvk/x6lPOxyeNAs-o6l4YEQA-N55UKdfUFJIwCLcBGAs/s1600/image4.png" data-original-width="507" data-original-height="835" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
Our goal with providing these Analysis Tools is to empower device manufacturers,
researchers, and developers with data and knowledge to make Android even better
for our customers. You can visit the &lt;a href="http://g.co/gnsstools"&gt;GNSS
Measurement site&lt;/a&gt; to learn more and download this application.
&lt;/p&gt;
&lt;style&gt;
.blogimg img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}


.blogimg2 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg3 img {
width: 85%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg4 img {
width: 60%;
margin: 0;
border: 3px solid gray;
padding: 10 px 0 10 px 0;
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_GpFxfjnxzU:KYLSfVGOwDw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=_GpFxfjnxzU:KYLSfVGOwDw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=_GpFxfjnxzU:KYLSfVGOwDw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/_GpFxfjnxzU" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2841728332626847190" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2841728332626847190" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/_GpFxfjnxzU/gnss-analysis-tools-from-google.html" title=" GNSS Analysis Tools from Google" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://3.bp.blogspot.com/-AYjwvz3YgJE/WfdHV81unrI/AAAAAAAAEvM/nQ48UbiCJgs2a8FfxQ4NQ_7xpM4lugI8wCLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/10/gnss-analysis-tools-from-google.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-5650264549101203502</id><published>2017-10-25T11:18:00.000-07:00</published><updated>2017-10-31T11:36:22.307-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="android81" /><category scheme="http://www.blogger.com/atom/ns#" term="AndroidO" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><title type="text">Android 8.1 Developer Preview</title><content type="html">&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt; &lt;div class="imgfloat"&gt;&lt;a href="https://1.bp.blogspot.com/-XdLBumGqekw/WfC76LXeUtI/AAAAAAAAEu8/dxNEmaqXf6Ik9v_-BiGENYw8xJxhGcl-ACLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-XdLBumGqekw/WfC76LXeUtI/AAAAAAAAEu8/dxNEmaqXf6Ik9v_-BiGENYw8xJxhGcl-ACLcBGAs/s1600/image1.png" data-original-width="716" data-original-height="716" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Today we're giving you an early look at Android 8.1. This update to Android Oreo includes a set of targeted enhancements including optimizations for &lt;strong&gt;Android Go&lt;/strong&gt; (for  devices with 1GB or less of memory) and a new &lt;strong&gt;Neural Networks API&lt;/strong&gt; to accelerate on-device machine intelligence. We've also included a few smaller enhancements to Oreo in response to user and developer feedback. &lt;/p&gt;&lt;p&gt;We're bringing you this Developer Preview so you can get your apps ready; we've already been helping device makers prepare for this new version. We recommend starting soon -- we're expecting the final public version &lt;a
href="https://developer.android.com/preview/overview.html"&gt;in December&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;It's easy to get Android 8.1 Developer Preview on your Pixel or Nexus device. Just enroll in the &lt;a href="http://www.android.com/beta"&gt;Android Beta Program&lt;/a&gt; -- you'll soon receive an over-the-air update to Android 8.1 beta. If you enrolled previously, you're all set, there's no need to re-enroll. The Developer Preview will be available for &lt;a
href="https://www.blog.google/products/pixel/new-pixel-2/"&gt;Pixel 2 and Pixel 2 XL devices&lt;/a&gt;, as well as for Pixel, Pixel XL, Pixel C, Nexus 5X, Nexus 6P, and the Android emulator. &lt;/p&gt;&lt;h3&gt;What's in Android 8.1? &lt;/h3&gt;&lt;p&gt;Android 8.1 includes select new features and developer APIs (API level 27), along with the latest optimizations, bug fixes, and security patches. Some of the new APIs include: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Android Go memory optimizations and targeting&lt;/strong&gt; -- Android 8.1 includes a set of memory optimizations for &lt;a
href="https://android-developers.googleblog.com/2017/05/whats-new-in-android-o-developer.html"&gt;Android Go&lt;/a&gt; configurations (1GB or less of memory). We've added &lt;a
href="https://developer.android.com/reference/android/content/pm/PackageManager.html#FEATURE_RAM_LOW"&gt;new hardware feature constants&lt;/a&gt; so you can now target the distribution of your apps and APK splits to normal or low-RAM devices running Android 8.1 and later.&lt;br /&gt;
&lt;li&gt;&lt;strong&gt;Neural Networks API&lt;/strong&gt; -- as part of our efforts to bring machine intelligence to Android, we've added a &lt;a
href="https://developer.android.com/ndk/guides/neuralnetworks/index.html"&gt;Neural Networks API&lt;/a&gt; via the NDK. It enables hardware-accelerated inference operations on supported devices. We designed the Neural Networks API as a foundational layer for ML frameworks like TensorFlow Lite -- Google's upcoming cross-platform ML framework for mobile -- as well as Caffe2 and others. Stay tuned for TensorFlow Lite announcements.&lt;br /&gt;
&lt;li&gt;&lt;strong&gt;Autofill enhancements&lt;/strong&gt; -- we've made it easier for password managers and other Autofill services to use the &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html"&gt;Autofill framework&lt;/a&gt;. For example, we've added support for more UI customization of the Save dialog, as well as &lt;a
href="https://developer.android.com/reference/android/widget/BaseAdapter.html#setAutofillOptions(java.lang.CharSequence...)"&gt;setAutofillOptions()&lt;/a&gt; for users to set credit card expiration using a spinner.&lt;br /&gt;
&lt;li&gt;&lt;strong&gt;Shared memory API&lt;/strong&gt;  --  this new API lets apps allocate shared memory for faster access to common data. Apps can map anonymous shared memory and manage protection controls using the &lt;a
href="https://developer.android.com/reference/android/os/SharedMemory.html"&gt;SharedMemory&lt;/a&gt; API. The API is parcelable, AIDL friendly, and exposes useful features like removing write permissions.&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;p&gt;Take a look at &lt;a
href="https://developer.android.com/preview/api-overview.html"&gt;Android 8.1 site&lt;/a&gt; for more information, including the &lt;a
href="https://developer.android.com/sdk/api_diff/27/changes.html"&gt;diff report&lt;/a&gt; and &lt;a href="https://developer.android.com/reference/"&gt;updated API reference&lt;/a&gt; docs. &lt;/p&gt;&lt;h3&gt;Test your apps on Android 8.1&lt;/h3&gt;&lt;p&gt;With the consumer launch coming &lt;a
href="https://developer.android.com/preview/overview.html"&gt;in December&lt;/a&gt;, it's important to test your current app now. This gives users a seamless transition to Android 8.1 when it arrives on their devices. &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Just enroll your eligible device in &lt;a
href="http://www.android.com/beta"&gt;Android Beta&lt;/a&gt; to get the latest update, then install your app from Google Play and test. If you don't have a Pixel or Nexus device, you can set up an Android 8.1 emulator for testing instead. If you notice any issues, fix them and update your app in Google Play right away -- without changing the app's platform targeting. &lt;/p&gt;&lt;h3&gt;Build with new features and APIs&lt;/h3&gt;&lt;p&gt;When you're ready, take advantage of the new features and APIs in Android 8.1, which we've already finalized as API Level 27. For an overview of what's new, take a look at &lt;a
href="https://developer.android.com/preview/api-overview.html"&gt;Android 8.1 for Developers&lt;/a&gt;. You can also extend your apps with established Android Oreo features as well, see the &lt;a
href="https://developer.android.com/about/versions/oreo/android-8.0.html"&gt;Android Oreo site&lt;/a&gt; for details. &lt;/p&gt;&lt;p&gt;If your app uses forms, make sure to test them with &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html"&gt;autofill&lt;/a&gt; so that users can take advantage of this convenient feature. Enable "Autofill with Google" or a similar service in Settings and test the form fills to make sure they work as expected. We strongly recommend &lt;a
href="https://developer.android.com/guide/topics/text/autofill.html#providing_hints_for_autofill"&gt;providing explicit hints&lt;/a&gt; about your fields, and also &lt;a
href="https://developers.google.com/identity/smartlock-passwords/android/associate-apps-and-sites"&gt;associating your website and mobile app&lt;/a&gt;, so that logins can be shared between them. &lt;/p&gt;


&lt;h3&gt;Speed your development with Android Studio&lt;/h3&gt;&lt;p&gt;To build with Android 8.1, we recommend updating to &lt;a
href="https://android-developers.googleblog.com/2017/10/android-studio-30.html"&gt;Android Studio 3.0&lt;/a&gt;, which is now &lt;a
href="https://developer.android.com/studio/index.html"&gt;available from the stable channel&lt;/a&gt;. On top of  the new app &lt;a
href="https://developer.android.com/studio/profile/android-profiler.html"&gt;performance profiling tools&lt;/a&gt;, support for the &lt;a
href="http://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html"&gt;Kotlin programming language&lt;/a&gt;, and Gradle build optimizations, Android Studio 3.0 makes it easier to develop with Android Oreo features like &lt;a
href="https://android-developers.googleblog.com/2017/05/android-instant-apps-is-open-to-all.html"&gt;Instant Apps&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;XML Fonts&lt;/a&gt;, &lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;downloadable fonts&lt;/a&gt;, and &lt;a
href="https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive.html"&gt;adaptive icons&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;We also recommend updating to the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;Android Support Library 27.0.0&lt;/a&gt;, which is available from &lt;a
href="https://developer.android.com/studio/build/dependencies.html#google-maven"&gt;Google's Maven repository&lt;/a&gt;. New in this version are: a &lt;a
href="https://developer.android.com/reference/android/support/content/ContentPager.html"&gt;ContentPager&lt;/a&gt; library for efficiently loading "paged" data on a background thread; ViewCompat &lt;a
href="https://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getImportantForAutofill(android.view.View)"&gt;wrappers&lt;/a&gt; for Autofill methods; an &lt;a
href="https://developer.android.com/wear/releases/index.html"&gt;AmbientMode&lt;/a&gt; headless fragment that improves Wear ambient mode support, fullscreen Trusted Web Activities, and more. See the &lt;a
href="https://developer.android.com/topic/libraries/support-library/revisions.html#27-0-0"&gt;version notes&lt;/a&gt; for more information. &lt;/p&gt;&lt;p&gt;You can update your project's &lt;code&gt;compileSdkVersion&lt;/code&gt; to API 27 to compile against the official Android 8.1 APIs. We also recommend updating your app's &lt;code&gt;targetSdkVersion&lt;/code&gt; to API 27 to test with compatibility behaviors disabled. See the &lt;a
href="https://developer.android.com/preview/setup-sdk.html"&gt;this guide&lt;/a&gt; for details on how to set up your environment to build with Android 8.1. &lt;/p&gt;&lt;h3&gt;Publish your updates to Google Play&lt;/h3&gt;&lt;p&gt;The Android 8.1 APIs are already final, so we've opened Google Play for apps compiled against or targeting API level 27. When you're ready, you can publish your APK updates in your alpha, beta, or production channels.  Make sure that your updated app runs well on Android 8.1 as well as older versions. We recommend using Google Play's &lt;a
href="https://developer.android.com/distribute/engage/beta.html?utm_campaign=android_launch_npreview_061516&amp;utm_source=anddev&amp;utm_medium=blog"&gt;beta testing feature&lt;/a&gt; to run an alpha test on small group of users, then run a much larger open beta test. When you're ready to launch your update, you can use a &lt;a
href="https://developer.android.com/distribute/best-practices/launch/progressive-updates.html"&gt;staged rollout&lt;/a&gt;. We're looking forward to seeing your app updates! &lt;/p&gt;&lt;h3&gt;Give us your feedback!&lt;/h3&gt;&lt;p&gt;As always, your feedback is crucial, so please &lt;a
href="https://developer.android.com/preview/feedback.html"&gt;let us know what you think&lt;/a&gt;. We've set up different hotlists where you report &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=809005"&gt;Android platform and tools issues&lt;/a&gt;, &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=808305"&gt;app compatibility issues&lt;/a&gt;, and &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=809305"&gt;third-party SDKs and tools issues&lt;/a&gt;. We also have a new hotlist for &lt;a
href="https://issuetracker.google.com/issues/new?component=190602&amp;template=1024216"&gt;Neural Networks API issues&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;You can also give us feedback through the &lt;a
href="https://plus.google.com/communities/105153134372062985968/stream/755bb91d-c101-4e32-9277-1e560c4e26d2"&gt;Android Developer community&lt;/a&gt; or &lt;a
href="https://plus.google.com/communities/106765800802768335079"&gt;Android Beta community&lt;/a&gt; as we work towards the consumer release in December. &lt;/p&gt;&lt;style&gt;
.imgfloat img {
float:right;
width: 30%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}
&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=fOUue7TkMuo:UBt6sgLBGuQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=fOUue7TkMuo:UBt6sgLBGuQ:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=fOUue7TkMuo:UBt6sgLBGuQ:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/fOUue7TkMuo" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5650264549101203502" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5650264549101203502" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/fOUue7TkMuo/android-81-developer-preview.html" title="Android 8.1 Developer Preview" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-XdLBumGqekw/WfC76LXeUtI/AAAAAAAAEu8/dxNEmaqXf6Ik9v_-BiGENYw8xJxhGcl-ACLcBGAs/s72-c/image1.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/10/android-81-developer-preview.html</feedburner:origLink></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-8367048466328774082</id><published>2017-10-25T10:50:00.000-07:00</published><updated>2017-10-26T09:31:22.057-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" /><category scheme="http://www.blogger.com/atom/ns#" term="Develop" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><title type="text">Android Studio 3.0</title><content type="html">&lt;em&gt;Posted by &lt;a href="https://www.google.com/+JamalEason"&gt;Jamal Eason&lt;/a&gt;, Product
Manager, Android&lt;/em&gt;
&lt;div class="floatimg"&gt;&lt;a href="https://1.bp.blogspot.com/-DAAJWGccTCQ/We_MGiMuSFI/AAAAAAAAEtk/5_COppUTDusIIx725jENI3fd9rqlRl0gQCLcBGAs/s1600/image8.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-DAAJWGccTCQ/We_MGiMuSFI/AAAAAAAAEtk/5_COppUTDusIIx725jENI3fd9rqlRl0gQCLcBGAs/s1600/image8.png" data-original-width="1024" data-original-height="1024" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Android Studio 3.0 is ready to download today. Announced at Google I/O 2017,
Android Studio 3.0 is a large update focused on accelerating your app
development on Android.
&lt;/p&gt;
&lt;p&gt;
This release of Android Studio is packed with many new updates, but there are
three major feature areas you do not want to miss, including: a new suite of app
profiling tools to quickly diagnose performance issues, support for the Kotlin
programming language, and a new set of tools and wizards to accelerate your
development on the latest Android Oreo APIs.
&lt;/p&gt;
&lt;p&gt;
We also invested time in improving stability and performance across many areas
of Android Studio. Thanks to your feedback during the preview versions of
Android Studio 3.0! If you are looking for high stability, want to build high
quality apps for Android Oreo, develop with the Kotlin language, or use the
latest in Android app performance tools, then you should download Android Studio
3.0 today.
&lt;/p&gt;
&lt;p&gt;
Check out the the list of new features in Android Studio 3.0 below, organized by
key developer flows.
&lt;/p&gt;
&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/0n9sBgds-Hs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;center&gt;&lt;em&gt;What’s new in Android Studio 3.0&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;Develop &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kotlin Programming Language&lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;As &lt;a
href="https://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html"&gt;announced
at Google I/O 2017&lt;/a&gt;, the &lt;a href="https://kotlinlang.org/"&gt;Kotlin&lt;/a&gt;
programming language is now officially supported for Android development. Kotlin
is an expressive and concise language that is interoperable with existing
Android languages and runtimes, which means you can use as little or as much of
the language in your app as you want.  Kotlin is a production-ready language
used by many popular Android apps on Google Play today. 
&lt;p&gt;
This release of Android Studio is the first milestone of bundles the Kotlin
language support inside the IDE. Many of your favorite features such as code
completion and syntax highlighting work well this release and we will continue
to improve the remaining editor features in upcoming release.  You can choose to
add Kotlin to your project using the built-in conversion tool found under
&lt;strong&gt;Code&lt;/strong&gt; → &lt;strong&gt;Convert Java File to Kotlin File&lt;/strong&gt;, or
create a Kotlin enabled project with the New Project Wizard. Lean more about
Kotlin language &lt;a href="https://d.android.com/kotlin/get-started.html"&gt;support
in Android Studio&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;div class="blogimg1"&gt;&lt;a href="https://1.bp.blogspot.com/-ezg28xkLIKw/We_NGmvtLqI/AAAAAAAAEts/B5GMGAi639gLNAv9AHMh6yAjtd3ETDVBACLcBGAs/s1600/image1.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-ezg28xkLIKw/We_NGmvtLqI/AAAAAAAAEts/B5GMGAi639gLNAv9AHMh6yAjtd3ETDVBACLcBGAs/s1600/image1.png" data-original-width="1545" data-original-height="652" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;&lt;em&gt;Kotlin Language Conversion in Android Studio&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 8 Language features&lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;In Android
Studio 3.0, we are continuing to improve the support for Java 8 language
features. With the &lt;a
href="https://android-developers.googleblog.com/2017/03/future-of-java-8-language-feature.html"&gt;migration
to a javac&lt;/a&gt; based toolchain, using Java 8 language features in your project
is even easier. To update your project to support the new Java 8 Language
toolchain, simply update your &lt;em&gt;Source&lt;/em&gt; and &lt;em&gt;Target&lt;/em&gt; compatibility
levels to 1.8 in the Project Structure dialog. &lt;a
href="https://developer.android.com/studio/write/java8-support.html"&gt;Learn
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Layout Editor&lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;The component tree in the
Layout Editor has better drag-and-drop view insertions, and a new error
panel. &lt;a
href="https://developer.android.com/studio/write/layout-editor.html"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Adaptive Icon Wizard&lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;The new wizard
creates  a set of launcher icon assets and provides previews of how your
adaptive icon will look with different launcher screen icon masks. Support for
VectorDrawable layers is new for this release. &lt;a
href="https://developer.android.com/studio/write/image-asset-studio.html"&gt;Learn
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XML Fonts &amp; Downloadable Fonts &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;If you
target Android Oreo (API Level 26 and higher) for your Android app, you can now
add custom fonts &amp; downloadable fonts using XML with Android Studio
3.0.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android Things Support &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;Android Studio
3.0 includes a new set of templates in the New Project wizard and the New Module
wizard to develop for the Android Things platform.  &lt;a
href="https://developer.android.com/things/index.html"&gt;Learn more&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IntelliJ Platform Update&lt;/strong&gt;: Android Studio 3.0 includes the
IntelliJ 2017.1 release, which has features such as Java 8 language refactoring,
parameter hints, semantic highlighting, draggable breakpoints, enhanced version
control search, and more. &lt;a
href="https://www.jetbrains.com/idea/whatsnew/#v2017-1"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;Build&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Instant App Support &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;With this release of
Android Studio, you can add &lt;a
href="https://developer.android.com/topic/instant-apps/index.html"&gt;Instant
Apps&lt;/a&gt; features to your project. Available for&lt;a
href="https://android-developers.googleblog.com/2017/05/android-instant-apps-is-open-to-all.html"&gt;
full development earlier this year&lt;/a&gt;, Instant Apps are lightweight Android
apps that your users can immediately run without installation.  &lt;a
href="https://developer.android.com/topic/instant-apps/index.html"&gt;Learn
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Build Speed Improvements &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;To further
improve the speed of Gradle for larger scale projects with many modules, we
introduced a rare &lt;em&gt;breaking API change in the Android Gradle Plugin&lt;/em&gt; to
improve scalability and build times. This change is one of reasons we jumped
version numbers from Android Studio 2.4 to 3.0.  If you depend on APIs provided
by the previous Gradle plugin you should validate compatibility with the new
plugin and migrate to the new APIs. To test, update the plugin version in your
&lt;code&gt;build.gradle&lt;/code&gt; file.  &lt;a
href="https://developer.android.com/studio/preview/features/new-android-plugin.html"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Google's Maven Repository &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;To facilitate
smaller and faster updates, Android Studio 3.0 utilizes Google's Maven
Repository by default instead of using the Android SDK Manager to find updates
to Android Support Library, Google Play Services, and Firebase Maven
dependencies. Used in combination with the latest command line &lt;a
href="https://developer.android.com/studio/intro/update.html#download-with-gradle"&gt;SDK
Manager tool&lt;/a&gt; and &lt;a
href="https://developer.android.com/studio/intro/update.html#download-with-gradle"&gt;Gradle&lt;/a&gt;,
Continuous Integration builds should migrate to Google's Maven Repository for
future Maven repository updates.  &lt;a
href="https://developer.android.com/studio/build/dependencies.html#google-maven"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;Test &amp; Debug&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Google Play System Images &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;We also
updated the emulator system images for Android Oreo to now include the Google
Play Store. Bundling in the Google Play store allows you to do end-to-end
testing of apps with Google Play, and provides a convenient way to keep Google
Play services up-to-date in your Android Virtual Device (AVD). Just as Google
Play services updates on physical devices, you can trigger the same updates on
your AVDs.  
&lt;div class="blogimg2"&gt;&lt;a href="https://3.bp.blogspot.com/-8UIAKpGRG-M/We_OiL3ry_I/AAAAAAAAEt4/_5rhIttX47QS0bptRPo9DU7X9Ak2ycG_QCLcBGAs/s1600/image4.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-8UIAKpGRG-M/We_OiL3ry_I/AAAAAAAAEt4/_5rhIttX47QS0bptRPo9DU7X9Ak2ycG_QCLcBGAs/s1600/image4.png" data-original-width="1122" data-original-height="1076" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;&lt;em&gt;Google Play Store in Android Emulator&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;p&gt;
To ensure app security and a consistent experience with physical devices, the
emulator system images with the Google Play store included are signed with a
release key. This means you will not be able to get elevated privileges. If you
require elevated privileges (root) to aid with your app troubleshooting, you can
use the Android Open Source Project (AOSP) emulator system images that do not
include Google apps or services. &lt;a
href="https://developer.android.com/studio/run/emulator.html"&gt;Learn more.&lt;/a&gt;
&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenGL ES 3.0 Support in Android Emulator &lt;/strong&gt;-&lt;strong&gt;
&lt;/strong&gt;The latest version of the Android Emulator has OpenGL ES 3.0 support
for Android Oreo system images along with significant improvements in OpenGL ES
2.0 graphics performance for older emulator system images. &lt;a
href="https://developer.android.com/studio/run/emulator-acceleration.html"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;App Bug Reporter in Android Emulator &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;To
help in documenting bugs in your app, we have added an easier way to generate a
bug report with the Android Emulator with all the necessary configuration
settings and space to capture your repro steps. &lt;a
href="https://developer.android.com/studio/report-bugs.html#emulator-bugs"&gt;Learn
more&lt;/a&gt;.   &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Proxy Support in Android &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;If you use a
proxy to access the Internet, we have added a user interface to manage the HTTP
proxy settings used by the emulator. &lt;a
href="https://developer.android.com/studio/run/emulator-networking.html#proxy"&gt;Lean
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android Emulator Quick Boot (Canary) &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;One
of the most common pain points we hear is that the emulator takes too long to
boot.  To address this concern, we are excited to preview a new feature to solve
this called Quick Boot, which significantly speeds up your emulator start time.
Once enabled, the first time you start an AVD a cold boot will occur (just like
powering on a device), but all subsequent starts are fast and the system is
restored to the state at which you closed the emulator (similar to waking a
device). If you want to try it out, ensure you are on the canary update release
channel and then you will find v26.2.0 of the Android Emulator in the SDK
Manager. &lt;a
href="https://developer.android.com/studio/preview/emulator.html"&gt;Learn
more&lt;/a&gt;.  &lt;/li&gt;&lt;/ul&gt;
&lt;div class="blogimg3"&gt;&lt;a href="https://1.bp.blogspot.com/-H5uYgwbhIRw/We_UsZFBx8I/AAAAAAAAEuI/lhVHeO4bU5QEzge2T9yaPQuc7UInPRnogCLcBGAs/s1600/image9.png" imageanchor="1" &gt;&lt;img border="0" src="https://1.bp.blogspot.com/-H5uYgwbhIRw/We_UsZFBx8I/AAAAAAAAEuI/lhVHeO4bU5QEzge2T9yaPQuc7UInPRnogCLcBGAs/s1600/image9.png" data-original-width="1600" data-original-height="1043" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;APK Debugging &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;Android Studio 3.0 allows
you to debug an arbitrary APK. This functionally is especially helpful for those
who develop your Android C++ code in another IDE, but want to debug and analyze
the APK in the context of Android Studio. As long as you have a debuggable
version of your APK, you can use the new APK Debugging features to analyze,
profile &amp; debug the APK. Moreover, if you have access to the sources of your
APK, you can link the source to the APK debugging flow for a higher fidelity
debugging process.  Get started by simply selecting &lt;strong&gt;Profile or debug
APK&lt;/strong&gt; from the Android Studio Welcome Screen or &lt;strong&gt;File → Profile or
debug APK&lt;/strong&gt;. &lt;a
href="https://developer.android.com/studio/preview/features/apk-debugger.html"&gt;Learn
More&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;div class="blogimg4"&gt;&lt;a href="https://3.bp.blogspot.com/-mORkxmNXgJc/We_VOWmeGYI/AAAAAAAAEuQ/LLWPUICDIKgHFLRVDIYDFV9r1mk9bYUlwCLcBGAs/s1600/image6.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-mORkxmNXgJc/We_VOWmeGYI/AAAAAAAAEuQ/LLWPUICDIKgHFLRVDIYDFV9r1mk9bYUlwCLcBGAs/s1600/image6.png" data-original-width="1600" data-original-height="961" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;&lt;em&gt;APK Debugging&lt;/em&gt;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Layout Inspector &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;In this release we have
added a few additional enhancements for the Layout Inspector including better
grouping of properties into common categories, as well as search functionality
in both the View Tree and Properties Panels.  &lt;a
href="https://developer.android.com/studio/debug/layout-inspector.html"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device File Explorer &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;The new Device File
Explorer in Android Studio 3.0 allows you to view the file and directory
structure of your Android device or emulator. As you are testing your app, you
can now quickly preview and modify app data files directly in Android Studio.
&lt;a href="https://d.android.com/studio/debug/device-file-explorer.html"&gt;Learn
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android Test Orchestrator Support&lt;/strong&gt; - When used with
AndroidJUnitRunner 1.0 or higher, the Android Gradle plugin 3.0 supports the use
of the Android Test Orchestrator. The Android Test Orchestrator allows each of
your app's tests to run within its own &lt;a
href="https://developer.android.com/reference/android/app/Instrumentation.html"&gt;Instrumentation&lt;/a&gt;.
&lt;a
href="https://developer.android.com/training/testing/junit-runner.html#using-android-test-orchestrator"&gt;Learn
more&lt;/a&gt;.
&lt;p&gt;&lt;/ul&gt;
&lt;strong&gt;&lt;span style="text-decoration:;"&gt;Optimize&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android Profiler &lt;/strong&gt;-&lt;strong&gt; &lt;/strong&gt;Android Studio 3.0
includes a brand new suite of tools to help debug performance problems in your
app. We completely rewrote the previous set of Android Monitor tools, and
replaced them with the Android Profiler. Once you deploy your app to a running
device or emulator, click on the &lt;strong&gt;Android Profiler&lt;/strong&gt; tab and you
will now have access to a real-time &amp; unified view of the CPU, Memory, &amp; Network
activity for your app. Each of the performance events are mapped to the UI event
timeline which highlights touch events, key presses, and activity changes so
that you have more context on when and why a certain event happened.  Click on
each timeline to dig into each performance aspect of your app. &lt;a
href="https://developer.android.com/studio/preview/features/android-profiler.html"&gt;Learn
more&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt;
&lt;div class="blogimg5"&gt;&lt;a href="https://2.bp.blogspot.com/-bK0QeifFdfs/We_V8zjOtDI/AAAAAAAAEuc/QGusE3IQcdQeQf7l0Qzq6WyXIGBRKeWigCLcBGAs/s1600/image2.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-bK0QeifFdfs/We_V8zjOtDI/AAAAAAAAEuc/QGusE3IQcdQeQf7l0Qzq6WyXIGBRKeWigCLcBGAs/s1600/image2.png" data-original-width="1600" data-original-height="619" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;&lt;em&gt;Android Profiler - Combined timeline view.&lt;/em&gt;&lt;/center&gt;
&lt;/p&gt;
&lt;div class="blogimg6"&gt;&lt;a href="https://2.bp.blogspot.com/-btyJv3ipa5o/We_WRgdwxAI/AAAAAAAAEug/_-fbm6vmk_cEOL4IZYpgoXYlfNvuS0lvwCLcBGAs/s1600/image7.png" imageanchor="1" &gt;&lt;img border="0" src="https://2.bp.blogspot.com/-btyJv3ipa5o/We_WRgdwxAI/AAAAAAAAEug/_-fbm6vmk_cEOL4IZYpgoXYlfNvuS0lvwCLcBGAs/s1600/image7.png" data-original-width="1600" data-original-height="1023" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;&lt;em&gt;CPU Profiler
&lt;/em&gt;&lt;/center&gt;
&lt;div class="blogimg7"&gt;&lt;a href="https://3.bp.blogspot.com/-GiKRADK4aAQ/We_Wdc6GjTI/AAAAAAAAEuo/zLzrnL2WH70EMNzscaB95H3obVsUUJB8wCLcBGAs/s1600/image3.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-GiKRADK4aAQ/We_Wdc6GjTI/AAAAAAAAEuo/zLzrnL2WH70EMNzscaB95H3obVsUUJB8wCLcBGAs/s1600/image3.png" data-original-width="1600" data-original-height="1023" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;
&lt;em&gt;Memory Profiler&lt;/em&gt;
&lt;/center&gt;
&lt;div class="blogimg8"&gt;&lt;a href="https://3.bp.blogspot.com/-dOzg6FLRIP0/We_WsU_av9I/AAAAAAAAEus/sK0AMLwvAqk8sQ8Gqe5kfIhfnnvyAOUpgCLcBGAs/s1600/image5.png" imageanchor="1" &gt;&lt;img border="0" src="https://3.bp.blogspot.com/-dOzg6FLRIP0/We_WsU_av9I/AAAAAAAAEus/sK0AMLwvAqk8sQ8Gqe5kfIhfnnvyAOUpgCLcBGAs/s1600/image5.png" data-original-width="1600" data-original-height="1023" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;center&gt;
&lt;em&gt;Network Profiler&lt;/em&gt;
&lt;/center&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;APK Analyzer Improvements&lt;/strong&gt; -&lt;strong&gt; &lt;/strong&gt;We also
updated APK Analyzer with additional enhancements to help you further optimize
the size of your APK.  &lt;a
href="https://developer.android.com/studio/build/apk-analyzer.html"&gt;Learn
more&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
To recap, Android Studio 3.0 includes these new major features:
&lt;/p&gt;
&lt;div class="grid"&gt;
  &lt;div class="box"&gt;
&lt;p&gt;
&lt;strong&gt;Develop&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://d.android.com/kotlin/"&gt;Kotlin Language&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/write/java8-support.html"&gt;Java
8 Language&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/write/layout-editor.html"&gt;Layout
Editor Improvements &lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/write/image-asset-studio.html"&gt;Adaptive
Icon Wizard&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts.html"&gt;XML
Fonts &amp; Downloadable Fonts&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/things/index.html"&gt;Android Things&lt;/a&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/idea/whatsnew/#v2017-1"&gt;Intellij Platform
Update 2017.1&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;Build&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/topic/instant-apps/index.html"&gt;Instant App
Support&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/build/gradle-plugin-3-0-0-migration.html"&gt;Build
Speed Improvements&lt;/a&gt;
&lt;li&gt;&lt;a
href="http://developer.android.com/studio/build/dependencies.html#google-maven"&gt;Google's
Maven Repo Change&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;Optimize&lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/profile/cpu-profiler.html"&gt;CPU
Profiler&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/profile/memory-profiler.html"&gt;Memory
Profiler&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/profile/network-profiler.html"&gt;Network
Profiler&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/build/apk-analyzer.html"&gt;APK
Analyzer Improvements&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
Check out the &lt;a
href="https://developer.android.com/studio/releases/index.html"&gt;release
notes&lt;/a&gt; for more details.
&lt;/p&gt;
&lt;h3&gt;Getting Started &lt;/h3&gt;
&lt;p&gt;
&lt;strong&gt;Download &lt;/strong&gt;
&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class="box"&gt;
&lt;p&gt;
&lt;strong&gt;Test &amp; Debug &lt;/strong&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/run/emulator.html"&gt;Emulator
Google Play System Images&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/run/emulator-acceleration.html"&gt;Emulator
OpenGL ES 3.0 Support&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/run/emulator-networking.html#proxy"&gt;Emulator Proxy Support&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/debug/bug-report.html"&gt;App Bug
Reporter&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/training/wearables/ui/rotary-input.html#emulator"&gt;Android
Wear Rotatory&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/preview/emulator.html"&gt;Android Emulator Quick Boot (Canary)&lt;/a&gt;
&lt;li&gt;&lt;a
href="https://developer.android.com/studio/debug/apk-debugger.html"&gt;APK
Debugging&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/debug/layout-inspector.html"&gt;Layout
Inspector&lt;/a&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/debug/device-file-explorer.html"&gt;Device File Explorer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you are using a previous version of Android Studio, you can upgrade to
Android Studio 3.0 today or you can download the update from the official
Android Studio Preview &lt;a
href="https://developer.android.com/studio/preview/index.html"&gt;download
page&lt;/a&gt;. As mentioned in this blog, there are some breaking Gradle Plugin API
changes to support new features in the IDE. Therefore, you should also update
your Android Gradle plugin version to 3.0.0 in your current project to test and
validate your app project setup.
&lt;/p&gt;
&lt;p&gt;
We appreciate any feedback on things you like, issues or features you would like
to see. If you find a bug or issue, feel free to &lt;a
href="https://source.android.com/source/report-bugs#developer-tools"&gt;file an
issue&lt;/a&gt;. Connect with us -- the Android Studio development team ‐ on our &lt;a
href="https://plus.google.com/103342515830390186255"&gt;Google+&lt;/a&gt; page or on &lt;a
href="http://www.twitter.com/androidstudio"&gt;Twitter&lt;/a&gt;
&lt;/p&gt;
&lt;style&gt;
.floatimg img {
float:right;
width: 30%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}
 .blogimg1 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg2 img {
width: 70%;
margin: auto;
border: 0;
padding: 10px 0 10px 0;
display: block;

}

.blogimg3 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg4 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg5 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg6 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg7 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg8 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg9 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg10 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg11 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.blogimg12 img {
width: 100%;
margin: 0;
border: 0;
padding: 10px 0 10px 0;
}

.grid {
display: grid;
grid-template-columns: 50% 50%;
}

.box {
}

&lt;/style&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zCRJ6H5cHwg:nZQlxIeT_0U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zCRJ6H5cHwg:nZQlxIeT_0U:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=zCRJ6H5cHwg:nZQlxIeT_0U:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hsDu/~4/zCRJ6H5cHwg" height="1" width="1" alt=""/&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8367048466328774082" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/8367048466328774082" /><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/blogspot/hsDu/~3/zCRJ6H5cHwg/android-studio-30.html" title="Android Studio 3.0" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-DAAJWGccTCQ/We_MGiMuSFI/AAAAAAAAEtk/5_COppUTDusIIx725jENI3fd9rqlRl0gQCLcBGAs/s72-c/image8.png" height="72" width="72" /><feedburner:origLink>http://android-developers.googleblog.com/2017/10/android-studio-30.html</feedburner:origLink></entry></feed>
