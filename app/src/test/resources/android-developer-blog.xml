<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?>
<?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0">
<id>tag:blogger.com,1999:blog-6755709643044947179</id>
<updated>2021-12-20T10:00:15.217-08:00</updated>
<category term="Featured" /><category term="Android" /><category term="Google Play" /><category term="latest" /><category term="Develop" /><category term="Android Developer" /><category term="android developers" /><category term="Games" /><category term="Android Studio" /><category term="Security" /><category term="Apps" /><category term="archive" /><category term="Announcements" /><category term="Google Play services" /><category term="Android Wear" /><category term="Developer Preview" /><category term="Distribute" /><category term="Play Console" /><category term="#11WeeksOfAndroid" /><category term="NDK" /><category term="android security" /><category term="Google Services" /><category term="GooglePlay" /><category term="User Interface" /><category term="Privacy" /><category term="Kotlin" /><category term="Android N" /><category term="Design" /><category term="Jetpack" /><category term="Developer Console" /><category term="SDK updates" /><category term="Android Developer Challenge" /><category term="Google Play Console" /><category term="Google Play game services" /><category term="Android TV" /><category term="Game" /><category term="How-to" /><category term="Android Auto" /><category term="App" /><category term="Material Design" /><category term="Google Play Games" /><category term="Android Market" /><category term="Android app development" /><category term="AndroidDevStory" /><category term="Google I/O" /><category term="Story" /><category term="Tools" /><category term="android11" /><category term="Android Things" /><category term="Performance" /><category term="developers" /><category term="#GoogleIO" /><category term="Android 1.5" /><category term="Location" /><category term="Platform_Update" /><category term="developer" /><category term="Best Practices" /><category term="UI" /><category term="compatibility" /><category term="wear" /><category term="Android12" /><category term="android p" /><category term="Android 11" /><category term="Android Design" /><category term="Android Dev Summit" /><category term="Android O" /><category term="Udacity" /><category term="Wear OS" /><category term="machine learning" /><category term="Marshmallow" /><category term="Optimization" /><category term="Support Library" /><category term="Tablets" /><category term="androidq" /><category term="androidstudio" /><category term="permissions" /><category term="Android 1.6" /><category term="Android Jetpack" /><category term="App quality" /><category term="Game Development" /><category term="Google Analytics" /><category term="notifications" /><category term="#Android" /><category term="Android for cars" /><category term="Audio" /><category term="Google" /><category term="Google Play Store" /><category term="Localization" /><category term="London" /><category term="#androiddevsummit" /><category term="API" /><category term="Android 5.0" /><category term="Android Development" /><category term="AndroidO" /><category term="C++" /><category term="Europe" /><category term="Google Cloud Platform" /><category term="Indie Games" /><category term="IoT" /><category term="Project Treble" /><category term="Testing" /><category term="appstory" /><category term="business" /><category term="competition" /><category term="engagement" /><category term="grow" /><category term="monetization" /><category term="prizes" /><category term="subscriptions" /><category term="win" /><category term="Android Instant Apps" /><category term="Android Pie" /><category term="GDC" /><category term="Google Cloud Messaging" /><category term="Graphics" /><category term="Indie Games Accelerator" /><category term="Jetpack Compose" /><category term="Layout" /><category term="Media" /><category term="News" /><category term="Play Store" /><category term="Renderscript" /><category term="UI toolkit" /><category term="admob" /><category term="analytics" /><category term="developer stories" /><category term="developerstory" /><category term="foldables" /><category term="indie" /><category term="indies" /><category term="showcase" /><category term="‘Google Play" /><category term="#AndroidDevJourney" /><category term="#MADSkills" /><category term="Android Developer Story" /><category term="Android M" /><category term="Android Q" /><category term="Android Vitals" /><category term="AndroidX" /><category term="Compose" /><category term="Dev Story" /><category term="Developer Inspiration" /><category term="Google Cast" /><category term="IO2013" /><category term="Large Screens" /><category term="Navigation" /><category term="Open source" /><category term="Pixel" /><category term="Policy" /><category term="Quality" /><category term="Saatchi" /><category term="TensorFlow" /><category term="aosp" /><category term="battery" /><category term="career inspiration" /><category term="careers in tech" /><category term="google play protect" /><category term="indie developers" /><category term="users" /><category term="#JetpackCompose" /><category term="#io19" /><category term="Android 10" /><category term="Android 2.0" /><category term="Android 9" /><category term="Android Automotive OS" /><category term="Android Dev Journey" /><category term="Android Emulator" /><category term="Android Open Source Project" /><category term="App Resources" /><category term="Bluetooth" /><category term="Developer Journey" /><category term="Education" /><category term="Firebase" /><category term="Game Developers Conference" /><category term="Google Assistant" /><category term="Google Fit" /><category term="Google Play Devs" /><category term="Google Play Indie Games Festival" /><category term="Google Play games services" /><category term="HTTPS" /><category term="In-app Billing" /><category term="Indie Games Festival" /><category term="Media and Camera" /><category term="OpenGL ES" /><category term="Policies" /><category term="Power series" /><category term="Requirements" /><category term="Treble" /><category term="WebView" /><category term="androidn" /><category term="contest" /><category term="gamestory" /><category term="io15" /><category term="nearby" /><category term="#Android11" /><category term="#AndroidDevChallenge" /><category term="APIs" /><category term="Actions on Google" /><category term="Ads" /><category term="Android 4.2" /><category term="Android 6.0" /><category term="Android SDK" /><category term="Android Study Jams" /><category term="Android for Work" /><category term="AndroidDev" /><category term="AndroidWear" /><category term="Animation" /><category term="App Components" /><category term="Authentication" /><category term="Code Day" /><category term="Courses" /><category term="Developer profiles" /><category term="GCM" /><category term="Google Drive" /><category term="Google Mobile Ads" /><category term="IO2014" /><category term="Intents" /><category term="Launch" /><category term="Launchpad Accelerator" /><category term="Licensing" /><category term="ML" /><category term="ML Kit" /><category term="Sample code" /><category term="Samples" /><category term="TensorFlow Lite" /><category term="UX" /><category term="androidp" /><category term="growth" /><category term="iOS" /><category term="library" /><category term="material you" /><category term="signing" /><category term="update" /><category term="wearos" /><category term="wifi" /><category term="workmanager" /><category term="#io17" /><category term="#io18" /><category term="AI" /><category term="Activity Recognition" /><category term="Android 3.0" /><category term="Android 3.2" /><category term="Android 4.4" /><category term="Android Dev" /><category term="AndroidGameDev" /><category term="App Bundle" /><category term="App Indexing" /><category term="Architecture Components" /><category term="Beta" /><category term="Biometrics" /><category term="Chromebooks" /><category term="Commerce" /><category term="Custom Model" /><category term="Developer Labs" /><category term="Developing Media Apps" /><category term="Development Tools" /><category term="Early Access" /><category term="Firebase Cloud Messaging" /><category term="Fragments" /><category term="GameDev" /><category term="Google Developers" /><category term="Google For Games" /><category term="Google Maps" /><category term="Google Play Indie games accelerator" /><category term="Google Play for Work" /><category term="Google client API" /><category term="Google+" /><category term="Indie Contest" /><category term="Indie games contest" /><category term="Indie games showcase" /><category term="Indie showcase" /><category term="Input methods" /><category term="Instant Apps" /><category term="LiquidFun" /><category term="Maps" /><category term="Maps API" /><category term="MaterialDesign" /><category term="Mobile Games" /><category term="Notification" /><category term="Preview" /><category term="SDK Tools" /><category term="Screens" /><category term="Subscription" /><category term="TLS" /><category term="Text and Input" /><category term="VR" /><category term="Virtual Reality" /><category term="android oreo" /><category term="apk" /><category term="appexcellence" /><category term="chrome" /><category term="chrome os" /><category term="connection encryption" /><category term="developer story" /><category term="developergamestory" /><category term="dynamic delivery" /><category term="encryption" /><category term="event" /><category term="events" /><category term="fcm" /><category term="form factors" /><category term="google play for families" /><category term="kernel" /><category term="mobile vision APIs" /><category term="network security" /><category term="oreo" /><category term="people" /><category term="release" /><category term="safety" /><category term="stable release" /><category term="store listing experiments" /><category term="ubicomp" /><category term="updates" /><category term="vulkan" /><category term="#Android12" /><category term="#AndroidDev" /><category term="#AndroidJetpack" /><category term="#Androiddevelopment" /><category term="#GDC20" /><category term="#TheAndroidShow" /><category term="'Google Play" /><category term="5G" /><category term="64bit" /><category term="AGDE" /><category term="AGDK" /><category term="Action Bar" /><category term="Actions" /><category term="Android 2.1" /><category term="Android 2.2" /><category term="Android 2.3" /><category term="Android 7.0" /><category term="Android 71" /><category term="Android App" /><category term="Android App Bundles" /><category term="Android Architecture" /><category term="Android Architecture Components" /><category term="Android Developer Phone" /><category term="Android Devs" /><category term="Android Game SDK" /><category term="Android Go" /><category term="Android Pay API" /><category term="Android Studio 3.0" /><category term="Android Studio Arctic Fox" /><category term="Android Wear 2.0" /><category term="Android app excellence" /><category term="Android codelabs" /><category term="Android courses" /><category term="Android training" /><category term="Androidtv" /><category term="Animation and Graphics" /><category term="App Bundles" /><category term="AppCompat" /><category term="BLE" /><category term="Boston" /><category term="C" /><category term="Canary" /><category term="Connectivity" /><category term="Conversation API" /><category term="Coroutines" /><category term="Dashboard" /><category term="Daydream" /><category term="Debugging" /><category term="Dev Tools" /><category term="Developer Console Store Listing Experiments" /><category term="Efficient Apps" /><category term="Fundamentals" /><category term="GDC 2020" /><category term="GLSL" /><category term="GPS" /><category term="Global" /><category term="Google Developer" /><category term="Google Play Billing" /><category term="Google Play Instant" /><category term="Google Wallet" /><category term="Google codelabs" /><category term="GoogleAPIClient" /><category term="Gradle" /><category term="Guidelines" /><category term="I/O2014" /><category term="IME" /><category term="Identity" /><category term="Internet of Things" /><category term="JNI" /><category term="Java" /><category term="Java 8" /><category term="Kotlin Everywhere" /><category term="LVL" /><category term="LaunchShow" /><category term="Linux" /><category term="LondonEng" /><category term="MADSkills" /><category term="Memory Management" /><category term="Model Maker" /><category term="MotionLayout" /><category term="Navigation Q&amp;A" /><category term="Navigation component" /><category term="Nougat" /><category term="OpenGL" /><category term="Places" /><category term="Play Academy" /><category term="PlayStore" /><category term="Profiling" /><category term="Pure" /><category term="SEA" /><category term="Safe Browsing" /><category term="SafetyNet" /><category term="Scoped Storage" /><category term="Southeast Asia" /><category term="Storage" /><category term="TLS by default" /><category term="TV" /><category term="Text-to-Speech" /><category term="Translation" /><category term="Unity" /><category term="User Support" /><category term="Web" /><category term="Widgets" /><category term="android privacy" /><category term="androidjetpack" /><category term="app lifecycle" /><category term="app signing" /><category term="appexcellencecasestudy" /><category term="appquality" /><category term="apps games insights" /><category term="beacons" /><category term="beta testing" /><category term="billing" /><category term="build Android apps" /><category term="buildingforbillions" /><category term="constraintlayout" /><category term="conversations" /><category term="conversions" /><category term="d8" /><category term="dexer" /><category term="documentation" /><category term="dx" /><category term="emulator" /><category term="foldable" /><category term="game design" /><category term="google computer science" /><category term="hackster" /><category term="in-app purchase" /><category term="infinite deviation: games" /><category term="insights" /><category term="io2010" /><category term="laptops" /><category term="malware" /><category term="mobile" /><category term="multiplatform apps" /><category term="play" /><category term="podcast" /><category term="ratings" /><category term="reviews" /><category term="social impact" /><category term="target API" /><category term="text" /><category term="things" /><category term="user data" /><category term="user experience" /><category term="watch face API" /><category term="#11WeeksOfAndroid Android TV" /><category term="#ADS19" /><category term="#Android #Android development # advanced Android #learn Android #build Android apps #Udacity" /><category term="#AndroidTV #Google Cast #Udacity" /><category term="#Argentina" /><category term="#Covid-19" /><category term="#EdTech" /><category term="#Experts" /><category term="#Firebase" /><category term="#GDC17 #GoogleDeveloperDay #GooglePlay #Games #VR #Daydream #Developers #Android #Google Play" /><category term="#GDE" /><category term="#GPA2017 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play" /><category term="#GPA2018 #GooglePlayAwards #GooglePlay #Games #VR #AR #AndroidWear #Indies #Startup #Apps #Developers #Android #Google Play" /><category term="#Game" /><category term="#GoogleDevelopers" /><category term="#GoogleforGames" /><category term="#MADscore" /><category term="#Media" /><category term="#STEM" /><category term="#TechEd" /><category term="#TechEdu" /><category term="#advancedAndroid #Udacity" /><category term="#codelabcourses" /><category term="#codelabs" /><category term="#io16" /><category term=".app" /><category term="11 Weeks of Android" /><category term="11weeksofandroid" /><category term="12l" /><category term="3d" /><category term="5 star apps" /><category term="505 Games" /><category term="8.1" /><category term="A/B testing" /><category term="AAudio for Android" /><category term="ADT-3" /><category term="AIY" /><category term="AIY Projects" /><category term="AMD" /><category term="AMP" /><category term="APK Expansion Files" /><category term="ARM" /><category term="ARPU" /><category term="ART" /><category term="ART profiles" /><category term="ASO" /><category term="ATSL" /><category term="About Fun" /><category term="Acquisition" /><category term="ActivityResult" /><category term="Administration" /><category term="Advanced Android course" /><category term="Advanced Android training" /><category term="Agus Gomez" /><category term="Android 11 Compatibility" /><category term="Android 11 final release" /><category term="Android 12 Beta 5" /><category term="Android 2.3.3" /><category term="Android 4.0" /><category term="Android 4.3" /><category term="Android 5.1" /><category term="Android 7.1" /><category term="Android 8.1" /><category term="Android Basics" /><category term="Android Basics in Kotlin" /><category term="Android C++" /><category term="Android Dev Summit 2021" /><category term="Android Developer Community" /><category term="Android Developer Journey" /><category term="Android Developers  #GooglePlayAwards #GooglePlay #Games #Indies #Startup #Apps #Developers #Android" /><category term="Android Developers Best Practices" /><category term="Android Excellence" /><category term="Android GPU" /><category term="Android Game Development Kit" /><category term="Android Gradle Plugin" /><category term="Android IDE" /><category term="Android IO" /><category term="Android Keystore" /><category term="Android ML" /><category term="Android Neural Networks" /><category term="Android Neural Networks API" /><category term="Android O Developer Preview" /><category term="Android One" /><category term="Android Paging" /><category term="Android Pay" /><category term="Android Performance Tuner" /><category term="Android Q Beta" /><category term="Android Q Beta 6" /><category term="Android Quality" /><category term="Android Scudo" /><category term="Android Security Rewards" /><category term="Android Security Rewards Program" /><category term="Android Studio 3.6" /><category term="Android Studio 4.0" /><category term="Android Studio 4.1" /><category term="Android Studio 4.2" /><category term="Android Testing Support Library" /><category term="Android Tools" /><category term="Android VRP" /><category term="Android audio latency" /><category term="Android developer codelabs" /><category term="Android graphics" /><category term="AnswerLab" /><category term="AoG" /><category term="App Excellence" /><category term="App Security" /><category term="App Startup" /><category term="App experience" /><category term="App icons" /><category term="AppSearch" /><category term="AppWidgets" /><category term="Application Security Improvement Program" /><category term="Architecture" /><category term="Assistant" /><category term="Assistant SDK" /><category term="Audio for Android" /><category term="Auto" /><category term="Auto Backup" /><category term="Autofill Framework" /><category term="BABBQ" /><category term="Benchmarking" /><category term="Betatesting" /><category term="Billions" /><category term="Biometric authentication" /><category term="BiometricPrompt" /><category term="BiometricPrompt API" /><category term="Budge Studios" /><category term="Bugs" /><category term="C++ audio library for Android" /><category term="CFI" /><category term="Call Log" /><category term="Camera X" /><category term="CameraX" /><category term="Certificates" /><category term="Certification" /><category term="Channels" /><category term="Cloud Speech API" /><category term="Compiler Mitigations" /><category term="Compiler-based security" /><category term="Complications" /><category term="Consistency" /><category term="Console" /><category term="Contacts" /><category term="Content Provider" /><category term="Control Flow Integrity" /><category term="Cool Stuff" /><category term="Crostini" /><category term="CultureAlley" /><category term="DAC/Design" /><category term="DAC/Develop" /><category term="DNS over TLS" /><category term="DP3" /><category term="Dagger" /><category term="DataStore" /><category term="Deep Links" /><category term="Demographics" /><category term="Deprecation" /><category term="DevTools" /><category term="Developer Accounts" /><category term="Developer Days" /><category term="Developer Student Clubs" /><category term="DialogFragment" /><category term="Disruptor Beam" /><category term="DonutTracker" /><category term="Doze" /><category term="Driving Do Not Disturb" /><category term="Duolingo" /><category term="EA" /><category term="Editors’ Choice" /><category term="Electronic Arts" /><category term="Engage" /><category term="Enterprise" /><category term="ExoPlayer" /><category term="Facebook" /><category term="Fast Pair" /><category term="Feedback" /><category term="Finance" /><category term="Find My Device" /><category term="Fit" /><category term="Fortify" /><category term="Fragment" /><category term="GDC17" /><category term="GDC19" /><category term="GDC20" /><category term="GMD" /><category term="GNSS" /><category term="GPGS" /><category term="GPU acceleration" /><category term="GSI" /><category term="Game Mode API" /><category term="Games and Media" /><category term="Gareth Jones" /><category term="Gesture Navigation" /><category term="Gestures" /><category term="Global events" /><category term="Gmail" /><category term="Golf Clash" /><category term="Google APIs" /><category term="Google Apps" /><category term="Google Awareness API" /><category term="Google Developer Student Clubs" /><category term="Google Home app" /><category term="Google I/O 2021" /><category term="Google Mobile Developer Day" /><category term="Google Now" /><category term="Google Play App Safety" /><category term="Google Play Asset Delivery" /><category term="Google Play Developer API" /><category term="Google Play Developer API V3" /><category term="Google Play Developer API Version 3" /><category term="Google Play Developer Policies" /><category term="Google Play Points" /><category term="Google Play Protect Rewards Program" /><category term="Google Play developer distribution agreement" /><category term="Google Sign-In" /><category term="Google for Games Developer Summit" /><category term="Google registry" /><category term="GoogleDeveloperDay" /><category term="GooglePlay AndroidDev" /><category term="Gpfe" /><category term="GridLayout" /><category term="HAL" /><category term="HWASan" /><category term="HelloEnglish" /><category term="Hilt" /><category term="Hiring" /><category term="Holo" /><category term="HttpsURLConnection" /><category term="Hutch" /><category term="Hutch Games" /><category term="HyperV" /><category term="I/O" /><category term="I/O 2018" /><category term="ICS" /><category term="IO" /><category term="IO 2019" /><category term="Image Processing" /><category term="Indie games developers" /><category term="Indonesia" /><category term="Indonesia Games Contest" /><category term="Intent" /><category term="Inzen studio" /><category term="Issue Tracker" /><category term="Japan" /><category term="JetBrains" /><category term="Jetpack Tiles Library" /><category term="Job Scheduler" /><category term="Job Service" /><category term="KNOX" /><category term="Key Attestation" /><category term="Keystone" /><category term="Klei Entertainment" /><category term="Kotlin Event" /><category term="Kotlin Symbol Processiong" /><category term="Kotlin codelabs" /><category term="KotlinConf" /><category term="LTV" /><category term="LaMatinale" /><category term="LeMonde" /><category term="Life of a Bug" /><category term="Lifecycle" /><category term="Linux on Chrome OS" /><category term="Linux on Chromebooks" /><category term="LiveData" /><category term="Lollipop" /><category term="MAD Skills" /><category term="MENA" /><category term="Marta Gui" /><category term="MediaSession" /><category term="Memory Safety" /><category term="Messenger" /><category term="Mountain View" /><category term="Multiwindow" /><category term="Munich" /><category term="Music" /><category term="NBU" /><category term="NFC" /><category term="NLP" /><category term="Nav Editor" /><category term="Navigation Sample" /><category term="Niji Games" /><category term="Nix Hydra" /><category term="Non-SDK" /><category term="Notification bubbles" /><category term="Now in Arabic" /><category term="O-MG" /><category term="OAuth" /><category term="OS Updates" /><category term="Oboe audio library" /><category term="Omnidrone" /><category term="On-Device Machine Learning" /><category term="Onboarding" /><category term="Ongoing Activities API" /><category term="OpenSL ES for Android" /><category term="Operating System" /><category term="P2P" /><category term="PWA" /><category term="Paging" /><category term="Paul Gouge" /><category term="Photo Sphere" /><category term="Physics" /><category term="Pico" /><category term="Pixel 2" /><category term="Platform" /><category term="Platform Stability" /><category term="Platform_Updates" /><category term="Play IO19" /><category term="Playdemic" /><category term="Playtime 2016" /><category term="Plugin" /><category term="Pocket Gems" /><category term="Potentially Harmful Applications" /><category term="Pre-Launch Report" /><category term="Project Mainline" /><category term="Promo Graphics" /><category term="Promotions" /><category term="Public Tracker" /><category term="PyTorch mobile support" /><category term="PyTorck" /><category term="Q Beta 6" /><category term="Quick Search Box" /><category term="R8" /><category term="RTL" /><category term="Ratings and Reviews" /><category term="Releases" /><category term="Resources" /><category term="Robinhood" /><category term="SDLC" /><category term="SMS" /><category term="SafeArgs" /><category term="Sample app" /><category term="Sanitizers" /><category term="Santa Tracker" /><category term="Schell Games" /><category term="ScreenCapture" /><category term="Security Development Lifecycle" /><category term="Sensors" /><category term="Seriously" /><category term="Sharding" /><category term="ShareActionProvider" /><category term="Shared Elements" /><category term="SharedPreferences" /><category term="Sharing" /><category term="Shortcuts" /><category term="Skyscanner" /><category term="Smartlock" /><category term="Social Point" /><category term="South Korea" /><category term="Space" /><category term="Space Ape Games" /><category term="Speech Input" /><category term="Stencils" /><category term="Storytoys" /><category term="Studio" /><category term="Super Evil MegaCorp" /><category term="Survey" /><category term="System hardening" /><category term="TAGS: Google Play" /><category term="TEE" /><category term="Target API level" /><category term="Tel Aviv" /><category term="Telephony" /><category term="Tiles" /><category term="Tiles API" /><category term="Tips" /><category term="Titan Brawl" /><category term="Touch" /><category term="Trusted User Interface" /><category term="Twitter" /><category term="UAMP" /><category term="UTP" /><category term="Updatability" /><category term="User Feedback" /><category term="VGames" /><category term="Viber" /><category term="Video" /><category term="Visibility" /><category term="Vitals" /><category term="Voice" /><category term="Voice Kit" /><category term="Wear UI Library" /><category term="Wearables" /><category term="Webdriver" /><category term="Wide Color" /><category term="Work Manager" /><category term="World Food Day" /><category term="XmlPullParser" /><category term="YouTube" /><category term="accessibility" /><category term="activity-recognition" /><category term="advanced Android" /><category term="android 12" /><category term="android 8.0" /><category term="android audio apps" /><category term="android c++ games linux open source release osx serialization windows" /><category term="android extension pack" /><category term="android kotlin" /><category term="android o apis" /><category term="android sanitizer" /><category term="android things 1.0" /><category term="android wear 1.0" /><category term="android10" /><category term="android71" /><category term="android81" /><category term="android9" /><category term="androiddevsummit" /><category term="androidoreo" /><category term="announcement" /><category term="app attribution" /><category term="app development" /><category term="app id" /><category term="app install" /><category term="app performance" /><category term="app standby buckets" /><category term="app updates" /><category term="appbundle" /><category term="application security" /><category term="applications" /><category term="ar" /><category term="arch" /><category term="arcore" /><category term="attestation" /><category term="audio playback" /><category term="audio playback capture" /><category term="audio recording" /><category term="augmented reality" /><category term="autofill" /><category term="award" /><category term="awareness" /><category term="background" /><category term="background access" /><category term="background location" /><category term="badge" /><category term="bar code" /><category term="beacon" /><category term="beginner" /><category term="best apps 2020" /><category term="best games 2020" /><category term="betatesting GooglePlayforFamilies" /><category term="big data" /><category term="blackhat" /><category term="bootcamp" /><category term="bubbles" /><category term="bug swatting" /><category term="building 5 star apps" /><category term="building across devices" /><category term="bulletins" /><category term="business development" /><category term="case study" /><category term="clang" /><category term="class loading" /><category term="codelabs" /><category term="codesearch" /><category term="coding" /><category term="color" /><category term="companion Action" /><category term="context" /><category term="controls" /><category term="course" /><category term="cross-platform" /><category term="curriculum" /><category term="custom tiles" /><category term="cutout" /><category term="dalvik" /><category term="data storage" /><category term="ddms" /><category term="deeplocal" /><category term="desktop" /><category term="desktop apps" /><category term="developer profile" /><category term="developer success" /><category term="developerappstory" /><category term="developerstory developerconsole" /><category term="device id" /><category term="devices" /><category term="dynamicdelivery" /><category term="eBook" /><category term="educator" /><category term="emojis" /><category term="face detection" /><category term="faculty" /><category term="families" /><category term="final release" /><category term="first app" /><category term="fitness" /><category term="font updates" /><category term="free trial" /><category term="full-text search" /><category term="game-as-a-service" /><category term="games business" /><category term="gaming industry" /><category term="gapid" /><category term="gdc18" /><category term="getting started" /><category term="glance" /><category term="go edition" /><category term="gold" /><category term="golf games" /><category term="google pay" /><category term="google play developers" /><category term="google security" /><category term="google tv" /><category term="googleservices" /><category term="guide" /><category term="health" /><category term="heart rate sensor" /><category term="how to develop audio apps for android" /><category term="http" /><category term="i18n" /><category term="imakeapps" /><category term="insider attack resistance" /><category term="install referrer" /><category term="install track" /><category term="installs" /><category term="instant" /><category term="instant experience" /><category term="instant games" /><category term="instructor" /><category term="internationalization" /><category term="internet" /><category term="intuit" /><category term="io16" /><category term="io18" /><category term="jetpack media3" /><category term="keys" /><category term="kids app developers" /><category term="kids apps" /><category term="ktx" /><category term="l10n" /><category term="language" /><category term="language id" /><category term="language identification" /><category term="laptop apps" /><category term="large screen devices" /><category term="large_screens" /><category term="latency" /><category term="latest." /><category term="leanback" /><category term="learn Android" /><category term="learning" /><category term="listing" /><category term="liveops" /><category term="location access" /><category term="location data" /><category term="long aspect ratio" /><category term="machine" /><category term="marble" /><category term="media controls" /><category term="media playback" /><category term="memory" /><category term="messaging api" /><category term="mobile ads" /><category term="mobile encryption" /><category term="mobile search" /><category term="motion." /><category term="multi-display support" /><category term="multiplayer" /><category term="musician apps" /><category term="network" /><category term="oboe" /><category term="of" /><category term="official launch" /><category term="offline" /><category term="ordered broadcast" /><category term="oscon" /><category term="outreach" /><category term="packaging" /><category term="patch level" /><category term="patching" /><category term="pathway" /><category term="peer group" /><category term="phone" /><category term="play billing" /><category term="play billing library" /><category term="play core" /><category term="playback resumption" /><category term="playbook app" /><category term="playconsole" /><category term="player engagement" /><category term="policy compliance" /><category term="policy violations" /><category term="pre rotation" /><category term="pre-leaunch" /><category term="preinstalled apps" /><category term="preloaded apps" /><category term="pro audio" /><category term="programming" /><category term="project marble" /><category term="protection" /><category term="publishing" /><category term="purchase flows" /><category term="push messaging" /><category term="pwn" /><category term="real-time audio" /><category term="recaptcha" /><category term="registration" /><category term="regulations" /><category term="revenue" /><category term="robotics" /><category term="runtime permissions" /><category term="sandbox" /><category term="sanitizer" /><category term="schools" /><category term="sdk" /><category term="seamless transfer" /><category term="search" /><category term="secure hardware" /><category term="security infrastructure" /><category term="selinux" /><category term="service fees" /><category term="smart reply" /><category term="smr" /><category term="source code" /><category term="spam" /><category term="spyware" /><category term="stability" /><category term="storelistingexperime" /><category term="strictmode" /><category term="study group" /><category term="success stories" /><category term="system UI" /><category term="system fonts" /><category term="tamper-resistant hardware security" /><category term="targeted spyware" /><category term="taxation" /><category term="teach" /><category term="text styling API" /><category term="textclassifier" /><category term="texture compression" /><category term="textview" /><category term="threading" /><category term="titan" /><category term="traceview" /><category term="training" /><category term="transition api" /><category term="transitions" /><category term="transparency" /><category term="trial period" /><category term="university" /><category term="user control" /><category term="user location" /><category term="video playback" /><category term="viewpager" /><category term="virtual instruments" /><category term="vulnerabilities" /><category term="watch faces" /><category term="watchface" /><category term="wear emulators" /><category term="web registry" /><category term="wellness" />
<title type="text">Android Developers Blog</title>
<subtitle type="html">An Open Handset Alliance Project.</subtitle>
<link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/" />
<link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default?start-index=26&amp;max-results=25&amp;redirect=false" />
<author><name>Ian Lake</name><uri>http://www.blogger.com/profile/17415160793077313560</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author>
<generator version="7.00" uri="http://www.blogger.com">Blogger</generator>
<openSearch:totalResults>1306</openSearch:totalResults>
<openSearch:startIndex>1</openSearch:startIndex>
<openSearch:itemsPerPage>25</openSearch:itemsPerPage>
<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/blogspot/hsDu" /><feedburner:info xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" uri="blogspot/hsdu" />
<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" />
<entry>
	<id>tag:blogger.com,1999:blog-6755709643044947179.post-4042904036683699581</id>
	<published>2021-12-20T09:59:00.001-08:00</published>
	<updated>2021-12-20T09:59:16.226-08:00</updated>
	<category scheme="http://www.blogger.com/atom/ns#" term="#Android" /><category scheme="http://www.blogger.com/atom/ns#" term="#Argentina" /><category scheme="http://www.blogger.com/atom/ns#" term="#Covid-19" /><category scheme="http://www.blogger.com/atom/ns#" term="#Experts" /><category scheme="http://www.blogger.com/atom/ns#" term="#Firebase" /><category scheme="http://www.blogger.com/atom/ns#" term="#GDE" /><category scheme="http://www.blogger.com/atom/ns#" term="#GoogleDevelopers" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" />
	<title type="text">Creating an app to help your community during the pandemic with Gaston Saillen #IamaGDE</title>
	<content type="html">&lt;meta name="twitter:image" content="https://blogger.googleusercontent.com/img/a/AVvXsEgHl1OMxu_r7B6C2OHY0OsAyNn8j00v_A2ASjMKfjrw2JO0B9fbD6-5uohhucBeSLh_6ngRqhyARan_Tn1Sd-veSxOc3b-Lo1H_Q0PktyH5hrpCkhX54T8PoLWqFlfkRWIIy_0GWkK84s1CgfSk8w05GanB28I5mnb4vDPrHqG0CBmkcNuiqNygPjgP"&gt;
&lt;img style="display:none" src="https://blogger.googleusercontent.com/img/a/AVvXsEgHl1OMxu_r7B6C2OHY0OsAyNn8j00v_A2ASjMKfjrw2JO0B9fbD6-5uohhucBeSLh_6ngRqhyARan_Tn1Sd-veSxOc3b-Lo1H_Q0PktyH5hrpCkhX54T8PoLWqFlfkRWIIy_0GWkK84s1CgfSk8w05GanB28I5mnb4vDPrHqG0CBmkcNuiqNygPjgP"&gt;

&lt;p&gt;&lt;em&gt;Posted by Alicja Heisig, Developer Relations Program Manager&lt;/em&gt;&lt;p&gt;

&lt;p&gt;
&lt;em&gt;Welcome to #IamaGDE - a series of spotlights presenting Google Developer Experts (GDEs) from across the globe. Discover their stories, passions, and highlights of their community work.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Gaston Saillen started coding for fun, making apps for his friends. About seven years ago, he began working full-time as an &lt;a href="https://developer.android.com/"&gt;Android developer&lt;/a&gt; for startups. He built a bunch of apps—and then someone gave him an idea for an app that has had a broad social impact in his local community. Now, he is a senior Android developer at Distillery.
&lt;/p&gt;

&lt;h2&gt;Meet Gaston Saillen, Google Developer Expert in Android and Firebase.&lt;/h2&gt;

&lt;center&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEgHl1OMxu_r7B6C2OHY0OsAyNn8j00v_A2ASjMKfjrw2JO0B9fbD6-5uohhucBeSLh_6ngRqhyARan_Tn1Sd-veSxOc3b-Lo1H_Q0PktyH5hrpCkhX54T8PoLWqFlfkRWIIy_0GWkK84s1CgfSk8w05GanB28I5mnb4vDPrHqG0CBmkcNuiqNygPjgP" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Photo of Gaston" border="0" data-original-height="1428" data-original-width="1999" src="https://blogger.googleusercontent.com/img/a/AVvXsEgHl1OMxu_r7B6C2OHY0OsAyNn8j00v_A2ASjMKfjrw2JO0B9fbD6-5uohhucBeSLh_6ngRqhyARan_Tn1Sd-veSxOc3b-Lo1H_Q0PktyH5hrpCkhX54T8PoLWqFlfkRWIIy_0GWkK84s1CgfSk8w05GanB28I5mnb4vDPrHqG0CBmkcNuiqNygPjgP"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;

&lt;h2&gt;Building the Uh-LaLa! app&lt;/h2&gt;

&lt;p&gt;
After seven years of building apps for startups, Gaston visited a local food delivery truck to pick up dinner, and the server asked him, “Why don’t you do a food delivery app for the town, since you are an Android developer? We don’t have any food delivery apps here, but in the big city, there are tons of them.”
&lt;/p&gt;
&lt;p&gt;
The food truck proprietor added that he was new in town and needed a tool to boost his sales. Gaston was up for the challenge and created a straightforward delivery app for local Cordoba restaurants he named &lt;a href="https://play.google.com/store/apps/details?id=com.uhlala&amp;hl=en_US&amp;gl=US"&gt;Uh-Lala!&lt;/a&gt; Restaurants configure the app themselves, and there’s no app fee. “My plan was to deliver this service to this community and start making some progress on the technology that they use for delivery,” says Gaston. “And after that, a lot of other food delivery services started using the app.”
&lt;/p&gt;
&lt;p&gt;
The base app is built similarly to food delivery apps for bigger companies. Gaston built it for Cordoba restaurants first, after several months of development, and it’s still the only food delivery app in town. When he released the app, it immediately got traction, with people placing orders. His friends joined, and the app expanded. “I’ve made a lot of apps as an Android engineer, but this is the first time I’ve made one that had such an impact on my community.” 
&lt;/p&gt;
&lt;p&gt;
He had to figure out how to deliver real-time notifications that food was ready for delivery. “That was a little tough at first, but then I got to know more about all the backend functions and everything, and that opened up a lot of new features.”  
&lt;/p&gt;
&lt;p&gt;
He also had to educate two groups of users: Restaurant owners need to know how to input their data into the app, and customers had to change their habit of using their phones for calls instead of apps. 
&lt;/p&gt;
&lt;p&gt;
Gaston says seeing people using the app is rewarding because he feels like he’s helping his community.&lt;strong&gt; &lt;/strong&gt;“All of a sudden, nearby towns started using Uh-LaLa!, and I didn't expect it to grow that big, and it helped those communities.”
&lt;/p&gt;
&lt;p&gt;
During the COVID-19 pandemic, many restaurants struggled to maintain their sales numbers. A local pub owner ran a promotion through Instagram to use the Uh-Lala! App for ten percent off, and their sales returned to pre-COVID levels. “That is a success story. They were really happy about the app.”
&lt;/p&gt;




&lt;center&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEj9UGlzL9GAm2yLhG9uS-uzYBE4Xp-NOwUPpEVt1awufKABXR_BxYF1s2bH8OF_VAwguVNbmrYaT1HU-yG1SByUO0y0WLSSVZczYfW_CMM4zvJhH820t4ewPvhkeO5UbvoyPfspK63Ktx_AGwJkuJDH-HGcGaC20V7XMHsmpH_8ITrfmwAAZGUrJJex" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:75%" alt="image of person holding a phone and an image of an app on the phone" border="0" data-original-height="1132" data-original-width="2280" src="https://blogger.googleusercontent.com/img/a/AVvXsEj9UGlzL9GAm2yLhG9uS-uzYBE4Xp-NOwUPpEVt1awufKABXR_BxYF1s2bH8OF_VAwguVNbmrYaT1HU-yG1SByUO0y0WLSSVZczYfW_CMM4zvJhH820t4ewPvhkeO5UbvoyPfspK63Ktx_AGwJkuJDH-HGcGaC20V7XMHsmpH_8ITrfmwAAZGUrJJex"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;



&lt;br&gt;
&lt;h2&gt;Becoming a GDE&lt;/h2&gt;

&lt;p&gt;
Gaston has been a GDE for seven years. When he was working on his last startup, he found himself regularly answering questions about &lt;a href="https://developer.android.com/"&gt;Android development&lt;/a&gt; and &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; on &lt;a href="http://stackoverflow.com"&gt;StackOverflow&lt;/a&gt; and creating developer content in the form of blog posts and YouTube videos. When he learned about the GDE program, it seemed like a perfect way to continue to contribute his Android development knowledge to an even broader developer community. Once he was selected, he continued writing blog posts and making videos—and now, they reach a broader audience. 
&lt;/p&gt;
&lt;p&gt;
“I created &lt;a href="https://www.udemy.com/course/curso-definitivo-para-aprender-a-programar-en-android/"&gt;a course on Udemy&lt;/a&gt; that I keep updated, and I’m still writing the blog posts,” he says. “We also started the GDG here in Cordoba, and we try to have a new talk every month.”
&lt;/p&gt;
&lt;p&gt;
Gaston enjoys the GDE community and sharing his ideas about Firebase and Android with other developers. He and several fellow Firebase developers started a WhatsApp group to chat about Firebase. “I enjoy being a Google Developer Expert because I can meet members of the community that do the same things that I do. It’s a really nice way to keep improving my skills and meet other people who also contribute and make videos and blogs about what I love: Android.”
&lt;/p&gt;
&lt;p&gt;
The Android platform provides developers with state-of-the art tools to build apps for user. Firebase allows developers to accelerate and scale app development without managing infrastructure; release apps and monitor their performance and stability; and boost engagement with analytics, A/B testing, and messaging campaigns.
&lt;/p&gt;

&lt;center&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEh55RfLIAX4ET7uEjTWOgahCtkDO6nigM-cpzAtR5ToIGo_JxAiRKzhkOkVlJyu8DKiDA9AkbZMOSDfFCWfgzGxXWmwNCy_UMVaZZoJOa8JC90tNDRPM_reaEspOvIhcguusfOmz_vZ_XQhubokforAQOaMEdVnBAlUq50HyNcYLrXM1KYdAfwFOlea" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="photo of a webpage in another language" border="0" data-original-height="1023" data-original-width="1999" src="https://blogger.googleusercontent.com/img/a/AVvXsEh55RfLIAX4ET7uEjTWOgahCtkDO6nigM-cpzAtR5ToIGo_JxAiRKzhkOkVlJyu8DKiDA9AkbZMOSDfFCWfgzGxXWmwNCy_UMVaZZoJOa8JC90tNDRPM_reaEspOvIhcguusfOmz_vZ_XQhubokforAQOaMEdVnBAlUq50HyNcYLrXM1KYdAfwFOlea"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;br&gt;
&lt;h2&gt;Future plans&lt;/h2&gt;

&lt;p&gt;
Gaston looks forward to developing Uh-La-La further and building more apps, like a coworking space reservation app that would show users the hours and locations of nearby coworking spaces and allow them to reserve a space at a certain time. He is also busy as an Android developer with Distillery. 
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEge78Jue1aA-b8RUS3hPVO9eVe3vdsxfhY4-U-gmsnSdxYFi54N8EQtBSrcjTVCYSDy5zgBrcpRKaKFk-I_MR3iIwY-0emoKnW5Ya4ABCw2zeJ-pXstcYiV7IRPrASmufyrOCa3Rt32x7f0FFEHhXfSI1RNIGfW24t4ix974iUcmOz8zgix5ro3Bp35" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Photo of Gaston on a telelvision show" border="0" data-original-height="992" data-original-width="1824" src="https://blogger.googleusercontent.com/img/a/AVvXsEge78Jue1aA-b8RUS3hPVO9eVe3vdsxfhY4-U-gmsnSdxYFi54N8EQtBSrcjTVCYSDy5zgBrcpRKaKFk-I_MR3iIwY-0emoKnW5Ya4ABCw2zeJ-pXstcYiV7IRPrASmufyrOCa3Rt32x7f0FFEHhXfSI1RNIGfW24t4ix974iUcmOz8zgix5ro3Bp35"/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h2&gt;Gaston’s advice to future developers&lt;/h2&gt;

&lt;p&gt;
“Keep moving forward. Any adversity that you will be having in your career will be part of your learning, so the more that you find problems and solve them, the more that you will learn and progress in your career.”
&lt;/p&gt;
&lt;p&gt;
Learn more about the Experts Program →&lt;a href="https://www.youtube.com/redirect?event=video_description&amp;redir_token=QUFFLUhqbFNBanNDdVRzQXVOSFdlWTZ6WFNHaS1nZ3gxZ3xBQ3Jtc0tsNzBSY1ZNcTdUaUYxMTlnMUZ0dmVfalNScGdyWHV0WjJscnhzcTJxNFl1YTdZXzl0X0ZmbGdTV0xNR2JlaU1rb2Rxa3VzcEpMWVlvcHN5UThQU3ROVEY1SXNnQzVBUWozUTN1M251VHpCbVVtR25Gcw&amp;q=https%3A%2F%2Fgoo.gle%2Fgde-program"&gt; developers.google.com/community/experts&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Watch more on YouTube →&lt;a href="https://www.youtube.com/redirect?event=video_description&amp;redir_token=QUFFLUhqa0JWd09MZ25JekRUaEVYUFBCdnJmTnNkREtPUXxBQ3Jtc0trSGw3RVV5ZWo1UjVhVlNOVk5yRGNYS1I5d0duakZ6c3pROXRLTVBIS0NEamxkM3lUQUtOaDB3dHcwWmM2VE9pd2tBM3ZDSnhYWHdOSjFmMzdfVkJ2dXFvUGUyT2FlT0VMc2IzOXBrNWZSNUdVQm9mMA&amp;q=https%3A%2F%2Fgoo.gle%2FGDE"&gt; https://goo.gle/GDE&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;
Follow us on &lt;a href="https://twitter.com/GoogleDevExpert"&gt;Twitter&lt;/a&gt; and &lt;a href="http://linkedin.com/showcase/experts-program"&gt;LinkedIn&lt;/a&gt;
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YmJ7hcjzT0s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=W2YBHqoxq9s:4CK56bLRIfs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=W2YBHqoxq9s:4CK56bLRIfs:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=W2YBHqoxq9s:4CK56bLRIfs:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content>
<link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4042904036683699581" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4042904036683699581" />
<link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/creating-app-to-help-your-community.html" title="Creating an app to help your community during the pandemic with Gaston Saillen #IamaGDE" />
<author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author>
<media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/a/AVvXsEgHl1OMxu_r7B6C2OHY0OsAyNn8j00v_A2ASjMKfjrw2JO0B9fbD6-5uohhucBeSLh_6ngRqhyARan_Tn1Sd-veSxOc3b-Lo1H_Q0PktyH5hrpCkhX54T8PoLWqFlfkRWIIy_0GWkK84s1CgfSk8w05GanB28I5mnb4vDPrHqG0CBmkcNuiqNygPjgP=s72-c" height="72" width="72" />
</entry>
<entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7081888928134660762</id><published>2021-12-16T11:07:00.003-08:00</published><updated>2021-12-16T11:07:55.809-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="#MADSkills" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="MADSkills" /><title type="text">MAD Skills Gradle and AGP build APIs Wrap Up!</title><content type="html">&lt;meta name="twitter:image" content="https://blogger.googleusercontent.com/img/a/AVvXsEgo1Fw61B9qtQESKdVJzcNXOG0RzhA2k85zkDMDNidBiQY7B6uguHXQ9t9IPB9BiHS0WTB1b4fwIgeN5zEIJrmznF9pt5lu9186wvXxJ3IKfLi8Fci8LyMDbQKGYc7nnijJ9_lhrNHtRQamaF2GTSXyJq5_lQk7we3cSfSviOxhgKN9TscMJaGgdMZJ"&gt;
&lt;img style="display:none" src="https://blogger.googleusercontent.com/img/a/AVvXsEgo1Fw61B9qtQESKdVJzcNXOG0RzhA2k85zkDMDNidBiQY7B6uguHXQ9t9IPB9BiHS0WTB1b4fwIgeN5zEIJrmznF9pt5lu9186wvXxJ3IKfLi8Fci8LyMDbQKGYc7nnijJ9_lhrNHtRQamaF2GTSXyJq5_lQk7we3cSfSviOxhgKN9TscMJaGgdMZJ"&gt;

&lt;p&gt;&lt;em&gt;Posted by Murat Yener, Android Developer Advocate&lt;/em&gt;&lt;p&gt;

&lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEgo1Fw61B9qtQESKdVJzcNXOG0RzhA2k85zkDMDNidBiQY7B6uguHXQ9t9IPB9BiHS0WTB1b4fwIgeN5zEIJrmznF9pt5lu9186wvXxJ3IKfLi8Fci8LyMDbQKGYc7nnijJ9_lhrNHtRQamaF2GTSXyJq5_lQk7we3cSfSviOxhgKN9TscMJaGgdMZJ" imageanchor="1" &gt;&lt;img style="width:100%" alt="MAD Skills graphic" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEgo1Fw61B9qtQESKdVJzcNXOG0RzhA2k85zkDMDNidBiQY7B6uguHXQ9t9IPB9BiHS0WTB1b4fwIgeN5zEIJrmznF9pt5lu9186wvXxJ3IKfLi8Fci8LyMDbQKGYc7nnijJ9_lhrNHtRQamaF2GTSXyJq5_lQk7we3cSfSviOxhgKN9TscMJaGgdMZJ" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
&lt;br&gt;

&lt;p&gt;
That’s a wrap! We’ve just finished a new MAD skills series on Gradle and Android Gradle plugin build APIs. In this series we shifted gears and took a look at how you can extend your build by using Gradle and brand new Android Gradle plugin APIs.
&lt;/p&gt;
&lt;p&gt;
We covered how Gradle works, how you can configure the Android Gradle plugin, and learned which APIs to use to help customize your builds and keep your builds fast and efficient. If you missed this series or some of the episodes, here is a quick recap of what to expect.
&lt;/p&gt;
&lt;h3&gt;Episode 1: Configure your build - Intro to Gradle and AGP &lt;/h3&gt;


&lt;p&gt;
Gradle is a general purpose build tool which can build specific project types by using plugins. Plugins introduce a way to configure the build and decide which tasks are needed to build that project. Gradle configures and executes these tasks in different phases. Understanding how the build phases work and how to configure the Android Gradle plugin can help you customize your build according to your project’s needs and keep build times efficient.
&lt;/p&gt;
&lt;p&gt;
You can check out the following video or if you prefer, read the &lt;a href="https://medium.com/androiddevelopers/gradle-and-agp-build-apis-configure-your-build-9a10db5b2262"&gt;article&lt;/a&gt;.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mk0XBWenod8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;br&gt;

&lt;h3&gt;Episode 2: How to write a plugin&lt;/h3&gt;


&lt;p&gt;
Extending your build by writing your own plugin gives you a way to customize your build even further! Starting with version 7.0, Android Gradle Plugin now offers stable extension points for manipulating variant configuration and the produced build artifacts. In this episode we started with writing a custom task and used the new Variant API to initialize and modify properties of Variants.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LPzBVtwGxlo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;
You can find the same content in &lt;a href="https://medium.com/androiddevelopers/gradle-and-agp-build-apis-how-to-write-a-plugin-1695b590e4ec"&gt;article&lt;/a&gt; form.
&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Episode 3: Taking your plugin to the next step&lt;/h3&gt;


&lt;p&gt;
As we saw in previous episodes, keeping your config phase fast and resolving values lazily can help keep your builds efficient. Providers and Properties let you pass inputs and receive outputs from Gradle tasks lazily. In this episode we also take a look at the new Artifacts API to access and modify the app manifest.
&lt;/p&gt;
&lt;p&gt;
Check out the &lt;a href="https://medium.com/androiddevelopers/gradle-and-agp-build-apis-taking-your-plugin-to-the-next-step-95e7bd1cd4c9"&gt;article&lt;/a&gt; or the following video.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/SB4QlngQQW0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;br&gt;
&lt;h3&gt;Episode 4: Gradle and AGP Build APIs Community Tip &lt;/h3&gt;


&lt;p&gt;
In the last episode in the series, we feature Alex Saveau, who maintains the Gradle Play Publisher and Version Orchestrator plugins. Alex shares a tip on using modern AGP and Gradle APIs to manipulate Android build artifacts. 
&lt;/p&gt;
&lt;p&gt;
To learn more, check out the following video.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8SFfffaB0CU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt; &lt;/center&gt;

&lt;br&gt;
&lt;h3&gt;Episode 6: Live Q&amp;A&lt;/h3&gt;


&lt;p&gt;
Finally, we wrapped up this series with a live Q&amp;A session where we answered your questions. If you missed the Q&amp;A, make sure to check out the following recording.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/2FOzPTJprUU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;br&gt;
&lt;p&gt;
If you are interested to learn more, make sure to check out the resources and the Gradle recipes repo linked below! See you in the next MAD Skills series.
&lt;/p&gt;
&lt;p&gt;
Recipes repo: &lt;a href="https://github.com/android/gradle-recipes"&gt;https://github.com/android/gradle-recipes&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Extend the Android Gradle plugin: &lt;a href="https://developer.android.com/studio/build/extend-agp"&gt;https://developer.android.com/studio/build/extend-agp&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
AGP Roadmap: &lt;a href="https://goo.gle/3EuNYXz"&gt;https://goo.gle/3EuNYXz&lt;/a&gt;
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ff-f4RfRE4w:OhUfLfcAoA0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ff-f4RfRE4w:OhUfLfcAoA0:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Ff-f4RfRE4w:OhUfLfcAoA0:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7081888928134660762" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7081888928134660762" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/mad-skills-gradle-and-agp-build-apis.html" title="MAD Skills Gradle and AGP build APIs Wrap Up!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/a/AVvXsEgo1Fw61B9qtQESKdVJzcNXOG0RzhA2k85zkDMDNidBiQY7B6uguHXQ9t9IPB9BiHS0WTB1b4fwIgeN5zEIJrmznF9pt5lu9186wvXxJ3IKfLi8Fci8LyMDbQKGYc7nnijJ9_lhrNHtRQamaF2GTSXyJq5_lQk7we3cSfSviOxhgKN9TscMJaGgdMZJ=s72-c" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-97039259005788360</id><published>2021-12-15T10:00:00.001-08:00</published><updated>2021-12-16T12:08:10.115-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="AppWidgets" /><category scheme="http://www.blogger.com/atom/ns#" term="Compose" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="glance" /><category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Announcing Jetpack Glance Alpha for app widgets</title><content type="html">&lt;meta name="twitter:image" content="https://blogger.googleusercontent.com/img/a/AVvXsEgol-A5cMCZY79MH5v0axcekWIVJ--ymPUe0U5Q4BLsC0BA1LTbWIlZ76XWi2cHjxHVu-kbpv0o2QJWBjNAda_93Ah7AW_PcAgz9o082cd6zyTJZAM8HjQnrZ69A6CaKQaCFuf2LLi4p6xRvS_WUn9tVA2K2wmV3_qB6JDKnFNhO3Guvn5tPc_SuoaY"&gt;
&lt;img style="display:none" src="https://blogger.googleusercontent.com/img/a/AVvXsEgol-A5cMCZY79MH5v0axcekWIVJ--ymPUe0U5Q4BLsC0BA1LTbWIlZ76XWi2cHjxHVu-kbpv0o2QJWBjNAda_93Ah7AW_PcAgz9o082cd6zyTJZAM8HjQnrZ69A6CaKQaCFuf2LLi4p6xRvS_WUn9tVA2K2wmV3_qB6JDKnFNhO3Guvn5tPc_SuoaY"&gt;

&lt;p&gt;&lt;em&gt;Posted by Marcel Pintó Biescas, Developer Relations Engineer,&lt;a href="https://twitter.com/marxallski"&gt; @marxallski&lt;/a&gt;&lt;/em&gt;&lt;p&gt;
  
  
  &lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEgol-A5cMCZY79MH5v0axcekWIVJ--ymPUe0U5Q4BLsC0BA1LTbWIlZ76XWi2cHjxHVu-kbpv0o2QJWBjNAda_93Ah7AW_PcAgz9o082cd6zyTJZAM8HjQnrZ69A6CaKQaCFuf2LLi4p6xRvS_WUn9tVA2K2wmV3_qB6JDKnFNhO3Guvn5tPc_SuoaY" imageanchor="1" &gt;&lt;img style="width:100%" alt="Illustration of a laptop with the Android rocket logo" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEgol-A5cMCZY79MH5v0axcekWIVJ--ymPUe0U5Q4BLsC0BA1LTbWIlZ76XWi2cHjxHVu-kbpv0o2QJWBjNAda_93Ah7AW_PcAgz9o082cd6zyTJZAM8HjQnrZ69A6CaKQaCFuf2LLi4p6xRvS_WUn9tVA2K2wmV3_qB6JDKnFNhO3Guvn5tPc_SuoaY" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;&lt;/center&gt;

  
  &lt;p&gt;
Android 12 &lt;a href="https://developer.android.com/about/versions/12/features/widgets"&gt;revamps&lt;/a&gt; a key feature for many Android users, &lt;a href="https://developer.android.com/guide/topics/appwidgets/overview"&gt;App Widgets&lt;/a&gt;, making them more useful, beautiful, and discoverable (84% use at least 1 widget). Today, we’re making it even easier to build them by releasing the first alpha of &lt;a href="https://developer.android.com/jetpack/androidx/releases/glance"&gt;Jetpack Glance&lt;/a&gt;, a new framework built on top of the &lt;a href="https://developer.android.com/jetpack/androidx/releases/compose-runtime"&gt;Jetpack Compose runtime&lt;/a&gt; designed to make it faster and easier to build app widgets for the home screen and other surfaces. 
&lt;/p&gt;
&lt;p&gt;
We’d love you to give it a try and &lt;a href="https://issuetracker.google.com/issues/new?component=1097239&amp;template=1611667"&gt;share your feedback&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
Glance offers similar modern, declarative Kotlin APIs that you are used to with &lt;a href="https://developer.android.com/jetpack/compose"&gt;Jetpack Compose&lt;/a&gt;, helping you build beautiful, responsive app widgets with way less code. &lt;br&gt;
&lt;/p&gt;


  
  &lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEhCxQ1FBHq-7cO30VysSZuz0EzVCxy_HEDj2_pVwPiSK_8qvItf0nSNrKUFIdU8nCeITffEpdpT90CMFc2tJXPRJufmVQxGLLeFa9nZf5FM2Sq-1jf9gm_XtB1xzdcTOgQ0rMBTBruaZh4f7r_qEp5_8W7pXWNcbvy2f_LVPJI1IjtlToTy9SBWcaNN" imageanchor="1" &gt;&lt;img style="width:75%" alt="Glance “Hello World” widget sample" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEhCxQ1FBHq-7cO30VysSZuz0EzVCxy_HEDj2_pVwPiSK_8qvItf0nSNrKUFIdU8nCeITffEpdpT90CMFc2tJXPRJufmVQxGLLeFa9nZf5FM2Sq-1jf9gm_XtB1xzdcTOgQ0rMBTBruaZh4f7r_qEp5_8W7pXWNcbvy2f_LVPJI1IjtlToTy9SBWcaNN" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;Glance “Hello World” widget sample&lt;/p&gt;&lt;/center&gt;
  
  &lt;br&gt;
  
&lt;td&gt;
&lt;pre class="prettyprint"&gt;class GreetingsWidget(private val name: String): GlanceAppWidget() {
    @Composable
    override fun Content() {
        Text(text = "Hello $name")
    }
}

class GreetingsWidgetReceiver : GlanceAppWidgetReceiver() {

    override val glanceAppWidget = GreetingsWidget("Glance")
}
&lt;/pre&gt;


   &lt;/td&gt;

&lt;h2&gt;How it works&lt;/h2&gt;

&lt;p&gt;
Glance provides a base-set of Composables to help build “glanceable” experiences. Starting today with app widget components but with more coming. Using the Jetpack Compose runtime, Glance can translate &lt;a href="https://developer.android.com/reference/kotlin/androidx/compose/runtime/Composable"&gt;Composables&lt;/a&gt; into actual &lt;a href="https://developer.android.com/reference/android/widget/RemoteViews"&gt;RemoteViews&lt;/a&gt;, and display them in an app widget.&lt;/p&gt;
  
&lt;br&gt;
  
  
  
  &lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEggMg_RzkopYSTx7ASIFIIENF-IIawryxoOo-HwCvY2c_3T2wTUtQpSowT2UxcW3RQgDmBER9sJHGDHrDpDz9KdgXwLy6RM-i02MKoLya_Td9YkQKh1Dz5XE5vbkZbohzepgQPh-azszWtQI9Ky1p_8asnEZ0ZEETBOJBID9-52ytwA5UT5OGZoKE__" imageanchor="1" &gt;&lt;img style="width:75%" alt="Diagram: Glance structure" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEggMg_RzkopYSTx7ASIFIIENF-IIawryxoOo-HwCvY2c_3T2wTUtQpSowT2UxcW3RQgDmBER9sJHGDHrDpDz9KdgXwLy6RM-i02MKoLya_Td9YkQKh1Dz5XE5vbkZbohzepgQPh-azszWtQI9Ky1p_8asnEZ0ZEETBOJBID9-52ytwA5UT5OGZoKE__" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;Diagram: Glance structure&lt;/p&gt;&lt;/center&gt;
  
&lt;br&gt;
  
  &lt;p&gt;
This means that Glance requires &lt;a href="https://developer.android.com/jetpack/compose/interop/adding#anchor"&gt;Compose to be enabled&lt;/a&gt; and depends on Runtime, Graphics, and Unit UI &lt;a href="https://developer.android.com/jetpack/compose/layering"&gt;Compose layers&lt;/a&gt;, but &lt;strong&gt;it’s not directly interoperable&lt;/strong&gt; with other existing Jetpack Compose UI elements. However, state or any other logic within your app can be shared to create a glanceable UI.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;What's in Alpha&lt;/h2&gt;

&lt;p&gt;
This initial release introduces the main APIs to enable you to build app widgets in addition to providing interoperability with existing RemoteViews. 
&lt;/p&gt;
&lt;p&gt;
Here’s an overview of what the library offers, at a glance:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Declare your app widgets with &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/GlanceAppWidget"&gt;GlanceAppWidget&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/GlanceAppWidgetReceiver"&gt;GlanceAppWidgetReceiver&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Compose your UI with the initial set of Glance Composables: &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/layout/package-summary#box"&gt;Box&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/layout/package-summary#row"&gt;Row&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/layout/package-summary#column"&gt;Column&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/text/package-summary#text"&gt;Text&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#button"&gt;Button&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/lazy/package-summary#lazycolumn"&gt;LazyColumn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#image"&gt;Image&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/layout/package-summary#spacer"&gt;Spacer&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Apply modifiers to the composables using &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/GlanceModifier.html"&gt;GlanceModifier&lt;/a&gt;&lt;/code&gt; methods.

&lt;li&gt;Handle user interaction with predefined &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/action/package-summary"&gt;Action&lt;/a&gt;&lt;/code&gt;s. 
&lt;ul&gt;
 
&lt;li&gt;&lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/action/package-summary#actionstartactivity"&gt;actionStartActivity&lt;/a&gt;&lt;/code&gt;
 
&lt;li&gt;&lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/action/package-summary#actionruncallback"&gt;actionRunCallback&lt;/a&gt;&lt;/code&gt;
 
&lt;li&gt;&lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/action/package-summary#actionstartservice"&gt;actionStartService&lt;/a&gt;&lt;/code&gt;
 
&lt;li&gt;&lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/action/package-summary#actionstartbroadcastreceiver"&gt;actionStartBroadcastReceiver&lt;/a&gt;&lt;/code&gt; 
&lt;/ul&gt;

&lt;li&gt;Provide parameters to &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/action/package-summary"&gt;Action&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/action/ActionParameters"&gt;ActionParameters&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Handle &lt;a href="https://developer.android.com/guide/topics/appwidgets/layouts"&gt;different size modes&lt;/a&gt; by defining &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/SizeMode.Single"&gt;SizeMode.Single&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/SizeMode.Exact"&gt;SizeMode.Exact&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/SizeMode.Responsive"&gt;SizeMode.Responsive&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Persist &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/state/package-summary"&gt;GlanceAppWidget state&lt;/a&gt;&lt;/code&gt; by providing a &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/state/GlanceStateDefinition.html"&gt;GlanceStateDefinition&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Local compositions like &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#localcontext"&gt;LocalContext&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#localstate"&gt;LocalState&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#localglanceid"&gt;LocalGlanceId&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/package-summary#localsize"&gt;LocalSize&lt;/a&gt;&lt;/code&gt;.

&lt;li&gt;Interop with your existing &lt;code&gt;&lt;a href="https://developer.android.com/reference/android/widget/RemoteViews.html"&gt;RemoteViews&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/glance/appwidget/package-summary#androidremoteviews"&gt;AndroidRemoteViews&lt;/a&gt;&lt;/code&gt; Composable.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We are working on bringing even more functionality with default theming, further Android Studio support, and more. Stay tuned for &lt;a href="https://developer.android.com/jetpack/androidx/releases/glance"&gt;new releases&lt;/a&gt;.
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;em&gt;Note: while the minSDK is 21, we are currently only supporting compatibility till SDK v23.&lt;/em&gt;&lt;/p&gt;
  
  &lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/15Q7xqxBGG0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
  &lt;br&gt;
  

&lt;h2&gt;Get started with Glance&lt;/h2&gt;

&lt;p&gt;
Check out &lt;a href="https://github.com/android/user-interface-samples/tree/glance/AppWidget/glance-widget"&gt;the sample&lt;/a&gt; on GitHub for a quick start. Glance works with the latest &lt;a href="https://developer.android.com/studio"&gt;stable Android Studio&lt;/a&gt;, although since Glance relies on Compose Runtime, follow the steps on &lt;a href="https://developer.android.com/jetpack/compose/interop/adding#setup"&gt;the Jetpack Compose docs&lt;/a&gt; to set it up first.
&lt;/p&gt;
&lt;p&gt;
In addition, for a more advanced showcase, checkout &lt;a href="https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:glance/glance-appwidget/integration-tests/demos/src/main/java/androidx/glance/appwidget/demos/"&gt;the demos in the AndroidX repository&lt;/a&gt;.
&lt;/p&gt;
  
  &lt;br&gt;
  
    &lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEhynsyDKiaahKLF-tCajggeTyXBdCVTlqQ7VZZJWSGNmpxtg-zGhUc-hSfhBjgP0it74HM-MsaFxKHqR6ePiKbbX2UlV4_tDw25qvKcDpH-c5MhlGBX0a8IRLhjS1YqrrSBQG3ib-0K_a3EllT00hAeRXu8zFX9YaLypTygpxkud9Cb--HfpYBWbMVV" imageanchor="1" &gt;&lt;img style="width:75%" alt="ResponsiveAppWidget.kt demo" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEhynsyDKiaahKLF-tCajggeTyXBdCVTlqQ7VZZJWSGNmpxtg-zGhUc-hSfhBjgP0it74HM-MsaFxKHqR6ePiKbbX2UlV4_tDw25qvKcDpH-c5MhlGBX0a8IRLhjS1YqrrSBQG3ib-0K_a3EllT00hAeRXu8zFX9YaLypTygpxkud9Cb--HfpYBWbMVV" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;&lt;a href="https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:glance/glance-appwidget/integration-tests/demos/src/main/java/androidx/glance/appwidget/demos/ResponsiveAppWidget.kt"&gt;ResponsiveAppWidget.kt&lt;/a&gt; demo&lt;/p&gt;&lt;/center&gt;
  
&lt;p&gt;
The Alpha version is your opportunity to influence the APIs, so please share &lt;a href="https://issuetracker.google.com/issues/new?component=1097239&amp;template=1611667"&gt;your feedback &lt;/a&gt;and let us know your experience!
&lt;/p&gt;
&lt;p&gt;
Happy Composing with Glance!
&lt;/p&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=HANw9bYSHX4:CXPRVHtEkqE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=HANw9bYSHX4:CXPRVHtEkqE:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=HANw9bYSHX4:CXPRVHtEkqE:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/97039259005788360" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/97039259005788360" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/announcing-jetpack-glance-alpha-for-app.html" title="Announcing Jetpack Glance Alpha for app widgets" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/a/AVvXsEgol-A5cMCZY79MH5v0axcekWIVJ--ymPUe0U5Q4BLsC0BA1LTbWIlZ76XWi2cHjxHVu-kbpv0o2QJWBjNAda_93Ah7AW_PcAgz9o082cd6zyTJZAM8HjQnrZ69A6CaKQaCFuf2LLi4p6xRvS_WUn9tVA2K2wmV3_qB6JDKnFNhO3Guvn5tPc_SuoaY=s72-c" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-965821659496601139</id><published>2021-12-14T10:02:00.001-08:00</published><updated>2021-12-14T10:02:36.463-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Rebuilding our guide to app architecture</title><content type="html">&lt;meta name="twitter:image" content="https://blogger.googleusercontent.com/img/a/AVvXsEgnJ0CCtKClhEOE_BDOoWiXGr2eA6LWjn-RPvFjFx8Va97f_1_xCmpF3uI_bUILoQPqJUDlXUbIRVPjvi3oCiFtRVZlcAAkHBa1cJlufG5OvmeovQeiHgH9bLhxREufi-fw7FnxIcmxGmzWuW0DmYUZolsM6rywTSZIm3KtI6yx9jSIeRpuYzRZubke"&gt;
&lt;img style="display:none" src="https://blogger.googleusercontent.com/img/a/AVvXsEgnJ0CCtKClhEOE_BDOoWiXGr2eA6LWjn-RPvFjFx8Va97f_1_xCmpF3uI_bUILoQPqJUDlXUbIRVPjvi3oCiFtRVZlcAAkHBa1cJlufG5OvmeovQeiHgH9bLhxREufi-fw7FnxIcmxGmzWuW0DmYUZolsM6rywTSZIm3KtI6yx9jSIeRpuYzRZubke"&gt;

&lt;p&gt;&lt;em&gt;Posted by Manuel Vicente Vivo, Developer Relations Engineer, &lt;a href="https://twitter.com/manuelvicnt"&gt;
  @manuelvicnt&lt;/a&gt;&lt;/em&gt;&lt;p&gt;
  
    
    &lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEgnJ0CCtKClhEOE_BDOoWiXGr2eA6LWjn-RPvFjFx8Va97f_1_xCmpF3uI_bUILoQPqJUDlXUbIRVPjvi3oCiFtRVZlcAAkHBa1cJlufG5OvmeovQeiHgH9bLhxREufi-fw7FnxIcmxGmzWuW0DmYUZolsM6rywTSZIm3KtI6yx9jSIeRpuYzRZubke" imageanchor="1" &gt;&lt;img style="width:100%" alt="Android robot under a flow chart graphic" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEgnJ0CCtKClhEOE_BDOoWiXGr2eA6LWjn-RPvFjFx8Va97f_1_xCmpF3uI_bUILoQPqJUDlXUbIRVPjvi3oCiFtRVZlcAAkHBa1cJlufG5OvmeovQeiHgH9bLhxREufi-fw7FnxIcmxGmzWuW0DmYUZolsM6rywTSZIm3KtI6yx9jSIeRpuYzRZubke" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

  &lt;br&gt;
  
&lt;p&gt;
As Android apps grow in size, it's important to design the code with an architecture in place to allow the app to &lt;strong&gt;scale&lt;/strong&gt;, improve &lt;strong&gt;quality&lt;/strong&gt; and &lt;strong&gt;robustness&lt;/strong&gt;, and make it &lt;strong&gt;easier to test&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
An app architecture defines the &lt;strong&gt;boundaries&lt;/strong&gt; between parts of the app and the &lt;strong&gt;responsibilities&lt;/strong&gt; each part should have. This favors the &lt;a href="https://en.wikipedia.org/wiki/Separation_of_concerns"&gt;separation of concerns&lt;/a&gt; principle that enables the aforementioned benefits.
&lt;/p&gt;
&lt;p&gt;
In response to community demand for up-to-date guidance on app architecture, &lt;strong&gt;we're launching a &lt;a href="https://developer.android.com/jetpack/guide"&gt;revamped guide to app architecture&lt;/a&gt;&lt;/strong&gt;. This includes best practices and recommended architecture for building robust, high-quality apps. It also provides a page for each layer of the recommended architecture: &lt;a href="https://developer.android.com/jetpack/guide/ui-layer"&gt;UI&lt;/a&gt;, &lt;a href="https://developer.android.com/jetpack/guide/domain-layer"&gt;domain&lt;/a&gt;, and &lt;a href="https://developer.android.com/jetpack/guide/data-layer"&gt;data&lt;/a&gt; layers. Within them, you'll find deep dives into more complex topics, such as how to handle &lt;a href="https://developer.android.com/jetpack/guide/ui-layer/events"&gt;UI events&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Each Android app should have at least two layers:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;The &lt;a href="https://developer.android.com/jetpack/guide/ui-layer"&gt;UI layer&lt;/a&gt; that displays application data on the screen.

&lt;li&gt;The &lt;a href="https://developer.android.com/jetpack/guide/data-layer"&gt;data layer&lt;/a&gt; that contains the business logic of your app and exposes application data.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
You can add an additional layer called the &lt;a href="https://developer.android.com/jetpack/guide/domain-layer"&gt;domain layer&lt;/a&gt; to simplify and reuse the interactions between the UI and data layers.
&lt;/p&gt;


&lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEi9J4PtTryeHRes2oL_uqldpBfebky8BTG9JnfwGD1dzIeh-6CLaOvGqVgJuzC9FXPW6TfhB7LppVMMJqA7scDnECSojcbh8qi8ja8jhrxouYCdC5AOlFiU7ykHkqKY1MU1GUNJdjkOyjYKCtWvX3YZTljGE-G_a3E1rdYCl8wnb7CbVSKP4J_NbjHV" imageanchor="1" &gt;&lt;img style="width:100%" alt="flow chart showing UI layer, domain layer, data layer" id=imgFull border="0" src="https://blogger.googleusercontent.com/img/a/AVvXsEi9J4PtTryeHRes2oL_uqldpBfebky8BTG9JnfwGD1dzIeh-6CLaOvGqVgJuzC9FXPW6TfhB7LppVMMJqA7scDnECSojcbh8qi8ja8jhrxouYCdC5AOlFiU7ykHkqKY1MU1GUNJdjkOyjYKCtWvX3YZTljGE-G_a3E1rdYCl8wnb7CbVSKP4J_NbjHV" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;General diagram of a typical app architecture. The UI layer gets the application data from the optional domain layer, or the data layer, that exposes application data.&lt;/p&gt;&lt;/center&gt;


&lt;br&gt;
&lt;p&gt;
We have created a &lt;a href="https://developer.android.com/courses/pathways/android-architecture"&gt;learning pathway&lt;/a&gt; to help you consume this content in order and in a trackable way. Don't miss the chance to learn all of this and get a badge as recognition!
&lt;/p&gt;
&lt;br&gt;



&lt;center&gt; &lt;a href="https://blogger.googleusercontent.com/img/a/AVvXsEgAqH8sIWG17lOXp1rwyp5S5vxpXDhP0j4rPfOrODeE7bWbOhZ2FISbyqY4-oYJxaAUvEr-sNalLZAn2hLi4NNH2UIFhSnrpJb1TIn-aow9W_PVravlfD5rJxDMixEKqUKSUxDErXSxAbIGey-QFrBVw9Nx1UElfLTbp8rzHyiePpvVUSC6c_1VVuTx" imageanchor="1" &gt;&lt;img style="width:75%" alt="badge" id=imgFull border="0" src=" https://blogger.googleusercontent.com/img/a/AVvXsEgAqH8sIWG17lOXp1rwyp5S5vxpXDhP0j4rPfOrODeE7bWbOhZ2FISbyqY4-oYJxaAUvEr-sNalLZAn2hLi4NNH2UIFhSnrpJb1TIn-aow9W_PVravlfD5rJxDMixEKqUKSUxDErXSxAbIGey-QFrBVw9Nx1UElfLTbp8rzHyiePpvVUSC6c_1VVuTx" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;



&lt;h2&gt;Is this for you?&lt;/h2&gt;


&lt;p&gt;
If you’re a &lt;strong&gt;beginner&lt;/strong&gt;, you should begin by &lt;strong&gt;understanding the benefits&lt;/strong&gt; of having an app architecture and then follow these recommendations as a first approach to the topic. &lt;strong&gt;Intermediate and advanced&lt;/strong&gt; developers can &lt;strong&gt;follow&lt;/strong&gt; these recommendations and &lt;strong&gt;customize&lt;/strong&gt; them to their needs. In fact, our research suggests that most professional developers are already using these best practices.
&lt;/p&gt;
&lt;p&gt;
You might be wondering if you should update your existing architecture to follow this recommendation, and the answer is no… or wait… it's up to you. If your current architecture works for your team, you might want to stick with it. But you might also find patterns in our guides you can benefit from and incorporate into your app.
&lt;/p&gt;
&lt;h2&gt;We’re not done yet&lt;/h2&gt;


&lt;p&gt;
This is the first batch of documents we're releasing, with more to come in 2022. Help us make the guidance better! If you have any feedback on the current recommendations or if you want to see other architecture-related topics in them, let us know in our &lt;a href="https://issuetracker.google.com/issues/new?component=192697&amp;template=845603"&gt;docs issue tracker&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zdK5JgRQU0E:QES5rYvAnaM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=zdK5JgRQU0E:QES5rYvAnaM:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=zdK5JgRQU0E:QES5rYvAnaM:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/965821659496601139" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/965821659496601139" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/rebuilding-our-guide-to-app-architecture.html" title="Rebuilding our guide to app architecture" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/a/AVvXsEgnJ0CCtKClhEOE_BDOoWiXGr2eA6LWjn-RPvFjFx8Va97f_1_xCmpF3uI_bUILoQPqJUDlXUbIRVPjvi3oCiFtRVZlcAAkHBa1cJlufG5OvmeovQeiHgH9bLhxREufi-fw7FnxIcmxGmzWuW0DmYUZolsM6rywTSZIm3KtI6yx9jSIeRpuYzRZubke=s72-c" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4441717902675823801</id><published>2021-12-14T06:15:00.008-08:00</published><updated>2021-12-14T14:55:19.055-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Launching Notes from Google Play | A year of evolution  </title><content type="html">&lt;meta name="twitter:image" content="https://blogger.googleusercontent.com/img/a/AVvXsEj0BN9sgeT2WPReLNS9veciE3z81x6NOTFnQyg3lA0vTflPkLTlckcoJnuer7dUqD2JBwRfPie3JTgHyulZHvPpc4KO2CruJRR5xXbaaOTE0MfFR8BTBha6SC2Gwrha47_1Xb9U9LDHgK9bVkRxkgIUOq6GvtzCYExigeRJ03cr5eDtz0Ao2fitM68klg"&gt;
&lt;img style="display:none" src="https://blogger.googleusercontent.com/img/a/AVvXsEj0BN9sgeT2WPReLNS9veciE3z81x6NOTFnQyg3lA0vTflPkLTlckcoJnuer7dUqD2JBwRfPie3JTgHyulZHvPpc4KO2CruJRR5xXbaaOTE0MfFR8BTBha6SC2Gwrha47_1Xb9U9LDHgK9bVkRxkgIUOq6GvtzCYExigeRJ03cr5eDtz0Ao2fitM68klg"&gt;

&lt;p&gt;&lt;em&gt;Posted by Purnima Kochikar, Vice President, Google Play Partnerships&lt;/em&gt;&lt;/p&gt;&lt;p&gt;

&lt;/p&gt;&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-YjOsQNZKqrs/YbJSNibbbmI/AAAAAAAAROc/96JaVNST8bgt1v2VmcwGlGx8ARacETdQQCNcBGAsYHQ/s0/Final%2Bheader%2Band%2Bblog_Final%2Bheader%2Bbanner.jpg"&gt;&lt;img alt="Notes from Play title card" border="0" data-original-height="714" data-original-width="1058" id="imgFull" src="https://1.bp.blogspot.com/-YjOsQNZKqrs/YbJSNibbbmI/AAAAAAAAROc/96JaVNST8bgt1v2VmcwGlGx8ARacETdQQCNcBGAsYHQ/s0/Final%2Bheader%2Band%2Bblog_Final%2Bheader%2Bbanner.jpg" style="width: 100%;" /&gt;&lt;/a&gt; &lt;/center&gt;
  
&lt;br&gt;
&lt;p&gt;
Hello there, 
&lt;/p&gt;
&lt;p&gt;
Today we are kicking off &lt;strong&gt;&lt;em&gt;Notes from Google Play&lt;/em&gt;&lt;/strong&gt;, a new series where several times a year we celebrate your creativity and impact, and share key insights and best practices, to inspire you to be bolder, go further, and build even more innovative apps and games.
&lt;/p&gt;



&lt;center&gt;&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/WINMwDqax0A" title="YouTube video player" width="100%"&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Purnima Kochikar addresses our goals behind the 'Notes from Google Play' series.&lt;/p&gt;&lt;/center&gt;

&lt;p&gt;
2021 continued to be a year of challenges and uncertainty, and you inspired us by your ability to turn obstacles into useful and joyful apps and services. Your apps helped over 2.5 billion people using Android devices learn, connect, relax, exercise, laugh, have fun, and so much more. As a result, developers making over 1M USD per month with Google Play’s billing or having 10 million monthly active users grew by 30% this year. 
&lt;/p&gt;
&lt;p&gt;
In this inaugural edition of &lt;strong&gt;&lt;em&gt;Notes from Google Play&lt;/em&gt;&lt;/strong&gt; we celebrate your creativity and resilience. A developer who exemplified these traits and deeply moved and inspired me and my team is Mohammed Kamara. Thank you, Mo for channeling deep personal loss to create a better world for women of color, providing affordable and customized healthcare through the app. We are humbled to play a small part in making your vision for &lt;a href="https://play.google.com/store/apps/details?id=com.inovcares.patient&amp;amp;hl=en_GB&amp;amp;gl=US"&gt;InovCares&lt;/a&gt; a reality.
&lt;/p&gt;
&lt;br&gt;

&lt;center&gt;&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/Z4PDai_Jh1c" title="YouTube video player" width="100%"&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Mohamed Kamara, CEO and Founder of InovCares, tells the story behind his groundbreaking healthcare app.&lt;/p&gt;&lt;/center&gt;

&lt;br&gt;

&lt;p&gt;
A special shout out also goes to the winners of the &lt;strong&gt;&lt;a href="https://play.google.com/store/apps/editorial_collection/promotion_topic_bestof2021_xfn_web"&gt;Best of Google Play Awards&lt;/a&gt;&lt;/strong&gt; and the &lt;strong&gt;&lt;a href="https://android-developers.googleblog.com/2021/09/celebrating-some-of-best-indie-games.html"&gt;Indie Games Festival&lt;/a&gt;&lt;/strong&gt;. All of you inspire us to continue to work hard to evolve Play and Android to enable you to build great apps and successful businesses.
&lt;/p&gt;
&lt;p&gt;
This focus on you and your success resulted in many impactful developments in 2021, including the evolution of our business model and new product features and tools. At Google Play we are focused on two key goals - &lt;strong&gt;helping you build and grow sustainable global businesses&lt;/strong&gt; and investing in Android and Play platform features, tools, and ecosystems to enable you to build innovative apps and games.  
&lt;/p&gt;
&lt;br&gt;


&lt;p&gt; &lt;image alt="illustration of people standing on a bar graph" height="300" src="https://1.bp.blogspot.com/-wzC_bRejk34/YbJVTVwcZ4I/AAAAAAAAROo/PnlG5bPYaBE3Nro9YMdYNecixv9ekQQGACNcBGAsYHQ/w319-h320/Final%2Bheader%2Band%2Bblog_blog%2Bimage%2B2.jpg" style="float: right; margin-bottom: 0.3px; margin-right: 10px;" width="300px"&gt;&lt;/image&gt;&lt;/p&gt; 

&lt;h3&gt;Supporting your business growth&lt;/h3&gt;&lt;p class="body-text"&gt;
&lt;/p&gt;&lt;p&gt;
As the mobile industry has matured, you have created app businesses that have varying needs, so we’ve designed &lt;a href="https://android-developers.googleblog.com/2021/10/evolving-business-model.html"&gt;multiple programs to support &lt;/a&gt;you. For example, we created the &lt;a href="https://play.google.com/console/about/mediaprogram/"&gt;Play Media Experience Program&lt;/a&gt; to encourage Video, Audio, and Books developers to build great cross-device experiences, while enabling apps that support authors &amp;amp; musicians by discounting the service fee as low as 10%. A few months ago we announced a new fee structure to support the evolution of the subscriptions business model, allowing &lt;strong&gt;&lt;em&gt;&lt;span style="text-decoration: underline;"&gt;all&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt; subscription app developers to benefit from lower fees. Due to the innovative changes we announced this year, I’m thrilled to share that 99% of developers globally now qualify for a service fee of 15% or less. Thank you for your thoughtful feedback while we were designing these programs and your vocal support since the launch of the new fee structure.  
&lt;/p&gt;
&lt;p&gt;
We have also continued to invest in programs to help you reach, retain, and re-engage your users.
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://play.google.com/console/about/googleplaypass/"&gt;Google Play Pass&lt;/a&gt; is now available in 90 countries with over 800 games and apps; those of you participating have on average more than doubled your revenue across participating titles in these regions. 

&lt;/li&gt;&lt;li&gt;&lt;a href="https://play.google.com/console/about/googleplaypoints/"&gt;Google Play Points&lt;/a&gt; is now available in 28 countries. By interacting with and paying for your apps, consumers have  earned over 20 billion points to date.
&lt;/li&gt;
&lt;/ul&gt;

&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;Helping you build high quality apps&lt;/h3&gt;

&lt;p&gt;
We are committed to empowering you to turn your creative ideas into excellent apps and have created tools and guidelines to help ensure your apps are of high quality. I invite you to pay attention to three key features/guidelines:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://developer.android.com/quality"&gt;App Quality guidelines and best practices&lt;/a&gt; help you build and test apps across various form factors and the &lt;a href="https://android-developers.googleblog.com/2021/07/introducing-android-game-development-kit.html"&gt;Android Game Development Kit&lt;/a&gt; helps you build higher quality games.  

&lt;/li&gt;&lt;li&gt;The Play Console &lt;a href="https://android-developers.googleblog.com/2021/07/plan-for-success-on-google-play-with.html"&gt;reach and devices&lt;/a&gt; tool enables you to successfully reach global audiences by providing insights on devices and quality guidelines.

&lt;/li&gt;&lt;li&gt;&lt;a href="https://android-developers.googleblog.com/2021/08/making-ratings-and-reviews-better-for.html"&gt;Personalized and relevant ratings and reviews&lt;/a&gt; help you analyze and respond to user feedback more effectively.&lt;/li&gt;&lt;/ul&gt;




&lt;br&gt;
&lt;br&gt;




&lt;p&gt;&lt;img alt="illustration of person with a giant key" height="300" src="https://blogger.googleusercontent.com/img/a/AVvXsEh0qZHR2JnJ_-3rC5MW1Ea-XsgKA0sgRm-5B-wYVVFmbNW11bqTTGH3rdytYZkrp-YC4_qc5aQrHUDohglX0nHK1UblY98IDYUz_O0K0FTFcApQn9tNggPnfUjR3Xgd1bIGG3uKABHyW-FlUPGVrSlz1rWCTC6LlxaV32eQxPiX40XEpWvdklxWBBk3" style="float: right; margin-bottom: 0.3px; margin-right: 10px;" width="300px" /&gt;&lt;/p&gt;


&lt;h3&gt;Helping you build user trust and loyalty &lt;/h3&gt;
&lt;p&gt;
Trust and safety are the cornerstones of sustainable business success and key to user loyalty. This year, we continued to invest in platform features and policies that help you build safer apps and strengthen user trust. We also heard your feedback and have invested in educational tools and resources to help you anticipate and understand the new features and policies. The key highlights this year - 
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Earlier this year, we shared details about the upcoming &lt;a href="https://android-developers.googleblog.com/2021/10/launching-data-safety-in-play-console.html"&gt;Data safety section&lt;/a&gt; in the Play store, which will let users know the type of data your app collects, stores, and how that data is used. By &lt;strong&gt;giving you a way to showcase your approach to privacy-and-security&lt;/strong&gt;, we’re not only building user trust, we’re helping people make informed decisions about the apps they install and use. 
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;

&lt;li&gt;To help you protect your business from abuse and your users from attack we created the &lt;a href="https://developer.android.com/google/play/integrity"&gt;Play Integrity API&lt;/a&gt;, which lets your backend server determine whether it’s interacting with your genuine app binary, installed by Google Play, and running on a genuine Android device that’s powered by Google Play services.&lt;/li&gt;
  
  &lt;li&gt;To &lt;strong&gt;help you build safer and more trusted apps, &lt;/strong&gt;we have created &lt;a href="https://developersonair.withgoogle.com/events/2021q4-policy-seminar"&gt;webinars&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=apHcQXxMUIs&amp;amp;list=PLWz5rJ2EKKc9C6XWHBpvxSlhs272oXn_d&amp;amp;index=3"&gt;new Google Play Console features&lt;/a&gt; to help you anticipate and understand policy changes, policy violations, and the process to appeal a decision. Please &lt;a href="https://developer.android.com/newsletter"&gt;opt-in&lt;/a&gt; to receive email invites to upcoming policy webinars.&lt;/li&gt;&lt;/ul&gt;


&lt;span style="font-size: 18.72px; font-weight: 700; text-align: center;"&gt;&lt;div&gt;&lt;span style="font-size: 18.72px; font-weight: 700; text-align: center;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-size: 18.72px; font-weight: 700; text-align: center;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;

&lt;br&gt;
&lt;br&gt;

&lt;p&gt; &lt;image alt="illustration of people on devices" height="300" src="https://1.bp.blogspot.com/-3LThM0uhR9w/YbJqAOfFB-I/AAAAAAAARO8/6k1Eek6nKuIhMU0-r1E_e1tjILCx5K1QQCNcBGAsYHQ/w262-h263/Final%2Bheader%2Band%2Bblog_blog%2Bimage%2B3.jpg" style="float: right;" width="300px"&gt;&lt;/image&gt;&lt;/p&gt; 

&lt;h3&gt;Fostering the next generation of developers&lt;/h3&gt;

&lt;p&gt;
Nothing excites me more than finding and nurturing the next generation of talented developers and building local ecosystems around the world that address local needs. &lt;a href="https://android-developers.googleblog.com/2021/03/boosting-dev-success.html"&gt;Earlier this year&lt;/a&gt; we announced a reduced service fee tier of 15% on the first $1M in annual earnings for all developers, helping us continue to foster innovation on Android/Play. 
&lt;/p&gt;
&lt;p&gt;
It has been truly humbling to see key influencers, stakeholders, and industry and government leaders co-invest with us in this effort. &lt;a href="https://events.withgoogle.com/indie-games-accelerator-2021/mentors/#content"&gt;Our most successful developers&lt;/a&gt; invested personal time and energy to mentor, coach, and grow Indies through the &lt;a href="https://events.withgoogle.com/indie-games-accelerator-2021/"&gt;Indie Games Accelerator&lt;/a&gt;. Government leaders partnered with us to support startup ecosystems in countries like Korea and India - the &lt;a href="https://blog.google/around-the-globe/google-asia/korean-startups/"&gt;ChangGoo&lt;/a&gt; program in Korea has been created in partnership with Ministry of SMEs and Startups (MSS) and the Korea Institute of Startup &amp;amp; Entrepreneurship Development (KISED)&lt;strong&gt;, &lt;/strong&gt;whereas the &lt;a href="https://events.withgoogle.com/appscale-academy/"&gt;Appscale Academy&lt;/a&gt; in India was established in partnership with the MeitY Startup Hub, an initiative of the Ministry of Electronics and Information Technology (MeitY). Thank you all for your commitment to innovation and the app ecosystem.  
&lt;/p&gt;
&lt;br&gt;



&lt;center&gt;&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/h2MVIlRhNLs" title="YouTube video player" width="100%"&gt;&lt;/iframe&gt;&lt;p id="imgCaption"&gt;Get a snapshot view of Appscale Academy: our growth and development program for startups across India.&lt;/p&gt;&lt;/center&gt;



&lt;h3&gt;Staying connected&lt;/h3&gt;

&lt;p&gt;
I have missed seeing you in person over the last two years. The challenges imposed by COVID-19 helped us find new ways to stay connected. Many of you participated in virtual sessions to learn about new market opportunities and engaged in thoughtful online discussions on topics as diverse as Future of Work, Diversity, Equity, and Inclusion, and Growth and Global expansion strategies. Some of you also told us that you are feeling some online event fatigue, so this year we also invested in content that you can consume at your own pace including &lt;a href="https://medium.com/googleplaydev"&gt;thought leadership&lt;/a&gt; and &lt;a href="https://play.google.com/console/about/"&gt;best practices&lt;/a&gt;, and e-learning courses on &lt;a href="https://play.google.com/academy/?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=US_en_EXA_Non_Brand&amp;amp;utm_content=Play_Academy&amp;amp;gclid=Cj0KCQiAkNiMBhCxARIsAIDDKNWgv4_7hkfX6hh1icsaQ1uHALDU6c3hrnXpuBZDvSQNLD2LPOeaY0kaAsj5EALw_wcB"&gt;Play Academy&lt;/a&gt;. We even launched our &lt;a href="https://play.google.com/academy/certificate/"&gt;first certificate&lt;/a&gt; to help you get the most out of our store listing tools and features. 
&lt;/p&gt;
&lt;p&gt;
Until the next edition, from my team to yours, best wishes for the upcoming year. We hope you will always see Google Play as a partner to help you delight your users, expand your audience, and grow your business. 
&lt;/p&gt;
  
&lt;p&gt;
Happy Holidays.
&lt;/p&gt;
&lt;p&gt;
Purnima Kochikar,
&lt;/p&gt;
&lt;p&gt;
Vice President, Google Play Partnerships 
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Make sure you don’t miss future editions by following &lt;a href="https://twitter.com/purnimakochikar"&gt;me&lt;/a&gt; / &lt;a href="https://twitter.com/GooglePlayDev"&gt;us&lt;/a&gt; on Twitter or signing up to our &lt;a href="https://developer.android.com/subscribe"&gt;monthly newsletter.&lt;/a&gt; &lt;/em&gt;
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=jebYxL3JD0Y:r-mTBE0BxYo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=jebYxL3JD0Y:r-mTBE0BxYo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=jebYxL3JD0Y:r-mTBE0BxYo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4441717902675823801" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4441717902675823801" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/launching-notes-from-google-play.html" title="Launching Notes from Google Play | A year of evolution  " /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/a/AVvXsEj0BN9sgeT2WPReLNS9veciE3z81x6NOTFnQyg3lA0vTflPkLTlckcoJnuer7dUqD2JBwRfPie3JTgHyulZHvPpc4KO2CruJRR5xXbaaOTE0MfFR8BTBha6SC2Gwrha47_1Xb9U9LDHgK9bVkRxkgIUOq6GvtzCYExigeRJ03cr5eDtz0Ao2fitM68klg=s72-c" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7594998561292971657</id><published>2021-12-09T10:00:00.001-08:00</published><updated>2021-12-09T10:00:25.407-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="android developers" /><category scheme="http://www.blogger.com/atom/ns#" term="AndroidDev" /><category scheme="http://www.blogger.com/atom/ns#" term="Hiring" /><title type="text">Android Developer Relations is hiring</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-IoW_neqnD9E/YZ6t6ijCy_I/AAAAAAAARMY/Ltbtxm_0fQc_Vc1PLyC8dQgypnp6e9ufwCLcBGAsYHQ/s0/Android-devrel-hiring-social%2B%25281%2529.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-IoW_neqnD9E/YZ6t6ijCy_I/AAAAAAAARMY/Ltbtxm_0fQc_Vc1PLyC8dQgypnp6e9ufwCLcBGAsYHQ/s0/Android-devrel-hiring-social%2B%25281%2529.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by &lt;em&gt;&lt;a href="https://twitter.com/mabouza"&gt;Maru Ahues Bouza&lt;/a&gt;, Director, Android Developer Relations&lt;/em&gt;&lt;/em&gt;&lt;p&gt;

  &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-IoW_neqnD9E/YZ6t6ijCy_I/AAAAAAAARMY/Ltbtxm_0fQc_Vc1PLyC8dQgypnp6e9ufwCLcBGAsYHQ/s0/Android-devrel-hiring-social%2B%25281%2529.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Illustration of a woman laying ont he floor looking at a laptop" id=imgFull border="0" src="https://1.bp.blogspot.com/-IoW_neqnD9E/YZ6t6ijCy_I/AAAAAAAARMY/Ltbtxm_0fQc_Vc1PLyC8dQgypnp6e9ufwCLcBGAsYHQ/s0/Android-devrel-hiring-social%2B%25281%2529.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

  &lt;p&gt;
Apps are essential to making Android a platform people love - whether it’s on their phones, cars, TVs, or watches. As a popular mobile platform, Android is thriving with 1 in 4 developers - worldwide - building for Android according to &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-platforms-all-respondents5"&gt;Stack Overflow’s 2020 developer survey.&lt;/a&gt;    
&lt;/p&gt;
&lt;p&gt;
In Android Developer Relations (or Android DevRel for short), our mission is to help developers be successful on Android by helping them build great apps with the latest Android and Play features, empower anyone to get a great career as an Android developer, and advocate &lt;em&gt;for&lt;/em&gt; developers as Android and Play evolve. It’s truly rewarding because we get to see the future of apps - every day - and help our fellow developers achieve great things. With such a big mission, we’re hiring engineers, technical writers, and program managers - and if this gets you inspired, we’d love to talk! Check out the links at the end of this blog and apply to join our team.
&lt;/p&gt;
&lt;p&gt;
But first, what does Android DevRel actually do? Our team works with external developers, writes code, creates content, launches careers, grows communities, runs conferences - and more. Read on to learn more!
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Building better products with developers&lt;/h2&gt;


&lt;p&gt;
We work with product and engineering teams in Android and Play to define go-to-market strategies for new developer products and run Early Access Programs (EAPs) with the goal of building better products for all developers. Through these EAPs, we do deep technical engineering work with the most influential developers to help them integrate and deliver feedback to validate that the products we’re building are ready to work at scale.
&lt;/p&gt;
&lt;p&gt;
We work with these developers to build high quality apps across multiple screens, to ensure better user experiences on Android and we share their success stories to show how integrating with these products will help developers be more successful in the Android ecosystem, and to help inspire other developers to adopt.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/9_vbo6BZ0VU" alt="Android Developer Story: Spotify across screens" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;
&lt;h2&gt;Code&lt;/h2&gt;


&lt;p&gt;
A big part of how we help developers is through code — be it tutorials, videos, blogs, or entire multi-unit educational courses. We produce everything from simple code snippets that explain how to perform a specific function, to sample apps&lt;a href="https://github.com/android/compose-samples"&gt; like Jet*&lt;/a&gt; or the&lt;a href="https://github.com/google/iosched"&gt; Google I/O app&lt;/a&gt; that demonstrates how everything comes together. In the process of creating sample code, you may be the first developer to ever build something with a new API! We call this being the “zeroth customer” and it’s an important role where you can directly influence the direction of a product through feedback (and yes, some trial and error!)
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-vL4CZVCgYHg/YZ6vK6qANYI/AAAAAAAARMg/LgkGUj9wA3IPi6lzFds5oSuGvfondUdpQCLcBGAsYHQ/s0/samples_montage.gif" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style= "width:100%" alt="Create code samples that inspire and help people to learn" border="0" data-original-height="576" data-original-width="1024" src="https://1.bp.blogspot.com/-vL4CZVCgYHg/YZ6vK6qANYI/AAAAAAAARMg/LgkGUj9wA3IPi6lzFds5oSuGvfondUdpQCLcBGAsYHQ/s0/samples_montage.gif"/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;

&lt;h2&gt;Content&lt;/h2&gt;


&lt;p&gt;
In helping developers, we end up learning best practices and producing a ton of content - documentation, tutorials, screencasts, talks, blog posts, podcasts, and more. There is an art to breaking down complex subjects into a learning path - to help both beginner and advanced developers alike - and it is something we do every day. From introducing new concepts, to distilling best practices, to thoroughly documenting the functionality of a new API - our role is to help developers understand and thrive on Android. While our output is the content itself, it’s important to note that engineering is at the heart of this. In order to teach developers how to use these technologies, we first have to understand them deeply ourselves. 
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-j430s68WfiE/Ya_nBTTyItI/AAAAAAAARN0/BjOBpH6IR3w_hMwGq7pVQixk1eHq_eWiQCNcBGAsYHQ/s0/1_CDmI8k_rqhsdjHVAwXtq1Q.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Screenshot of webpage that reads Add a Room Database" id=imgFull border="0" src="https://1.bp.blogspot.com/-j430s68WfiE/Ya_nBTTyItI/AAAAAAAARN0/BjOBpH6IR3w_hMwGq7pVQixk1eHq_eWiQCNcBGAsYHQ/s0/1_CDmI8k_rqhsdjHVAwXtq1Q.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;p id="imgCaption"&gt;Teach millions of developers through learning materials&lt;/p&gt;
&lt;/center&gt;
&lt;br&gt;

&lt;h2&gt;Community&lt;/h2&gt;


&lt;p&gt;
Many of us were Android developers before we joined DevRel, and one of the most gratifying aspects of our role is meeting and connecting with developers around the world. We engage with Google Developer Experts for Android (GDEs), Google Developer Groups, and of course individual community members on a regular basis through events, social media, and Slack. We love to hear what people are working on, lend a hand where we can, and create connections across the community so people can learn from each other.
&lt;/p&gt;

&lt;iframe width="100%" alt="Creating an app to help your community with Android GDE: Gaston Saillen" height="315" src="https://www.youtube.com/embed/YmJ7hcjzT0s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;
&lt;h2&gt;Conferences&lt;/h2&gt;


&lt;p&gt;
One of the places the community comes together is at conferences - and &lt;a href="https://androidstudygroup.github.io/conferences/"&gt;Android has a lot of them&lt;/a&gt;! While you can pick up a skill or learn about the latest software design pattern, people always say the most valuable thing they get from conferences is connecting with fellow developers. Meeting people in person (side note: can’t wait until we can do that again!) is such an important part of building a network of people you can count on for help - whether you get stuck in your next project, or are looking for career advice. While many of these conferences are run by the community themselves, we participate in these events around the world and look forward to engaging with this community wherever they are. We also organize the Android Developer Summit and the Android track at Google I/O.
&lt;/p&gt;

&lt;iframe width="100% " alt="Android Dev Summit 21 recap in 60 seconds!" height="315" src="https://www.youtube.com/embed/8VsV7jkLvfA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;
&lt;h2&gt;Careers&lt;/h2&gt;


&lt;p&gt;
Apps connect you to the people in your life, help you do things more easily, or even help you learn new skills. In the past year many of us have had to find new ways of doing things, and this has seen us reach for apps more often than ever before, while growing the demand for app developers. In fact, developer jobs are growing 5.5x faster than other professions (&lt;a href="https://www.bls.gov/ooh/computer-and-information-technology/software-developers.htm#tab-6"&gt;U.S. Bureau of Labor Statistics&lt;/a&gt;). In Android DevRel, it is our privilege to build &lt;a href="https://developer.android.com/courses/android-basics-kotlin/course"&gt;curriculum&lt;/a&gt; and work with universities and student groups around the world to skill-up the next generation of developers.
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-lPtl9ZpygFk/Ya_phJkOsBI/AAAAAAAARN8/xZmJerZXsC8uT-11ncbxdJ80KRc_ZMM2ACNcBGAsYHQ/s0/Screen%2BShot%2B2021-12-07%2Bat%2B5.08.42%2BPM.png" imageanchor="1" &gt;&lt;img style="width:75%" alt="Screenshot of a tweet showing four women standing together" id=imgFull border="0" src="https://1.bp.blogspot.com/-lPtl9ZpygFk/Ya_phJkOsBI/AAAAAAAARN8/xZmJerZXsC8uT-11ncbxdJ80KRc_ZMM2ACNcBGAsYHQ/s0/Screen%2BShot%2B2021-12-07%2Bat%2B5.08.42%2BPM.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;&lt;a href="https://blog.google/products/android/training-next-generation-android-developers/" &gt;Training the next generation of Android developers&lt;/a&gt;&lt;/p&gt;&lt;/center&gt;


&lt;br&gt;

&lt;h2&gt;Come join us&lt;/h2&gt;


&lt;p&gt;
Want to join Android DevRel? Take a look at some of the roles below. Google often uses a single listing to make it easier for people to apply - so if it doesn’t say Android DevRel in the title of the role just tell them you’re interested in joining our team in your cover letter. 
&lt;/p&gt;
&lt;p&gt;
Android DevRel works with developers everywhere in the world, we want our team to represent all the developers we work with and we believe that diverse teams build better products that work for everyone. If you’re from an underrepresented group in tech, please apply even if you don’t think you match all the requirements and read what &lt;a href="https://diversity.google/"&gt;we’re doing to build a more diverse&lt;/a&gt; and inclusive Google.
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
Read on to see the roles that are available today:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/126788894889779910-developer-relations-engineer-android/"&gt;Developer Relations Engineers&lt;/a&gt; (US - Multiple locations)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/95898713848718022-developer-relations-engineer-android/?distance=50&amp;employment_type=FULL_TIME&amp;hl=en_US&amp;jlo=en_US&amp;q=developer%20relations%20engineer%20partner%20android&amp;skills=android"&gt;Developer Relations Engineers&lt;/a&gt; (London, UK)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/120935433816154822-developer-relations-engineer-android-and-google-play/?distance=50&amp;employment_type=FULL_TIME&amp;hl=en_US&amp;jlo=en_US&amp;q=developer%20relations%20engineer%20partner%20android&amp;skills=android"&gt;Developer Relations Engineers&lt;/a&gt; (Bangalore, India)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/79919243648213702-developer-relations-engineer-android-and-google-tv/?distance=50&amp;employment_type=FULL_TIME&amp;hl=en_US&amp;jlo=en_US&amp;q=developer%20relations%20engineer%20partner%20android&amp;skills=android"&gt;Developer Relations Engineer - Google TV&lt;/a&gt; (Bangalore, India)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/76496270476092102-program-manager-developer-relations/"&gt;Program Managers&lt;/a&gt; (US - Multiple locations)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/132434177778688710-technical-writer-software-engineering/"&gt;Technical Writers&lt;/a&gt; (US - Multiple locations)

&lt;li&gt;&lt;a href="https://careers.google.com/jobs/results/137094396857197254-technical-writing-manager-android-developer-relations/?company=Google&amp;company=YouTube&amp;hl=en&amp;jlo=en-US&amp;location=London,%20UK"&gt;Tech Writing Manager&lt;/a&gt; (London, UK)&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-c6vLQXWahU:lWVD_9hcd1Y:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-c6vLQXWahU:lWVD_9hcd1Y:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=-c6vLQXWahU:lWVD_9hcd1Y:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7594998561292971657" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7594998561292971657" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/android-developer-relations-is-hiring.html" title="Android Developer Relations is hiring" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-IoW_neqnD9E/YZ6t6ijCy_I/AAAAAAAARMY/Ltbtxm_0fQc_Vc1PLyC8dQgypnp6e9ufwCLcBGAsYHQ/s72-c/Android-devrel-hiring-social%2B%25281%2529.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1996053277491334018</id><published>2021-12-08T09:59:00.000-08:00</published><updated>2021-12-08T09:59:25.303-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="12l" /><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android12" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="foldables" /><category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" /><category scheme="http://www.blogger.com/atom/ns#" term="Large Screens" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Material Design" /><title type="text">Beta 1 Update for 12L feature drop!</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-Y6tQ_kwjkBU/YbDjQ2_h91I/AAAAAAAAROE/rzfW6BZHQ_Ia2MpPlKybOrK-EuJ3gHfWQCNcBGAsYHQ/s0/12L-devices-hero.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-Y6tQ_kwjkBU/YbDjQ2_h91I/AAAAAAAAROE/rzfW6BZHQ_Ia2MpPlKybOrK-EuJ3gHfWQCNcBGAsYHQ/s0/12L-devices-hero.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by &lt;em&gt;&lt;a href="https://twitter.com/mabouza"&gt;Maru Ahues Bouza&lt;/a&gt;, Director, Android Developer Relations&lt;/em&gt;&lt;/em&gt;&lt;p&gt;
  
&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-Y6tQ_kwjkBU/YbDjQ2_h91I/AAAAAAAAROE/rzfW6BZHQ_Ia2MpPlKybOrK-EuJ3gHfWQCNcBGAsYHQ/s0/12L-devices-hero.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Image showing different kinda of large screens" id=imgFull border="0" src="https://1.bp.blogspot.com/-Y6tQ_kwjkBU/YbDjQ2_h91I/AAAAAAAAROE/rzfW6BZHQ_Ia2MpPlKybOrK-EuJ3gHfWQCNcBGAsYHQ/s0/12L-devices-hero.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;  
  
&lt;p&gt;
At &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Dev Summit&lt;/a&gt; in October we highlighted the growth we’re seeing in large screen devices like tablets, foldables, and Chromebooks. We talked about how &lt;a href="https://android-developers.googleblog.com/2021/11/android-developer-summit-21-large-screens.html"&gt;we’re making it easier&lt;/a&gt; to build great app experiences for these devices through new Jetpack APIs, tools, and guidance. We also introduced a developer preview of &lt;a href="https://developer.android.com/12L"&gt;12L&lt;/a&gt;, a feature drop for Android 12 that’s purpose-built for large screens. 
&lt;/p&gt;
&lt;p&gt;
With 12L, we’ve optimized and polished the system UI for large screens, made multitasking more powerful and intuitive, and improved compatibility support so apps look better right out of the box. 12L also includes a handful of new APIs for developers, such as for spatial audio and improved drag-and-drop for accessibility. 
&lt;/p&gt;
&lt;p&gt;
Today we’re releasing the first Beta of 12L for your testing and feedback as you get your apps ready for the feature drop coming early next year. You can try the new large screens features by &lt;a href="https://developer.android.com/about/versions/12/get"&gt;setting up an Android emulator&lt;/a&gt; in Android Studio. 12L is for phones, too, and you can now &lt;a href="https://www.google.com/android/beta"&gt;enroll here&lt;/a&gt; to get 12L Beta 1 on supported Pixel devices. If you are still enrolled in the Android 12 Beta program, you’ll get the 12L update automatically. Through a partnership with Lenovo, you can also try 12L on the Lenovo Tab P12 Pro tablet, see the &lt;a href="https://dev.lenovo.com"&gt;Lenovo site&lt;/a&gt; for details on available builds and support. 
&lt;/p&gt;
&lt;h2&gt;What’s in 12L Beta 1? &lt;/h2&gt;


&lt;p&gt;
Today’s Beta 1 build includes improvements to functionality and user experience as well as the latest bug fixes, optimizations, and the December 2021 security patches. For developers, we’ve finalized the APIs early, so Beta 1 also includes the official 12L APIs (API level 32), updated build tools, and system images for testing. These give you everything you need to test your apps with the 12L features. 
&lt;/p&gt;
&lt;p&gt;
With 12L, we’ve focused on refining the UI on large screen devices, across notifications, quick settings, lockscreen, overview, home screen, and more. For example, on screens above 600dp, the notification shade, lockscreen, and other system surfaces use  a new two-column layout to take advantage of the screen area. 
&lt;/p&gt;
&lt;br&gt;
&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-hPY-sKldVbk/YbDj9IO4eZI/AAAAAAAAROM/xR1TkA1pzsElZ9zy3cbyOFlFrE9aZLoEACNcBGAsYHQ/s0/image1.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Image showing a two-column layout" id=imgFull border="0" src="https://1.bp.blogspot.com/-hPY-sKldVbk/YbDj9IO4eZI/AAAAAAAAROM/xR1TkA1pzsElZ9zy3cbyOFlFrE9aZLoEACNcBGAsYHQ/s0/image1.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;Two-column layouts show more and are easier to use&lt;/p&gt;&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;
Multitasking is also more powerful and intuitive - 12L includes a new taskbar on large screens that lets users instantly switch to favorite apps on the fly or drag-and-drop apps into split-screen mode. Remember, on Android 12 and later, users can launch any app into split screen mode, regardless whether the app is resizable. Make sure to &lt;a href="https://developer.android.com/about/versions/12/12L/summary#what-to-test"&gt;test your apps in split screen mode&lt;/a&gt;!
&lt;/p&gt;
&lt;br&gt;


&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-RGe4KNkTs-U/YbDlcnFiKLI/AAAAAAAAROU/eOAn-cH9P3o1WxMZDhQpBRLIWjcc_SIqgCNcBGAsYHQ/s0/image2.gif" imageanchor="1" &gt;&lt;img style="width:100%" alt="GIF showing the drag and drop in split screen mode" id=imgFull border="0" src="https://1.bp.blogspot.com/-RGe4KNkTs-U/YbDlcnFiKLI/AAAAAAAAROU/eOAn-cH9P3o1WxMZDhQpBRLIWjcc_SIqgCNcBGAsYHQ/s0/image2.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; 

&lt;p id="imgCaption"&gt;Drag and drop apps into split-screen mode&lt;/p&gt;&lt;/center&gt;&lt;br&gt;



&lt;p&gt;
Last, we’ve improved compatibility mode with visual and stability improvements to offer a better letterboxing experience for users and help apps look better by default. If your app is not yet optimized for large screens, make sure to &lt;a href="https://developer.android.com/about/versions/12/12L/summary#what-to-test"&gt;test your app with the new letterboxing&lt;/a&gt;.
&lt;/p&gt;
&lt;h2&gt;More APIs and tools to help you build for large screens&lt;/h2&gt;


&lt;p&gt;
As you optimize your apps for large screens, here are some of our latest APIs and tools that can make it easier to build a great experience for users. 
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Material patterns for large screens&lt;/strong&gt; - Our new &lt;a href="https://m3.material.io/foundations/adaptive-design/overview"&gt;Material Design guidance&lt;/a&gt; can help you plan how to scale your app’s UI across all screens.

&lt;li&gt;&lt;strong&gt;Jetpack Compose for adaptive UI&lt;/strong&gt; - Jetpack Compose makes it very easy to handle UI changes across different screen sizes or components. Check out the &lt;a href="http://goo.gle/compose-large-screens"&gt;Build adaptive layouts in Compose&lt;/a&gt; guide for the basics of what you need to know. 

&lt;li&gt;&lt;strong&gt;Window Size Classes for managing your UI&lt;/strong&gt;  - Window Size Classes are &lt;a href="https://developer.android.com/guide/topics/large-screens/support-different-screen-sizes#window_size_classes"&gt;opinionated viewport breakpoints&lt;/a&gt; to help you more easily design, develop and test resizable application layouts. Watch for these coming soon in Jetpack &lt;a href="https://developer.android.com/jetpack/androidx/releases/window"&gt;WindowManager&lt;/a&gt; 1.1. 

&lt;li&gt;&lt;strong&gt;Activity embedding&lt;/strong&gt; - With &lt;a href="https://developer.android.com/guide/topics/large-screens/activity-embedding"&gt;Activity embedding APIs&lt;/a&gt; you can take advantage of the extra display area on large screens by showing multiple activities at once, such as for the List-Detail pattern, and it requires little or no refactoring of your app. Available in Jetpack &lt;a href="https://developer.android.com/jetpack/androidx/releases/window"&gt;WindowManager&lt;/a&gt; 1.0 Beta 03 and later.

&lt;li&gt;&lt;strong&gt;Visual linting in Android Studio&lt;/strong&gt; - In &lt;a href="https://developer.android.com/studio/preview"&gt;Android Studio Chipmunk&lt;/a&gt;, try the new visual linting tool that proactively surfaces UI warnings and suggestions in Layout Validation, to help identify potential issues on large screens.  

&lt;li&gt;&lt;strong&gt;Resizable emulator&lt;/strong&gt; - This new emulator configuration comes with &lt;a href="https://developer.android.com/studio/preview"&gt;Android Studio Chipmunk&lt;/a&gt; and lets you quickly toggle between the four reference devices - phone, foldable, tablet, and desktop for easier testing. 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Make sure to check out all of our &lt;a href="https://developer.android.com/large-screens"&gt;large screens developer resources&lt;/a&gt; for details on these and other APIs and tools. 
&lt;/p&gt;
&lt;h2&gt;Get started with 12L on a device!&lt;/h2&gt;


&lt;p&gt;
With the 12L feature drop coming to devices early next year, now is a great time to optimize your apps for large screens. For developers, we highly recommend checking out how your apps work in split screen mode with windows of various sizes. If you haven’t optimized your app yet, see how it looks in different orientations and try the new compatibility mode changes if they apply.
&lt;/p&gt;
&lt;p&gt;
The easiest way to get started with the large screen features is using the Android Emulator in a foldable or tablet configuration - see the &lt;a href="https://developer.android.com/about/versions/12/12L/get"&gt;complete setup instructions here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Now you can also flash 12L onto a large screen device. Through a partnership with Lenovo, you can try 12L preview builds on the Lenovo Tab P12 Pro. Currently Lenovo is offering a Developer Preview 1 build, with updates coming in the weeks ahead. Visit &lt;a href="https://dev.lenovo.com/"&gt;Lenovo's 12L preview site&lt;/a&gt; for complete information on available builds and support. 
&lt;/p&gt;
&lt;p&gt;
12L is coming to phones, too, and although you won’t see the large screen features on smaller screens, we welcome you to try out the latest improvements in this feature drop. Just &lt;a href="https://www.google.com/android/beta"&gt;enroll your supported Pixel device here&lt;/a&gt; to get the latest 12L Beta update over-the-air. If you are still enrolled in the Android 12 Beta program, you’ll automatically receive the update 12L. 
&lt;/p&gt;
&lt;p&gt;
For details on 12L and the release timeline, visit the &lt;a href="https://developer.android.com/about/versions/12/12L"&gt;12L developer site&lt;/a&gt;. You can report issues and requests &lt;a href="https://developer.android.com/about/versions/12/12L/feedback"&gt;here&lt;/a&gt;, and as always, we appreciate your feedback!
&lt;/p&gt;

&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=sSenXel4pgQ:FeXwT3EMHSI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=sSenXel4pgQ:FeXwT3EMHSI:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=sSenXel4pgQ:FeXwT3EMHSI:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1996053277491334018" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1996053277491334018" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/beta-1-update-for-12l-feature-drop.html" title="Beta 1 Update for 12L feature drop!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-Y6tQ_kwjkBU/YbDjQ2_h91I/AAAAAAAAROE/rzfW6BZHQ_Ia2MpPlKybOrK-EuJ3gHfWQCNcBGAsYHQ/s72-c/12L-devices-hero.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-3098806390326941999</id><published>2021-12-01T12:59:00.001-08:00</published><updated>2021-12-09T16:06:53.744-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="watchface" /><category scheme="http://www.blogger.com/atom/ns#" term="wear" /><category scheme="http://www.blogger.com/atom/ns#" term="Wear OS" /><title type="text">Develop watch faces with the stable Jetpack Watch Face library</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-P4S1eEhqouE/YaaFy_bGD1I/AAAAAAAARNA/-w5O05Mppo8pe0hoeMC1yDNRWiX_mnTOgCLcBGAsYHQ/s0/image1.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-P4S1eEhqouE/YaaFy_bGD1I/AAAAAAAARNA/-w5O05Mppo8pe0hoeMC1yDNRWiX_mnTOgCLcBGAsYHQ/s0/image1.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Alex Vanyo, Developer Relations Engineer&lt;/em&gt;&lt;p&gt;
  
  &lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-P4S1eEhqouE/YaaFy_bGD1I/AAAAAAAARNA/-w5O05Mppo8pe0hoeMC1yDNRWiX_mnTOgCLcBGAsYHQ/s0/image1.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Illustration of tan hand showing a watch" border="0" data-original-height="1000" data-original-width="1999" src="https://1.bp.blogspot.com/-P4S1eEhqouE/YaaFy_bGD1I/AAAAAAAARNA/-w5O05Mppo8pe0hoeMC1yDNRWiX_mnTOgCLcBGAsYHQ/s0/image1.png"/&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;
Watch faces are one of the most visible ways that people express themselves on their smartwatches, and they’re one of the best ways to display your brand to your users.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://developer.android.com/training/wearables/wfs"&gt;Watch Face Studio&lt;/a&gt; from Samsung is a great tool for creating watch faces without writing any code. For developers who want more fine-tuned control, we've recently launched the &lt;a href="https://developer.android.com/jetpack/androidx/releases/wear-watchface"&gt;Jetpack Watch Face library&lt;/a&gt; written from the ground up in Kotlin.
&lt;/p&gt;
&lt;p&gt;
The stable release of the Jetpack Watch Face library includes all functionality from the Wearable Support Library and many new features that make it easier to support customization on the smartwatch and on the system companion app on mobile, including:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Watch face styling which persists across both the watch and phone (with no need for your own database or companion app).

&lt;li&gt;Support for a &lt;a href="https://en.wikipedia.org/wiki/WYSIWYG#:~:text=In%20computing%2C%20WYSIWYG%20(%2F%CB%88,web%20page%2C%20or%20slide%20presentation."&gt;WYSIWYG&lt;/a&gt; watch face configuration UI on the phone. 

&lt;li&gt;Smaller, separate libraries (that only include what you need).

&lt;li&gt;Battery improvements through encouraging good battery usage patterns out of the box, such as automatically reducing the interactive frame rate when battery is low.

&lt;li&gt;New screenshot APIs so users can see previews of their watch face changes in real time on both the watch and phone.
&lt;/li&gt;
&lt;/ul&gt;

&lt;br&gt;
&lt;div style="background-color:WhiteSmoke; border-style: solid; border-width: 1px; padding:10px" &gt; &lt;p&gt;If you are still using the Wearable Support Library, we strongly encourage migrating to the new Jetpack libraries to take advantage of the new APIs and upcoming features and bug fixes. &lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;
Below is an example of configuring a watch face from the phone with no code written on or for the phone.
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-m_1ihY4YJ7g/YaaGn1jxayI/AAAAAAAARNI/d-QMMovJe_Ix485hSQInwjOXKSdJwMaRACLcBGAsYHQ/s0/image3.gif" imageanchor="1" &gt;&lt;img alt="GIF showing how to edit a watch face using the Galaxy Wearable mobile companion app" id=imgFull border="0" src="https://1.bp.blogspot.com/-m_1ihY4YJ7g/YaaGn1jxayI/AAAAAAAARNI/d-QMMovJe_Ix485hSQInwjOXKSdJwMaRACLcBGAsYHQ/s0/image3.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;&lt;/center&gt;

&lt;p id="imgCaption"&gt;Editing a watch face using the Galaxy Wearable mobile companion app&lt;/p&gt;

&lt;p&gt;
&lt;br&gt;If you use the Jetpack Watch Face library to save your watch face configuration options, the values are synced with the mobile companion app. That is, all the cross-device communication is handled for you.
&lt;/p&gt;
&lt;p&gt;
The mobile app will automatically present those options to the user in a simple, intuitive user interface where they change them to whatever works best for their style. It also includes previews that update in real time.
&lt;/p&gt;
&lt;p&gt;
Let’s dive into the API with an overview of the most important components for creating a custom watch face!
&lt;/p&gt;

&lt;br&gt;

&lt;h2&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/WatchFaceService"&gt;WatchFaceService&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;
A subclass of &lt;code&gt;WatchFaceService&lt;/code&gt; forms the entry point of any Jetpack watch face. Implementing a &lt;code&gt;WatchFaceService&lt;/code&gt; requires &lt;strong&gt;creating 3 objects&lt;/strong&gt;: A &lt;code&gt;UserStyleSchema&lt;/code&gt;, a &lt;code&gt;ComplicationSlotsManager&lt;/code&gt;, and a &lt;code&gt;WatchFace&lt;/code&gt;:
&lt;/p&gt;



&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-lvbK36O9vQ0/Yaes5H2_FdI/AAAAAAAARNY/uEKvRlHHwtA-T3QpABq_SGz9FtnmddHdQCLcBGAsYHQ/s0/image2.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Diagram showing the 3 main parts of a WatchFaceService" id=imgFull border="0" src=" https://1.bp.blogspot.com/-lvbK36O9vQ0/Yaes5H2_FdI/AAAAAAAARNY/uEKvRlHHwtA-T3QpABq_SGz9FtnmddHdQCLcBGAsYHQ/s0/image2.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

  &lt;p id="imgCaption"&gt;Diagram showing the 3 main parts of a WatchFaceService&lt;/p&gt; &lt;/center&gt;


&lt;p&gt;
These 3 objects are specified by overriding 3 abstract methods from &lt;code&gt;WatchFaceService&lt;/code&gt;:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;class CustomWatchFaceService : WatchFaceService() {

    /**
     * The specification of settings the watch face supports.
     * This is similar to a database schema.
     */
    override fun createUserStyleSchema(): UserStyleSchema = // ...

    /**
     * The complication slot configuration for the watchface.
     */
    override fun createComplicationSlotsManager(
        currentUserStyleRepository: CurrentUserStyleRepository
    ): ComplicationSlotsManager = // ...

    /**
     * The watch face itself, which includes the renderer for drawing.
     */ 
    override suspend fun createWatchFace(
        surfaceHolder: SurfaceHolder,
        watchState: WatchState,
        complicationSlotsManager: ComplicationSlotsManager,
        currentUserStyleRepository: CurrentUserStyleRepository
    ): WatchFace = // ...

}&lt;/pre&gt;


&lt;p&gt;
Let’s take a more detailed look at each one of these in turn, and some of the other classes that the library creates on your behalf.
&lt;/p&gt;


&lt;br&gt;

&lt;h2&gt;&lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/UserStyleSchema"&gt;UserStyleSchema&lt;/a&gt;&lt;/h2&gt;



&lt;p&gt;
The &lt;code&gt;UserStyleSchema&lt;/code&gt; defines the primary information source for a Jetpack watch face. The &lt;code&gt;UserStyleSchema&lt;/code&gt; should contain a list of all customization settings available to the user, as well as information about what those options do and what the default option is. These settings can be &lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/UserStyleSetting.BooleanUserStyleSetting"&gt;boolean flags&lt;/a&gt;, &lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/UserStyleSetting.ListUserStyleSetting"&gt;lists&lt;/a&gt;, &lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/UserStyleSetting.DoubleRangeUserStyleSetting"&gt;ranges&lt;/a&gt;, and &lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/package-summary"&gt;more&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
By providing this schema, the library will automatically keep track of changes to settings by the user, either through the mobile companion app on a connected phone or via changes made on the smartwatch in a custom editor activity.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;    override fun createUserStyleSchema(): UserStyleSchema =
        UserStyleSchema(
            listOf(
                // Allows user to change the color styles of the watch face
                UserStyleSetting.ListUserStyleSetting(
                    UserStyleSetting.Id(COLOR_STYLE_SETTING),
                    // ...
                ),
                // Allows user to toggle on/off the hour pips (dashes around the outer edge of the watch
                UserStyleSetting.BooleanUserStyleSetting(
                    UserStyleSetting.Id(DRAW_HOUR_PIPS_STYLE_SETTING),
                    // ...
                ),
                // Allows user to change the length of the minute hand
                UserStyleSetting.DoubleRangeUserStyleSetting(
                    UserStyleSetting.Id(WATCH_HAND_LENGTH_STYLE_SETTING),
                    // ...
                )
            )
        )&lt;/pre&gt;





&lt;h2&gt;&lt;a href="https://developer.android.com/reference/androidx/wear/watchface/style/CurrentUserStyleRepository"&gt;CurrentUserStyleRepository&lt;/a&gt;&lt;/h2&gt;



&lt;p&gt;
The current user style can be observed via the &lt;code&gt;​​CurrentUserStyleRepository&lt;/code&gt;, which is created by the library based on the &lt;code&gt;UserStyleSchema&lt;/code&gt;. 
&lt;/p&gt;
&lt;p&gt;
It gives you a &lt;code&gt;UserStyle&lt;/code&gt; which is just a &lt;code&gt;Map&lt;/code&gt; with keys based on the settings defined in the schema: &lt;br&gt;
&lt;/p&gt;



&lt;blockquote&gt; Map&amp;lt;UserStyleSetting, UserStyleSetting.Option&gt;
&lt;/blockquote&gt;


&lt;p&gt;
As the user’s preferences change, a &lt;code&gt;MutableStateFlow&lt;/code&gt; of &lt;code&gt;UserStyle&lt;/code&gt; will emit the latest selected options for all of the settings defined in the &lt;code&gt;UserStyleSchema&lt;/code&gt;.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;currentUserStyleRepository.userStyle.collect { newUserStyle -&gt;
    // Update configuration based on user style
}&lt;/pre&gt;




&lt;br&gt;
&lt;h2&gt;&lt;a href="https://developer.android.com/reference/androidx/wear/watchface/ComplicationSlotsManager"&gt;ComplicationSlotsManager&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;
&lt;a href="https://en.wikipedia.org/wiki/Complication_(horology)"&gt;Complications&lt;/a&gt; allow a watch face to display additional information from other apps on the watch, such as events, health data, or the day.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;ComplicationSlotsManager&lt;/code&gt; defines how many complications a watch face supports, and where they are positioned on the screen. To support changing the location or number of complications, the &lt;code&gt;ComplicationSlotsManager&lt;/code&gt; also uses the &lt;code&gt;​​CurrentUserStyleRepository&lt;/code&gt;.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;    override fun createComplicationSlotsManager(
        currentUserStyleRepository: CurrentUserStyleRepository
    ): ComplicationSlotsManager {
        val defaultCanvasComplicationFactory =
            CanvasComplicationFactory { watchState, listener -&gt;
                // ...
            }
    
        val leftComplicationSlot = ComplicationSlot.createRoundRectComplicationSlotBuilder(
            id = 100,
            canvasComplicationFactory = defaultCanvasComplicationFactory,
            // ...
        )
            .setDefaultDataSourceType(ComplicationType.SHORT_TEXT)
            .build()
    
        val rightComplicationSlot = ComplicationSlot.createRoundRectComplicationSlotBuilder(
            id = 101,
            canvasComplicationFactory = defaultCanvasComplicationFactory,
            // ...
        )
            .setDefaultDataSourceType(ComplicationType.SHORT_TEXT)
            .build()

        return ComplicationSlotsManager(
            listOf(leftComplicationSlot, rightComplicationSlot),
            currentUserStyleRepository
        )
    }&lt;/pre&gt;




&lt;br&gt;
&lt;h2&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/WatchFace"&gt;WatchFace&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;
The &lt;code&gt;WatchFace&lt;/code&gt; describes the type of watch face and how to draw it.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;WatchFace&lt;/code&gt; can be specified as digital or analog and can optionally have a tap listener for when the user taps on the watch face.
&lt;/p&gt;
&lt;p&gt;
Most importantly, a &lt;code&gt;WatchFace&lt;/code&gt; specifies a &lt;code&gt;Renderer&lt;/code&gt;, which actually renders the watch face:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;    override suspend fun createWatchFace(
        surfaceHolder: SurfaceHolder,
        watchState: WatchState,
        complicationSlotsManager: ComplicationSlotsManager,
        currentUserStyleRepository: CurrentUserStyleRepository
    ): WatchFace = WatchFace(
        watchFaceType = WatchFaceType.ANALOG,
        renderer = // ...
    )&lt;/pre&gt;




&lt;br&gt;
&lt;h2&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/Renderer"&gt;Renderer&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;
The prettiest part of a watch face! Every watch face will create a custom subclass of a renderer that implements everything needed to actually draw the watch face to a canvas.
&lt;/p&gt;
&lt;p&gt;
The renderer is in charge of combining the &lt;code&gt;UserStyle&lt;/code&gt; (the map from &lt;code&gt;​​CurrentUserStyleRepository)&lt;/code&gt;, the complication information from &lt;code&gt;ComplicationSlotsManager&lt;/code&gt;, the current time, and other state information to render the watch face.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;class CustomCanvasRenderer(
    private val context: Context,
    surfaceHolder: SurfaceHolder,
    watchState: WatchState,
    private val complicationSlotsManager: ComplicationSlotsManager,
    currentUserStyleRepository: CurrentUserStyleRepository,
    canvasType: Int
) : Renderer.CanvasRenderer(
    surfaceHolder = surfaceHolder,
    currentUserStyleRepository = currentUserStyleRepository,
    watchState = watchState,
    canvasType = canvasType,
    interactiveDrawModeUpdateDelayMillis = 16L
) {
    override fun render(canvas: Canvas, bounds: Rect, zonedDateTime: ZonedDateTime) {
        // Draw into the canvas!
    }

    override fun renderHighlightLayer(canvas: Canvas, bounds: Rect, zonedDateTime: ZonedDateTime) {
        // Draw into the canvas!
    }
}&lt;/pre&gt;




&lt;br&gt;
&lt;h2&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/editor/EditorSession"&gt;EditorSession&lt;/a&gt;&lt;/h2&gt;


&lt;p&gt;
In addition to the system WYSIWYG editor on the phone, we strongly encourage supporting configuration on the smartwatch to allow the user to customize their watch face without requiring a companion device.
&lt;/p&gt;
&lt;p&gt;
To support this, a watch face can provide a configuration &lt;code&gt;Activity&lt;/code&gt; and allow the user to change settings using an &lt;code&gt;EditorSession&lt;/code&gt; returned from &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/editor/EditorSession.Companion#createOnWatchEditorSession(androidx.activity.ComponentActivity)"&gt;EditorSession.createOnWatchEditorSession&lt;/a&gt;&lt;/code&gt;. As the user makes changes, calling &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/watchface/editor/EditorSession#renderWatchFaceToBitmap(androidx.wear.watchface.RenderParameters,java.time.Instant,kotlin.collections.Map)"&gt;EditorSession.renderWatchFaceToBitmap&lt;/a&gt;&lt;/code&gt; provides a live preview of the watch face in the editor &lt;code&gt;Activity&lt;/code&gt;.

&lt;p&gt;
To see how the whole puzzle fits together to tell the time, check out the &lt;a href="https://github.com/android/wear-os-samples/tree/main/WatchFaceAlphaKotlin"&gt;watchface sample on GitHub&lt;/a&gt;. To learn more about developing for Wear OS, check out the &lt;a href="https://developer.android.com/wear"&gt;developer website&lt;/a&gt;.
&lt;/p&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C6FKxd2HEG8:i87vlxdi0AU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C6FKxd2HEG8:i87vlxdi0AU:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=C6FKxd2HEG8:i87vlxdi0AU:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3098806390326941999" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3098806390326941999" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/12/develop-watch-faces-with-stable-jetpack.html" title="Develop watch faces with the stable Jetpack Watch Face library" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-P4S1eEhqouE/YaaFy_bGD1I/AAAAAAAARNA/-w5O05Mppo8pe0hoeMC1yDNRWiX_mnTOgCLcBGAsYHQ/s72-c/image1.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6919135903709250982</id><published>2021-11-19T07:08:00.003-08:00</published><updated>2021-11-24T14:01:40.814-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">#AndroidDevSummit ‘21: 3 things to know for Modern Android Development</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-k4vgULsHUE0/YZ61_5pOvgI/AAAAAAAARMo/XrT3XvBxeREU2ME8YcXaHShoYTHPuHp6ACLcBGAsYHQ/s0/3%2Bthings%2Bto%2Bknow%2Bfor%2BModern%2BAndroid%2BDevelopment-Social.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-k4vgULsHUE0/YZ61_5pOvgI/AAAAAAAARMo/XrT3XvBxeREU2ME8YcXaHShoYTHPuHp6ACLcBGAsYHQ/s0/3%2Bthings%2Bto%2Bknow%2Bfor%2BModern%2BAndroid%2BDevelopment-Social.png"&gt;


&lt;p&gt;&lt;em&gt;Posted by Florina Muntenescu, Developer Relations Engineer&lt;/em&gt;&lt;p&gt;
  
  &lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-k4vgULsHUE0/YZ61_5pOvgI/AAAAAAAARMo/XrT3XvBxeREU2ME8YcXaHShoYTHPuHp6ACLcBGAsYHQ/s0/3%2Bthings%2Bto%2Bknow%2Bfor%2BModern%2BAndroid%2BDevelopment-Social.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Green graphic with Jetpack and android logos" border="0" data-original-height="1024" data-original-width="2048" src="https://1.bp.blogspot.com/-k4vgULsHUE0/YZ61_5pOvgI/AAAAAAAARMo/XrT3XvBxeREU2ME8YcXaHShoYTHPuHp6ACLcBGAsYHQ/s0/3%2Bthings%2Bto%2Bknow%2Bfor%2BModern%2BAndroid%2BDevelopment-Social.png"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
From updates to Jetpack libraries, more guidance on using Kotlin coroutines and Flow in your android app and new versions of Android Studio, here are the top 3 things you should know:
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/ENYorR3u6Eo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;#1 Jetpack feature updates&lt;/h3&gt;


&lt;p&gt;
We’ve been working to add the features you’ve been asking us for in a lot of &lt;a href="https://developer.android.com/jetpack"&gt;Jetpack&lt;/a&gt; libraries, here are a few highlights: 
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/navigation"&gt;Navigation&lt;/a&gt; brings multiple backstacks support—no code update needed, just make sure you use the latest version.

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/work"&gt;WorkManager&lt;/a&gt;, our recommended solution for persistent work, makes it easier to handle Android 12 background restrictions, adding support for expedited jobs

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/room"&gt;Room&lt;/a&gt; adds auto-migration and multi-map relations. 

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/datastore"&gt;DataStore&lt;/a&gt;, our coroutines based replacement for SharedPreferences, has reached 1.0.

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/androidx/releases/benchmark"&gt;Macrobenchmark&lt;/a&gt;, a tool to measure and improve startup and frame performance, added simplified and more accurate frame timing, and compatibility back to Android M 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
But if you want to deep dive, you should really check out: &lt;em&gt;WorkManager - back to the foreground&lt;/em&gt; - where you’ll learn all about the latest APIs and features.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/spdNAwsC1GQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;#2 Kotlin and Flow usage&lt;/h3&gt;


&lt;p&gt;
Coroutines are the recommended solution for asynchronous work and Kotlin Flow is the obvious choice for managing streams of data in Android apps. To learn how to use Flows in practice, check out this Android Dev Summit session: 
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/fSB6_KE95bU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
The talk also covers important things like how to stop collecting from the UI when it’s not needed, using the newly stable &lt;a href="https://developer.android.com/topic/libraries/architecture/coroutines#restart"&gt;lifecycle-aware coroutines APIs&lt;/a&gt;: repeatOnLifecycle and flowWithLifecycle. 
&lt;/p&gt;
&lt;h3&gt;#3 Android Studio and LiveEdit for Jetpack Compose&lt;/h3&gt;


&lt;p&gt;
In the &lt;a href="https://developer.android.com/studio"&gt;Android Studio&lt;/a&gt; world, &lt;a href="https://developer.android.com/studio/releases"&gt;Arctic Fox&lt;/a&gt; is stable, &lt;a href="https://developer.android.com/studio/preview"&gt;Bumblebee&lt;/a&gt; is in Beta and &lt;a href="https://developer.android.com/studio/preview"&gt;Chipmunk&lt;/a&gt; is in Canary, all of them bringing a bunch of new features for Jetpack Compose and Material You, developer productivity and 12L and large screens.
&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;p&gt;
The &lt;a href="https://www.youtube.com/watch?v=PwE5NqeeFk0&amp;list=PLWz5rJ2EKKc-W96eOIFpda-rvYCRnoGpJ&amp;index=1"&gt;What’s new in Android Studio&lt;/a&gt; talk is a must see, especially the sneak peek demo of LiveEdit. LiveEdit is a generalization of live editing of literals, where you get to edit more general scenarios than just constants and strings: you can comment out parts of the UI, reorder composable calls and see the result on the phone in milliseconds. But, we want to make sure that this feature is really right before we include it in Android Studio, so stay tuned for it in the next releases. 
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/PwE5NqeeFk0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
You want more? Then sit back, relax and watch the full Modern Android Development &lt;a href="https://www.youtube.com/watch?v=PwE5NqeeFk0&amp;list=PLWz5rJ2EKKc-W96eOIFpda-rvYCRnoGpJ&amp;index=1"&gt;playlist&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=p6fYfFeJqVE:LaNdxLXhQVw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=p6fYfFeJqVE:LaNdxLXhQVw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=p6fYfFeJqVE:LaNdxLXhQVw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6919135903709250982" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6919135903709250982" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/11/ads21-modern-android-development.html" title="#AndroidDevSummit ‘21: 3 things to know for Modern Android Development" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-k4vgULsHUE0/YZ61_5pOvgI/AAAAAAAARMo/XrT3XvBxeREU2ME8YcXaHShoYTHPuHp6ACLcBGAsYHQ/s72-c/3%2Bthings%2Bto%2Bknow%2Bfor%2BModern%2BAndroid%2BDevelopment-Social.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1598035290498283906</id><published>2021-11-17T09:11:00.000-08:00</published><updated>2021-11-17T09:11:12.155-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">#Android Developer Summit: 3 things to know for Large Screens on Android!</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-fxfySE2PhUo/YZU3bxtpNdI/AAAAAAAARLY/uTS35wB3Td0o98gz59FZti35gSUmm9IMwCLcBGAsYHQ/s0/maxresdefault2.jpeg"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-fxfySE2PhUo/YZU3bxtpNdI/AAAAAAAARLY/uTS35wB3Td0o98gz59FZti35gSUmm9IMwCLcBGAsYHQ/s0/maxresdefault2.jpeg"&gt;

&lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/clarabayarri"&gt; Clara Bayarri&lt;/a&gt;, Engineering Manager &lt;/em&gt;&lt;p&gt;
  
  
&lt;p&gt;
This year’s &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Dev Summit&lt;/a&gt; brought a lot of updates related to &lt;a href="https://www.youtube.com/playlist?list=PLWz5rJ2EKKc99PA-mKk2rz0jYXshN94sM"&gt;Large Screen development for Android&lt;/a&gt;, the 12L feature drop on foldables and tablets - a set of features optimising Android 12 for large screens, better developer tools and updates to Google Play purpose-built for large screens. Here are the top 3 things you should know:
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/50mqKT9n15U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;br&gt;

&lt;h2&gt;#1: The 12L feature drop for large screens&lt;/h2&gt;


&lt;p&gt;
&lt;a href="https://developer.android.com/about/versions/12/12L"&gt;12L&lt;/a&gt; makes Android 12 even better on Large Screen devices, with a bunch of new refined UI across surfaces such as notifications and the lock screen. The most important announcements for developers included
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;A renewed emphasis on multitasking. This means all apps can now enter split screen mode, regardless of whether they are resizeable or not.

&lt;li&gt;New improvements to compatibility mode

&lt;li&gt;New &lt;a href="https://d.android.com/guide/topics/large-screens/activity-embedding"&gt;Activity Embedding&lt;/a&gt; APIs that allow you to show multiple activities side by side, making it easier to build large screen optimized layouts in existing apps
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
To find out more about what’s new, check out the What’s new for large screens and foldables video and &lt;a href="https://developer.android.com/12L"&gt;developer.android.com/12L&lt;/a&gt; .
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/6-925K3hMHU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;br&gt;

&lt;h2&gt;#2: Making it easier to build for Large Screens&lt;/h2&gt;


&lt;p&gt;
Android has supported Large Screens for a long time, but we announced several new tools to help you scale up your app’s UI to larger form factors.
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;New &lt;a href="https://m3.material.io/foundations/adaptive-design/overview"&gt;Material Design Guidance&lt;/a&gt; targeted at large screens, including a definition of &lt;a href="https://m3.material.io/foundations/adaptive-design/foldables/compositions"&gt;common layout patterns&lt;/a&gt; prevalent in the ecosystem to help inspire your app’s design

&lt;li&gt;&lt;a href="https://d.android.com/guide/topics/large-screens/support-different-screen-sizes#window_size_classes"&gt;Window Size Classes&lt;/a&gt;, a new framework of breakpoints designed to represent the most common form factors in the ecosystem you should design and develop for

&lt;li&gt;Updates to &lt;a href="https://developer.android.com/guide/topics/large-screens/navigation-for-responsive-uis"&gt;SlidingPaneLayout&lt;/a&gt;, the View component for 2 pane layouts, to support Navigation

&lt;li&gt;New Compose APIs that make developing adaptive and responsive UI very simple, including &lt;a href="https://d.android.com/jetpack/compose/nav-adaptive"&gt;Navigation Rail&lt;/a&gt; support

&lt;li&gt;Android Studio reference devices, a new set of device profiles that represent the widest range possible of devices in the ecosystem to test for

&lt;li&gt;Visual Lint brought to Android Studio Layout Validation to detect issues with large screen layouts

&lt;li&gt;A brand new Resizeable Emulator that can quickly toggle between the reference devices
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Learn more about all these items in the &lt;em&gt;Building Android UIs for Any Screen Size &lt;/em&gt;and &lt;em&gt;Design beautiful apps on foldables and large screens&lt;/em&gt; talks, and check out the latest &lt;a href="https://developer.android.com/large-screens"&gt;Large Screen guide&lt;/a&gt; and &lt;a href="http://goo.gle/compose-large-screens"&gt;Build adaptive layouts in Compose guide&lt;/a&gt; for more. You can also check out &lt;em&gt;Best practices for video apps on foldable devices&lt;/em&gt; and &lt;em&gt;Spotify Across Screens&lt;/em&gt; for examples on how apps are making this journey.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/ir3LztqbeRI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;br&gt;

&lt;h2&gt;#3: Google Play updates for Large Screens&lt;/h2&gt;


&lt;p&gt;
To help users find the best apps on tablets, foldables and ChromeOS devices, we’ve got new changes in Play to recommend apps optimized for the large screen. This includes new checks to &lt;a href="https://developer.android.com/docs/quality-guidelines/large-screens-app-quality"&gt;assess app quality&lt;/a&gt;, so we can feature large screen optimized apps and update search rankings to show the best possible apps for these devices. We will also be introducing &lt;a href="https://android-developers.googleblog.com/2021/08/making-ratings-and-reviews-better-for.html"&gt;large screen specific app ratings&lt;/a&gt;, so users will be able to rate how your app works on their large screen devices.
&lt;/p&gt;
&lt;p&gt;
You can find all of this year’s Android Dev Summit talks related to Large Screens in this playlist, and the full list of announcements for Large Screens in our &lt;a href="https://android-developers.googleblog.com/2021/10/12L-preview-large-screens.html"&gt;blog post&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rXiWrCLdPig:8fasOaLpqjI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rXiWrCLdPig:8fasOaLpqjI:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=rXiWrCLdPig:8fasOaLpqjI:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1598035290498283906" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1598035290498283906" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/11/android-developer-summit-21-large-screens.html" title="#Android Developer Summit: 3 things to know for Large Screens on Android!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-fxfySE2PhUo/YZU3bxtpNdI/AAAAAAAARLY/uTS35wB3Td0o98gz59FZti35gSUmm9IMwCLcBGAsYHQ/s72-c/maxresdefault2.jpeg" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-1394091711514714023</id><published>2021-11-16T10:00:00.009-08:00</published><updated>2021-11-29T13:50:13.901-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="appexcellence" /><category scheme="http://www.blogger.com/atom/ns#" term="appquality" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Improving App Startup: Lessons from the Facebook App</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-5VyrQpFJufM/YaVKxf_DanI/AAAAAAAALS4/ybeza_emDKoKP0gjiNkqfDS_ltwo0075ACLcBGAsYHQ/s0/AppExcellence_Editorial_LessonsFromFBApp_4209x1253-01%2B%25281%2529%2B%25281%2529.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-5VyrQpFJufM/YaVKxf_DanI/AAAAAAAALS4/ybeza_emDKoKP0gjiNkqfDS_ltwo0075ACLcBGAsYHQ/s0/AppExcellence_Editorial_LessonsFromFBApp_4209x1253-01%2B%25281%2529%2B%25281%2529.png"&gt;
  

&lt;p&gt;&lt;em&gt;Posted by the Google and Facebook teams. Authored by Kateryna Semenova from the Google Android team and Tim Trueman, Steven Harris, Subramanian Ramaswamy from the Facebook team.&lt;/em&gt;&lt;/p&gt;
  
&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-5VyrQpFJufM/YaVKxf_DanI/AAAAAAAALS4/ybeza_emDKoKP0gjiNkqfDS_ltwo0075ACLcBGAsYHQ/s0/AppExcellence_Editorial_LessonsFromFBApp_4209x1253-01%2B%25281%2529%2B%25281%2529.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%"alt="Brown hand holding a stopwatch." border="0" data-original-height="968" data-original-width="3249" src="https://1.bp.blogspot.com/-5VyrQpFJufM/YaVKxf_DanI/AAAAAAAALS4/ybeza_emDKoKP0gjiNkqfDS_ltwo0075ACLcBGAsYHQ/s0/AppExcellence_Editorial_LessonsFromFBApp_4209x1253-01%2B%25281%2529%2B%25281%2529.png"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;


&lt;p&gt;
Improving app startup time is not a trivial task and requires a deep understanding of things that affect it. This year, the Google Android team and the Facebook app team have been working together on metrics and sharing approaches to improve app startup. Google Android’s public documentation has a lot of information on &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time"&gt;app startup optimization&lt;/a&gt;. In addition to that we want to share how it applies to the Facebook app and what helped them to improve app startup. 
&lt;/p&gt;
&lt;p&gt;
There are now more than 2.9 billion people using Facebook every month. Facebook helps give people the power to build community and bring the world closer together. It is a place for people to share life’s moments, discover and discuss what’s happening, connect and nurture relationships, and help work together to build economic opportunity. 
&lt;/p&gt;
&lt;p&gt;
Facebook app developers are committed to ensure that people have the best possible experience and that the app works seamlessly on every device, in any country, and within different network conditions. Working together, the Google Android team and Facebook team aligned on metrics definition for app startup and best practices and shared them in this article. 
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Where to start&lt;/h2&gt;


&lt;p&gt;
Start by measuring your startup times. This will let you know how good your user’s startup experience is, track any regressions, as well as how much to invest on improving it. At the end of the day, your startup times need to be tied to user satisfaction or engagement or user-base growth in order to prioritize your investments. 
&lt;/p&gt;
&lt;p&gt;
Android defines two metrics to measure app startup times: &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time?#time-full"&gt;Time-To-Full-Display&lt;/a&gt; (TTFD) and &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time#time-initial"&gt;Time-To-Initial-Display&lt;/a&gt; (TTID). While you can further split it into cold/warm startup times, this post will not disambiguate between them - Facebook's approach is to measure and optimize the startup time that’s experienced across all users interacting with the app (some of them will be cold, some warm). 
&lt;/p&gt;
&lt;br&gt;
&lt;h4&gt;Time-To-Full-Display&lt;/h4&gt;


&lt;p&gt;
TTFD captures the time when your app has completed rendering and is ready for user interaction and consumption, perhaps including content from disk or the network. This can take a while on slow networks and can depend on what surface your users land on. Thus, it may also be helpful to show something right away and let users see progress is still happening, which brings us to TTID…
&lt;/p&gt;
&lt;br&gt;
&lt;h4&gt;Time-To-Initial-Display&lt;/h4&gt;


&lt;p&gt;
TTID captures the time for your app to draw its background, navigation, any fast-loading local content, placeholders for slower local content or content coming from the network. TTID should be when users can navigate around and get to where they want to go.
&lt;/p&gt;



&lt;table style="width: 100%;" border="1" cellpadding="5"&gt;
&lt;tbody&gt;
&lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Don’t change too much:&lt;/strong&gt; One thing to watch out for is visually shifting your app’s content between TTID and TTFD, like showing cached content then snapping it away once network content comes in. This can be jarring and frustrating for users, so make sure your TTID draws enough meaningful content to show users as much as possible of what to expect for TTFD.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;br&gt;
&lt;br&gt;


&lt;h2&gt;Focus on user success&lt;/h2&gt;


&lt;p&gt;
Your users are coming to your app for content that might take a while to load, and you want to deliver that content to them as quickly as you can.
&lt;/p&gt;
&lt;p&gt;
Facebook app developers focus on a metric based on &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time?#time-full"&gt;Time To Full Display&lt;/a&gt; (TTFD), including all content and images, because that represents the full experience of what users came to the app for. If a network call for content or an image takes a long time or fails, developers want to know so that they can improve the entire start to finish startup experience.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;What’s a good target for TTID and TTFD?&lt;/h2&gt;


&lt;p&gt;
Facebook’s startup metric is the percentage of app starts that they consider “bad,” which is any start that either has a TTFD longer than 2.5 seconds OR any part of startup that is unsuccessful (e.g. an image fails to load or the app crashes). Facebook focuses on driving this percentage of bad starts down either by improving successful starts that take longer than 2.5 seconds, or by fixing issues causing unsuccessful starts. 2.5 seconds was chosen based on research that showed this was meaningful to Facebook users (this also matches the &lt;a href="https://web.dev/lcp/"&gt;Largest Contentful Paint (LCP) metric&lt;/a&gt; in &lt;a href="https://web.dev/vitals/#core-web-vitals"&gt;the Web Vitals recommendations for web sites&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Including the full experience, especially of any network calls to fetch recent content, can make your TTFD startup metrics seem really slow compared to TTID. This is actually a good thing! It represents the real experience people have with your app. Improvements you make to this may drive increased usage and perception of your app’s performance for your users like it has at Facebook.
&lt;/p&gt;
&lt;p&gt;
Measuring TTFD can be tricky depending on your app. If it’s too hard, it’s fine to start with &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time?#time-initial"&gt;Time To Initial Display&lt;/a&gt; (TTID). That may miss the performance of loading some of your content if you have placeholders or images, but it’s good to start somewhere even if it’s just a subset of what your users see interacting with your app every day.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Instrumenting TTID&lt;/h2&gt;


&lt;p&gt;
In Android 4.4 (API level 19) and higher, &lt;a href="https://developer.android.com/studio/command-line/logcat"&gt;logcat&lt;/a&gt; provides a “&lt;a href="https://developer.android.com/topic/performance/vitals/launch-time?#time-initial"&gt;Displayed&lt;/a&gt;” value capturing the time elapsed between launching the process and the completion of drawing the first frame of the corresponding activity on the screen.
&lt;/p&gt;
&lt;p&gt;
The reported log line looks similar to the following example:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;
ActivityManager: Displayed com.android.myexample/.StartupTiming: +3s534ms
&lt;/pre&gt;

&lt;br&gt;
&lt;h2&gt;Instrumenting TTFD&lt;/h2&gt;


&lt;p&gt;
To instrument TTFD, call &lt;a href="https://developer.android.com/reference/android/app/Activity#reportFullyDrawn()"&gt;reportFullyDrawn()&lt;/a&gt; in your Activity after all your content is on screen. Be sure to include any content that replaces placeholders, as well as any images you render (be sure to count when the image itself is displayed, not just its placeholder). Once you instrument calling reportFullyDrawn(), you can see it in logcat:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;
ActivityManager: Fully drawn {package}/.MainActivity: +1s54ms
&lt;/pre&gt;
&lt;br&gt;

&lt;h2&gt;Recommendations From Facebook App Developers&lt;/h2&gt;


&lt;p&gt;
&lt;em&gt;Facebook app developers have been optimizing the app for billions of users across a multitude of devices, platforms and countries for many years. This section shares some of the key lessons that Facebook app developers applied to optimize their app startup.  &lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;strong&gt;Understand first, then optimize - &lt;/strong&gt;Once you’ve defined a good startup metric, instrumenting it in your app can allow you to understand and prioritize improving your startup performance to deliver a better experience for your users. By starting with instrumentation, you can prove there is an opportunity, you can identify where to focus your efforts, and you can see how much you’ve improved things as you start optimizing.

&lt;li&gt;&lt;strong&gt;Fix crashes first - &lt;/strong&gt;After you’ve instrumented your starts, make sure your app starts reliably. Crashes during startup are the most frustrating and quickest way to get users to abandon your app; measure and address these first.

&lt;li&gt;&lt;strong&gt;Don’t forget about functional reliability - &lt;/strong&gt;Also, don’t forget about functional reliability: did your app show some content quickly, but fail to load all content or take a long time to load images? Your app may be starting fast, but failing to function as a customer wants (e.g., if tapping a button doesn’t work) - this worsens the customer experience. 

&lt;li&gt;&lt;strong&gt;Aim for consistency - &lt;/strong&gt;Inconsistent performance is more frustrating than consistent but slower than average startup performance. Take a look at the long tail of your starts and see if there are any fixes or ways to mitigate these slow starts. Don’t forget to look at your offline and lossy network startup performance starts.

&lt;li&gt;&lt;strong&gt;Parallelize work - &lt;/strong&gt;Most modern phones have at least 4 CPU cores, so there's room to multitask! Don’t block the main thread unless you have to. Move I/O and non-critical paths work off the main thread.

&lt;li&gt;&lt;strong&gt;Be lazy&lt;/strong&gt; - Once you’ve got a reliable and consistent startup, take a look through everything you’re doing to display your first visible screen of content—is there any work in there that’s not necessary? Remove, delay, or move to the background any work that’s not directly related to a startup experience until after the app has started  (but be careful to watch your app’s responsiveness as a counter-metric). Try to keep your app’s onCreate() as lightweight as possible. You can also benefit from using the &lt;a href="https://developer.android.com/topic/libraries/app-startup"&gt;Jetpack App Startup library&lt;/a&gt; to initialize components at application startup. When doing so, make sure to still load all the required modules for the starting activity, and don’t introduce flickers where the lazily-loaded modules become available.

&lt;li&gt;&lt;strong&gt;Show progress, but don’t shift the UI too much - &lt;/strong&gt;Try not to shift what’s presented to users around too much during startup. It’s frustrating to try to tap on something, only to have it change and do the wrong thing. This is similar to the &lt;a href="https://web.dev/cls/"&gt;Cumulative Layout Shift (CLS) &lt;/a&gt; concept from &lt;a href="https://web.dev/learn-web-vitals/"&gt;web vitals&lt;/a&gt;. For network-based loads with indeterminate durations, dismiss the splash screen and show placeholders for asynchronous loading. Consider applying subtle &lt;a href="https://facebook.github.io/shimmer-android/"&gt;animations&lt;/a&gt; to the content area that reflect the loading state. Make sure that the loaded content structure matches the skeleton structure as closely as possible, to allow for a smooth transition once the content is loaded.

&lt;li&gt;&lt;strong&gt;Cache it - &lt;/strong&gt;When a user opens your app for the first time, you can show loading indicators for some UI elements. The next time a user comes to your app, you can show this cached content while you load more recent content. Ever seen your FB feed update after your app is loaded as we fetch updated content from the network?  Cutting network time out of your startup, if you can, is a great way to speed things up and introduce a more consistent startup performance experience. However, showing cached content may not always be the best approach as the next point suggests, and this is why it is important to measure what works better for the customer. 

&lt;li&gt;&lt;strong&gt;Go fast &amp; slow&lt;/strong&gt; - Slightly slower, fresh &amp; relevant content may be better than fast stale content. Showing fresh content to your users may be more valuable than starting up super fast only to refresh the content soon after startup. Evaluate whether it’s better to optimize for showing fresh content as quickly as possible with a timeout for showing stale content if the network is slow, or to just show what’s available immediately if the network is offline.

&lt;li&gt;&lt;strong&gt;Consistent session start surface - &lt;/strong&gt;You may find it helpful to reset users to your main content after your app is in the background for a long time. Devices can keep your app in memory for a long time.

&lt;li&gt;&lt;strong&gt;Look at the inner workings - &lt;/strong&gt;&lt;a href="https://developer.android.com/topic/performance/tracing"&gt;Trace&lt;/a&gt; and actually look at what’s executing during startup or attach a debugger—you might be surprised what you find! Once you’ve got a good understanding of the critical path for your starts, you can efficiently optimize your app’s performance. Invest in your biggest opportunities because you’ll know where they are.

&lt;li&gt;&lt;strong&gt;Make it easy to do the right thing - &lt;/strong&gt;Sometimes developers use bad patterns and architecture because there are too many ways to do things. Don’t be afraid to consolidate the patterns used in your app, and optimize them so it’s easy to pick how to complete a task and for that task to be performant. A good example of this would be eager code execution patterns. If you’re running code for content that appears after the first full screen draw, you’re by definition hurting performance. Lazy code execution is a good pattern. Only run code eagerly when it is blocking the critical path for your startup.&lt;/ul&gt;
  &lt;br&gt;
  
&lt;h2&gt;Recommendations From Google Android Team &lt;/h2&gt;


&lt;p&gt;
&lt;em&gt;Google Android team’s recommendations to measure and optimize app startup are available in the public docs:  &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time"&gt;App startup time&lt;/a&gt;.  This section summarizes some of the key points that ties into Facebook’s recommendations above that all Android app developers should consider. &lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;TTID and TTFD are important metrics for app startup. Google Android ranks apps with TTID in the &lt;a href="https://developer.android.com/distribute/best-practices/develop/android-vitals"&gt;Play Console&lt;/a&gt;. TTFD is a super-set of TTID, so any improvements in TTID should apply to both metrics. 

&lt;li&gt;Call &lt;a href="https://developer.android.com/reference/android/app/Activity?#reportFullyDrawn()"&gt;reportFullyDrawn()&lt;/a&gt; to report TTFD and to let the system know that your activity is finished rendering. To improve app startup, the Android system adjusts optimizations to prioritize work that happens before reportFullyDrawn() is called. Calling this method when your app is in fully usable state will improve your app startup time. &lt;em&gt;Every application should be using this API!&lt;/em&gt; And don’t forget to measure it.

&lt;li&gt;Monitoring your app's technical performance with Android vitals will help you improve your app startup. Using the &lt;a href="https://support.google.com/googleplay/android-developer/answer/9844486#zippy=%2Capp-start-up-time"&gt;Play Console&lt;/a&gt;, you can view data to help you understand and improve your app's startup time and more. 

&lt;li&gt;We know a bug in production is much more expensive to fix compared to a fix at development time. The same applies to performance as well. Setup your application for measuring app startup early with local performance tests by using &lt;a href="https://developer.android.com/studio/profile/macrobenchmark#startup"&gt;Jetpack Macrobenchmark: Startup&lt;/a&gt;.

&lt;li&gt;Instrumenting is key to understanding and optimizing startup as we’ve discussed above. Android offers &lt;a href="https://developer.android.com/topic/performance/tracing"&gt;system tracing&lt;/a&gt; that can help to dig deep and diagnose app startup problems. 

&lt;li&gt;The &lt;a href="https://developer.android.com/topic/libraries/app-startup"&gt;Jetpack App startup library&lt;/a&gt; provides a straightforward, performant way to initialize components at application startup. Both library developers and app developers can use this library to streamline startup sequences and explicitly set the order of initialization. You can use this library to set which components load at what points during startup. 

&lt;li&gt;A &lt;a href="https://developer.android.com/topic/performance/vitals/launch-time?#heavy-app"&gt;typical issue&lt;/a&gt; that affects app startup is doing too much during initialization - for example, inflating large or complex layouts, blocking screen drawing, loading and decoding bitmaps, garbage collection, etc.
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;Recap &lt;/h2&gt;


&lt;p&gt;
This article captures some key measures of startup and best practices to improve startup experience that helps drive user engagement and adoption for the Facebook Android app. It also shares metrics, libraries and tools recommended by the Google Android team. Any Android app stands to benefit from applying some of the strategies described in the document. Measure and make your app startup delightful and fast for your users!
&lt;/p&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=AowAHnoDqxE:SXR6h6H9x6c:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=AowAHnoDqxE:SXR6h6H9x6c:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=AowAHnoDqxE:SXR6h6H9x6c:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1394091711514714023" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/1394091711514714023" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/11/improving-app-startup-facebook-app.html" title="Improving App Startup: Lessons from the Facebook App" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-5VyrQpFJufM/YaVKxf_DanI/AAAAAAAALS4/ybeza_emDKoKP0gjiNkqfDS_ltwo0075ACLcBGAsYHQ/s72-c/AppExcellence_Editorial_LessonsFromFBApp_4209x1253-01%2B%25281%2529%2B%25281%2529.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4114025353553097619</id><published>2021-11-10T09:11:00.000-08:00</published><updated>2021-11-10T09:11:30.481-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">#AndroidDevSummit: Jetpack Compose now with Material You</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-oXkDwa-9BRQ/YYrIwufUy0I/AAAAAAAARKY/9lg7hPnteGYdVtp8KEHdosm_aDSaIz6bQCLcBGAsYHQ/s0/m3_template.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-oXkDwa-9BRQ/YYrIwufUy0I/AAAAAAAARKY/9lg7hPnteGYdVtp8KEHdosm_aDSaIz6bQCLcBGAsYHQ/s0/m3_template.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/crafty"&gt;Nick Butcher&lt;/a&gt; Developer Relations Engineer&lt;/em&gt;&lt;p&gt;
  
&lt;br&gt;  
  
  &lt;p&gt;
The &lt;a href="https://developer.android.com/dev-summit"&gt;Android Dev Summit&lt;/a&gt; last month brought a number of &lt;a href="https://android-developers.googleblog.com/2021/10/ads21-keynote-wrap.html"&gt;exciting updates&lt;/a&gt; to &lt;a href="https://developer.android.com/jetpack/compose"&gt;Jetpack Compose&lt;/a&gt;, including that &lt;a href="https://m3.material.io/"&gt;Material You&lt;/a&gt;, Google's new design language, is now available in Compose. In case you missed it, here's a recap of all the announcements.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/4R8-ggukUls" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;

&lt;h2&gt;New Releases: Jetpack Compose 1.1 beta and compose-material3&lt;/h2&gt;

&lt;p&gt;
We released &lt;a href="https://developer.android.com/jetpack/androidx/releases/compose#versions"&gt;Jetpack Compose 1.1 beta&lt;/a&gt;. This means that new APIs in 1.1 are now stable, offering new functionality and performance improvements. 1.1 includes new features like improved focus handling &amp; touch target sizing or `ImageVector` caching and support for Android 12 stretch overscroll. Compose 1.1 also graduates a number of previously experimental APIs to stable and supports newer versions of Kotlin. We've already updated our &lt;a href="https://github.com/android/compose-samples"&gt;samples&lt;/a&gt;, &lt;a href="https://goo.gle/compose-pathway"&gt;codelabs&lt;/a&gt; and &lt;a href="https://github.com/google/accompanist"&gt;Accompanist library&lt;/a&gt; to work with Compose 1.1.
&lt;/p&gt;
&lt;p&gt;
We released &lt;a href="https://developer.android.com/jetpack/androidx/releases/compose-material3#1.0.0-alpha01"&gt;compose-material3&lt;/a&gt;. This is a brand new artifact for building Material You UIs with Jetpack Compose. It offers updated &lt;a href="https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary"&gt;components&lt;/a&gt; and &lt;a href="https://developer.android.com/jetpack/compose/themes/material#m3-colorscheme"&gt;color system&lt;/a&gt;, including support for &lt;a href="https://developer.android.com/jetpack/compose/themes/material#m3-dynamic-color"&gt;dynamic color&lt;/a&gt;, creating a personalized color palette from a user's wallpaper. This is our first alpha so we welcome your &lt;a href="https://goo.gle/compose-feedback"&gt;feedback&lt;/a&gt; as we continue to add features and iterate on the APIs. Check out the new &lt;a href="https://m3.material.io/"&gt;m3.material.io&lt;/a&gt; website to learn more about Material Design 3 and find tools to help you design &amp; build with dynamic color, like the &lt;a href="https://goo.gle/material-theme-builder-web"&gt;Material Theme Builder&lt;/a&gt;.
&lt;/p&gt;


&lt;br&gt;
&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/jrfuHyMlehc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;br&gt;


&lt;h2&gt;More Guidance &amp; Documentation for Jetpack Compose&lt;/h2&gt;

&lt;p&gt;
We released a ton of talks about Jetpack Compose, providing deep dives into layout, animation and state, showed how to use Compose across Wear OS, homescreen widgets and Large Screens and held 3 &lt;em&gt;code-alongs&lt;/em&gt;; live coding your first Compose app, migrating an existing app or using compose on Wear OS. Finally we held a panel discussion, answering &lt;strong&gt;your&lt;/strong&gt; burning questions about Jetpack Compose and Material.
&lt;/p&gt;


&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/zMKMwh9gZuI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
We also expanded the &lt;a href="https://goo.gle/compose-docs"&gt;Compose documentation&lt;/a&gt;, including new guides on the &lt;a href="https://developer.android.com/jetpack/compose/phases"&gt;Phases of Jetpack Compose&lt;/a&gt;, &lt;a href="https://developer.android.com/jetpack/compose/layouts/adaptive"&gt;Building Adaptive Layouts&lt;/a&gt; and expanded &lt;a href="https://developer.android.com/jetpack/compose/themes"&gt;theming guidance&lt;/a&gt; including guidance for &lt;a href="https://developer.android.com/jetpack/compose/themes/material#material3"&gt;Material 3&lt;/a&gt;.
&lt;/p&gt;


&lt;br&gt;
&lt;h2&gt;Tooling updates in Android Studio Bumblebee&lt;/h2&gt;

&lt;p&gt;
At ADS, &lt;a href="https://developer.android.com/studio/preview"&gt;Android Studio Bumblebee&lt;/a&gt; entered Beta, bringing richer support for Jetpack Compose including:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/tooling#preview-interactive"&gt;Interactive preview&lt;/a&gt; is enabled by default

&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/tooling#layout-inspector"&gt;Layout Inspector&lt;/a&gt; support for Jetpack Compose or hybrid UIs, including &lt;a href="https://developer.android.com/studio/preview/features#support_for_inspecting_compose_semantics"&gt;inspecting Semantics&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Android Studio Chipmunk canaries also introduced a new template for Compose (and View based) Material 3 applications.
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-oXkDwa-9BRQ/YYrIwufUy0I/AAAAAAAARKY/9lg7hPnteGYdVtp8KEHdosm_aDSaIz6bQCLcBGAsYHQ/s0/m3_template.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="New Project launch webpage" id=imgFull border="0" src="https://1.bp.blogspot.com/-oXkDwa-9BRQ/YYrIwufUy0I/AAAAAAAARKY/9lg7hPnteGYdVtp8KEHdosm_aDSaIz6bQCLcBGAsYHQ/s0/m3_template.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;


&lt;br&gt;
&lt;h2&gt;Handoff&lt;/h2&gt;

&lt;p&gt;
Lastly, we gave a &lt;a href="https://material.io/blog/designtocode"&gt;sneak peak&lt;/a&gt; of some new tooling for design handoff, enabling you to export components designed in Figma to generate idiomatic Jetpack Compose code. You can iterate on the designs and pull in new changes, and safely edit the generated code. We're looking for a small group of teams to work directly with, so go &lt;a href="https://services.google.com/fb/forms/designtocode/"&gt;sign up&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Jetpack Compose is stable and ready for production. We’ve been thrilled to see tens of thousands of apps start using Jetpack Compose in production and we continue to build our &lt;a href="https://goo.gle/compose-roadmap"&gt;roadmap&lt;/a&gt; of features to enable you to use Compose to create excellent apps, across devices.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=YX8lDYqy6Tk:ZHEcFJVV3P8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=YX8lDYqy6Tk:ZHEcFJVV3P8:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=YX8lDYqy6Tk:ZHEcFJVV3P8:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4114025353553097619" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4114025353553097619" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/11/ads21-compose-material-you.html" title="#AndroidDevSummit: Jetpack Compose now with Material You" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-oXkDwa-9BRQ/YYrIwufUy0I/AAAAAAAARKY/9lg7hPnteGYdVtp8KEHdosm_aDSaIz6bQCLcBGAsYHQ/s72-c/m3_template.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-3977350537872761416</id><published>2021-10-27T10:54:00.002-07:00</published><updated>2021-10-27T11:35:33.806-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">What’s new for Android developers at #AndroidDevSummit’21</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-OMrAOMxFru8/YXllm6L8k-I/AAAAAAAARJc/eYvlvVUBGC8VF40sZ0vQMqpxEmreFj_LgCLcBGAsYHQ/s0/Android-Developer-Keynote-Wrap-up-Blog%2B%25283%2529.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-OMrAOMxFru8/YXllm6L8k-I/AAAAAAAARJc/eYvlvVUBGC8VF40sZ0vQMqpxEmreFj_LgCLcBGAsYHQ/s0/Android-Developer-Keynote-Wrap-up-Blog%2B%25283%2529.png"&gt;


&lt;p&gt;&lt;em&gt;Sagar Kamdar, VP of Product Management&lt;/em&gt;&lt;/p&gt;


&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-OMrAOMxFru8/YXllm6L8k-I/AAAAAAAARJc/eYvlvVUBGC8VF40sZ0vQMqpxEmreFj_LgCLcBGAsYHQ/s0/Android-Developer-Keynote-Wrap-up-Blog%2B%25283%2529.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%"alt="Android Dev Summit graphic with laptop, watch and phone" border="0" data-original-height="512" data-original-width="1024" src="https://1.bp.blogspot.com/-OMrAOMxFru8/YXllm6L8k-I/AAAAAAAARJc/eYvlvVUBGC8VF40sZ0vQMqpxEmreFj_LgCLcBGAsYHQ/s0/Android-Developer-Keynote-Wrap-up-Blog%2B%25283%2529.png"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
The app experiences that you as developers build help people around the world in ways we couldn’t have imagined, and at &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Dev Summit&lt;/a&gt;, happening over the next two days, we’ll talk about that spirit - focusing on the user, understanding their needs, and then building experiences to delight them. We just wrapped up the keynote, and over the next two days, we’ll focus on an important theme for Android: helping you build &lt;strong&gt;excellent apps, across devices.&lt;/strong&gt; First on updates to our modern Android development offering to help you stay more productive so you can focus on building great applications, and then helping you extend those apps across devices to all form factors. And as a big part of this, we’re introducing the 12L feature drop on foldables and tablets - a set of features optimising Android 12 for large screens - read on to learn more!
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/WZgR5Yf1iq8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;h2&gt;Excellent apps: bringing Material You to Jetpack Compose&lt;/h2&gt;
&lt;p&gt;
When it comes to helping you build excellent apps, our expanding collection of development tools, APIs, language, and distribution technologies–&lt;a href="https://developer.android.com/modern-android-development"&gt;Modern Android Development&lt;/a&gt;, MAD for short–are your partners to help you stay more productive. And we’ve got a number of new features across MAD to help you be productive and create better apps, starting with one of our biggest announcements: the&lt;strong&gt; introduction of Material You and its radical new design vision into &lt;a href="https://developer.android.com/jetpack/compose"&gt;Jetpack Compose&lt;/a&gt;,&lt;/strong&gt; Android's modern toolkit for building native UI.
&lt;/p&gt;
&lt;p&gt;
Material You, introduced &lt;a href="https://blog.google/products/android/android-12-beta/"&gt;in Android 12 earlier this year at Google I/O&lt;/a&gt;, focuses on delivering experiences that are personal for every style, accessible for every need, and adaptive for every screen. We’re releasing the first alpha of &lt;a href="http://m3.material.io"&gt;Compose Material 3&lt;/a&gt;, which offers &lt;a href="https://m3.material.io"&gt;Material Design 3&lt;/a&gt; styled components and &lt;a href="https://developer.android.com/jetpack/compose/themes/material#material3"&gt;theme&lt;/a&gt;, enabling Material You personalization features like dynamic color. We’re also releasing the first beta version of &lt;a href="https://developer.android.com/jetpack/androidx/releases/compose"&gt;Jetpack Compose 1.1&lt;/a&gt; with features like stretch overscroll for Android 12, improved touch-target sizing, experimental lazy layout animations, and more. Jetpack Compose is stable and ready for use in production and we continue to add the features you need to make it fast and easy to build Android UI across all form factors, with new support for Wear OS and for building homescreen widgets.
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-rLj8YGWscc8/YXhx62CEhrI/AAAAAAAALFo/bqB0I8nsX_IQUYFLGkUnsinP9anDwt9OACLcBGAsYHQ/s0/image1.gif" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="GIF showing Compose Material 3" border="0" data-original-height="405" data-original-width="720" src="https://1.bp.blogspot.com/-rLj8YGWscc8/YXhx62CEhrI/AAAAAAAALFo/bqB0I8nsX_IQUYFLGkUnsinP9anDwt9OACLcBGAsYHQ/s0/image1.gif"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2&gt;Jetpack: more features to help you create excellent apps&lt;/h2&gt;
&lt;p&gt;
Beyond Compose, &lt;a href="https://developer.android.com/jetpack"&gt;Jetpack&lt;/a&gt; continues to add the features you’ve been asking us for. &lt;a href="https://developer.android.com/jetpack/androidx/releases/navigation"&gt;Navigation&lt;/a&gt; adds multiple backstacks support. &lt;a href="https://developer.android.com/jetpack/androidx/releases/work"&gt;WorkManager&lt;/a&gt;, our recommended solution for persistent work, makes it easier to handle &lt;a href="https://developer.android.com/about/versions/12/behavior-changes-12#foreground-service-launch-restrictions"&gt;Android 12 background restrictions&lt;/a&gt;, adding support for expedited jobs. &lt;a href="https://developer.android.com/jetpack/androidx/releases/room"&gt;Room&lt;/a&gt; adds auto-migration and multi-map relations. &lt;a href="https://developer.android.com/jetpack/androidx/releases/datastore"&gt;DataStore&lt;/a&gt;, our recommended replacement for SharedPreferences, has reached 1.0 and &lt;a href="https://developer.android.com/studio/profile/macrobenchmark"&gt;Macrobenchmark&lt;/a&gt;, a tool to measure and improve startup and frame performance, added simplified and more accurate frame timing, and compatibility back to Android M. 
&lt;/p&gt;

&lt;h2&gt;Building across devices&lt;/h2&gt;

&lt;p&gt;We also have updates to help you build across Android form factors. Learn more about how being available across different Android devices and form factors is helping Spotify achieve their mission of connecting billions of fans with millions of creators.&lt;/p&gt;

&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/9_vbo6BZ0VU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;h2&gt;Introducing 12L, an OS designed for large screens, together with new tools&lt;/h2&gt;
&lt;p&gt;
Large screens have seen some incredible momentum: a 92% Year-over-Year growth in Chrome OS, making it the fastest growing desktop OS in the world, a 20% growth in tablet sales in the last year and a 2.5x growth in foldables sales, the newest and most innovate form factor…altogether those represent over 250M active large screen Android devices - and Android is giving you an OS to match. And we’ve got some… *large* news to *unfold* here: a developer preview of an upcoming feature drop for Android 12, with updates added JUST for large screens; we call it 12L. With 12L we’ve optimised and polished the system UI for large screens, made multitasking more powerful and intuitive, and improved our compatibility support for apps so they look better right out of the box. You can try the new large-screen features today as part of the &lt;a href="https://developer.android.com/about/versions/12/12L"&gt;12L developer preview&lt;/a&gt;. Check out what is in 12L and how we’re making it easier to &lt;a href="https://android-developers.googleblog.com/2021/10/12L-preview-large-screens.html"&gt;build for large screens here&lt;/a&gt;.
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-j-HEX2lAnJU/YXhyTcO9IPI/AAAAAAAALFw/fNXAteYAbtMtaEZDFkfMbjr4HhSVTfPrwCLcBGAsYHQ/s0/image2.gif" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="GIF showing maps being used on Large Screen device" border="0" data-original-height="640" data-original-width="1024" src="https://1.bp.blogspot.com/-j-HEX2lAnJU/YXhyTcO9IPI/AAAAAAAALFw/fNXAteYAbtMtaEZDFkfMbjr4HhSVTfPrwCLcBGAsYHQ/s0/image2.gif"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2&gt;Watch out for Wear OS&lt;/h2&gt;
&lt;p&gt;
Many developers have created helpful experiences for the latest version of Wear OS which launched earlier this year, and we're looking forward to richer, more immersive app experiences like what we’re seeing from Strava, Spotify, and Calm. Jetpack Compose makes building UIs so much faster and easier - so we’re bringing Compose support to Wear OS. Compose for Wear OS is now in &lt;a href="https://android-developers.googleblog.com/2021/10/compose-for-wear-os-now-in-developer.html"&gt;developer preview&lt;/a&gt;, with new samples and documentation to help you get started. The ​​Tiles API, now in Beta, provides predictable, glanceable access to information and quick actions. We’ve also partnered with Samsung to make it easier to design watch faces. &lt;a href="https://developer.android.com/training/wearables/wfs"&gt;Watch Face Studio&lt;/a&gt;, created by Samsung, allows you to produce your own watch faces without any coding, so &lt;em&gt;watch&lt;/em&gt; you see..is &lt;em&gt;watch&lt;/em&gt; you get. You can &lt;a href="https://android-developers.googleblog.com/2021/10/wearos-at-ads-21.html"&gt;read more about all of the Wear OS news here&lt;/a&gt;. 
&lt;/p&gt;
&lt;h2&gt;Google Play: More features and investments to help you grow your business&lt;/h2&gt;
&lt;p&gt;
We’ve invested in more ways to power your business growth on Google Play. To strengthen user trust, we’ve introduced the Data safety section to highlight your privacy practices and the Play Integrity API to make sure your app installs are always genuine. We’ve also invested in more tools and features to help boost your app quality and recently updated our programs so that &lt;a href="https://android-developers.googleblog.com/2021/10/evolving-business-model.html"&gt;99% of developers qualify for a service fee of 15%&lt;/a&gt; or less. To learn more, check out our &lt;a href="https://android-developers.googleblog.com/2021/10/whats-new-in-google-play.html "&gt;blog post&lt;/a&gt; or &lt;a href="https://youtu.be/QUwPzUCjqO8"&gt;watch the full session&lt;/a&gt;.
&lt;/p&gt;
&lt;h2&gt;#AndroidDevSummit kicks off now!&lt;/h2&gt;
&lt;p&gt;
We just dropped over 30 technical sessions, which you &lt;a href="https://developer.android.com/events/dev-summit/technical-talks"&gt;can watch here&lt;/a&gt; at your own pace. And over the next two days, we have a lot more live content for you to enjoy - including your opportunity to get your burning #AskAndroid questions answered by the team who built Android on topics like Modern Android Development, Large Screens, or Compose with Material You. Plus, we’ll also be hosting live Android Code-Alongs, where you can tune in to watch Android experts as they code, tackle programming challenges, and answer your questions live across Jetpack Compose and Compose for Wear OS. You can check out the &lt;a href="https://developer.android.com/events/dev-summit#livestream-agenda"&gt;full agenda with timings here&lt;/a&gt;. While we can’t wait for the opportunity to connect with you in person soon, we’re excited to engage with you remotely over the next two days. Enjoy your #AndroidDevSummit! 
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-eRf__bgASQ:xumDPHvBEjs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-eRf__bgASQ:xumDPHvBEjs:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=-eRf__bgASQ:xumDPHvBEjs:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3977350537872761416" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3977350537872761416" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/ads21-keynote-wrap.html" title="What’s new for Android developers at #AndroidDevSummit’21" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-OMrAOMxFru8/YXllm6L8k-I/AAAAAAAARJc/eYvlvVUBGC8VF40sZ0vQMqpxEmreFj_LgCLcBGAsYHQ/s72-c/Android-Developer-Keynote-Wrap-up-Blog%2B%25283%2529.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6850773204290964456</id><published>2021-10-27T10:36:00.002-07:00</published><updated>2021-10-27T10:37:19.392-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="#androiddevsummit" /><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Studio" /><category scheme="http://www.blogger.com/atom/ns#" term="Android12" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="foldables" /><category scheme="http://www.blogger.com/atom/ns#" term="Jetpack" /><category scheme="http://www.blogger.com/atom/ns#" term="Large Screens" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Material Design" /><title type="text">12L and new Android APIs and tools for large screens</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-sjT5kFGiQtg/YXlpg0uByLI/AAAAAAAARJk/XHO_uo5bRJcMeQVm0Fn1wN-qe54FGI7MgCLcBGAsYHQ/s0/12L-devices-hero.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-sjT5kFGiQtg/YXlpg0uByLI/AAAAAAAARJk/XHO_uo5bRJcMeQVm0Fn1wN-qe54FGI7MgCLcBGAsYHQ/s0/12L-devices-hero.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Dave Burke, VP of Engineering&lt;/em&gt;&lt;/p&gt;


&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-sjT5kFGiQtg/YXlpg0uByLI/AAAAAAAARJk/XHO_uo5bRJcMeQVm0Fn1wN-qe54FGI7MgCLcBGAsYHQ/s0/12L-devices-hero.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="image shows four devices illustrating 12L and new Android APIs and tools for large screens" id=imgFull border="0" src="https://1.bp.blogspot.com/-sjT5kFGiQtg/YXlpg0uByLI/AAAAAAAARJk/XHO_uo5bRJcMeQVm0Fn1wN-qe54FGI7MgCLcBGAsYHQ/s0/12L-devices-hero.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
  &lt;br&gt;


&lt;p&gt;
There are over a quarter billion large screen devices running Android across tablets, foldables, and ChromeOS devices. In just the last 12 months we’ve seen nearly 100 million new Android tablet activations–a 20% year-over-year growth, while ChromeOS, now the fastest growing desktop platform, grew by 92%.  We’ve also seen Foldable devices on the rise, with year on year growth of over 265%! All told, there are over 250 million active large screen devices running Android. With all of the momentum, we’re continuing to invest in making Android an even better OS on these devices, for users and developers. 
&lt;/p&gt;
&lt;p&gt;
So today at &lt;a href="https://developer.android.com/events/dev-summit/"&gt;Android Dev Summit&lt;/a&gt;, we announced a feature drop for Android 12 that is purpose-built for large screens, we’re calling it 12L, along with new APIs, tools, and guidance to make it easier to build for large screens. We also talked about changes we’re making to Google Play to help users discover your large-screen optimized apps more easily. Read on to see what’s new for large screens on Android! 
&lt;/p&gt;
&lt;h2&gt;Previewing 12L: A feature drop for large screens&lt;/h2&gt;


&lt;p&gt;
Today we're bringing you a &lt;a href="https://developer.android.com/about/versions/12/12L"&gt;developer preview of 12L&lt;/a&gt;, our upcoming feature drop that makes Android 12 even better on large screens. With the preview, you can try the new large screen features, optimize your apps, and let us know your feedback. 
&lt;/p&gt;
&lt;p&gt;
In 12L we’ve refined the UI on large screens across notifications, quick settings, lockscreen, overview, home screen, and more. For example, on screens above 600dp, the notification shade, lockscreen, and other system surfaces use  a new two-column layout to take advantage of the screen area. System apps are also optimized.  
&lt;/p&gt;


&lt;a href="https://1.bp.blogspot.com/-CB5GF7UXVek/YXh21zego7I/AAAAAAAARH0/4JmsEPMr5Vk4EJn8XGcoI2rZCDhe_AeGgCLcBGAsYHQ/s0/image2x.png" imageanchor="1" &gt;&lt;img style="width:600px" alt="image shows a phone with two-column layouts" id=imgFull border="0" src="https://1.bp.blogspot.com/-CB5GF7UXVek/YXh21zego7I/AAAAAAAARH0/4JmsEPMr5Vk4EJn8XGcoI2rZCDhe_AeGgCLcBGAsYHQ/s0/image2x.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Two-column layouts show more and are easier to use&lt;/p&gt;


&lt;p&gt;
We’ve also made multitasking more powerful and intuitive - 12L includes a new taskbar on large screens that lets users instantly switch to favorite apps on the fly. The taskbar also makes split-screen mode more discoverable than ever - just drag-and-drop from the taskbar to run an app in split-screen mode. To make split-screen mode a better experience in Android 12 and later, we’re helping users by automatically enabling all apps to enter split screen mode, regardless whether the apps are resizable. 
&lt;/p&gt;


&lt;a href="https://1.bp.blogspot.com/-IfTzeNEkx1I/YXh33_Y2XmI/AAAAAAAARH8/1TXHnz_4-JAaMgtRHp-DYdVVvj9tvakuwCLcBGAsYHQ/s0/image3x.gif" imageanchor="1" &gt;&lt;img style="width:600px" alt="GIF image shows maps and web brower on the screen at the same time" id=imgFull border="0" src="https://1.bp.blogspot.com/-IfTzeNEkx1I/YXh33_Y2XmI/AAAAAAAARH8/1TXHnz_4-JAaMgtRHp-DYdVVvj9tvakuwCLcBGAsYHQ/s0/image3x.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Drag and drop apps into split-screen mode&lt;/p&gt;


&lt;p&gt;
Last, we’ve improved compatibility mode with visual and stability improvements to offer a better letterboxing experience for users and help apps look better by default. We’ve made letterboxing easily customizable by device manufacturers, who can now set custom letterbox colors or treatments, adjust the position of the inset window, apply custom rounded corners, and more. 
&lt;/p&gt;
&lt;p&gt;
We plan to release the 12L feature drop early next year, in time for the next wave of Android 12 tablets and foldables. We’re already working with our OEM partners to bring these features to their large screen devices - watch for the developer preview of 12L coming soon to the Lenovo P12 Pro. With the features coming to devices in the few months ahead, now is a great time to optimize your apps for large screens. 
&lt;/p&gt;
&lt;p&gt;
For developers, we highly recommend checking out how your apps work in split screen mode with windows of various sizes. If you haven’t optimized your app yet, see how it looks in different orientations and try the new compatibility mode changes if they apply. Along with the large screen features, 12L also includes a handful of new APIs for developers, along with a new API level. We’ve been careful not to introduce any breaking changes for your apps, so we won’t require apps to target 12L to meet Google Play requirements.
&lt;/p&gt;
&lt;p&gt;
To get started with 12L, &lt;a href="https://developer.android.com/about/versions/12/12L/get"&gt;download the 12L Android Emulator&lt;/a&gt; system images and tools from the latest preview release of Android Studio. Review the &lt;a href="https://developer.android.com/about/versions/12/12L/summary"&gt;features and changes&lt;/a&gt; to learn about areas to test in your apps, and see &lt;a href="https://developer.android.com/about/versions/12/12L/overview"&gt;preview overview&lt;/a&gt; for the timeline and release details. You can report issues and requests &lt;a href="https://developer.android.com/about/versions/12/12L/feedback"&gt;here&lt;/a&gt;, and as always, we appreciate your feedback! 
&lt;/p&gt;
&lt;p&gt;
12L is for phones, too, but since most of the new features won’t be visible on smaller screens, for now we’re keeping the focus on tablets, foldables, and ChromeOS devices. Later in the preview we plan to open up Android Beta enrollments for Pixel devices. For details, visit &lt;a href="https://developer.android.com/12L"&gt;developer.android.com/12L&lt;/a&gt;.
&lt;/p&gt;
&lt;h2&gt;Making it easier to build for large screens&lt;/h2&gt;


&lt;p&gt;
It's time to start designing fully adaptive apps to fit any screen, and now we're making it even easier. To help you get ready for these changes in the OS and Play, along with the developer preview we're releasing updates to our APIs, tools and guidance.
&lt;/p&gt;
&lt;h3&gt;Design with large screen patterns in mind&lt;/h3&gt;


&lt;p&gt;
The first step to supporting adaptive UI is designing your app to behave nicely on both a small and a larger screen. We’ve been working on new &lt;a href="https://m3.material.io/foundations/adaptive-design/overview"&gt;Material Design guidance&lt;/a&gt; that will help you scale your app’s UI across all screens. The guidance covers common layout patterns prevalent in the ecosystem that will help inspire and kick-start your efforts. 
&lt;/p&gt;

&lt;a href="https://1.bp.blogspot.com/-eSRCYJFelKM/YXh4RQUV-AI/AAAAAAAARIE/NwdASrtLpY8qCsx8Ni8TY8cDda44epnrgCLcBGAsYHQ/s0/image4x.png" imageanchor="1" &gt;&lt;img style="width:550px" alt="Image shows four Adaptive UI patterns in the Material Design guidelines" id=imgFull border="0" src="https://1.bp.blogspot.com/-eSRCYJFelKM/YXh4RQUV-AI/AAAAAAAARIE/NwdASrtLpY8qCsx8Ni8TY8cDda44epnrgCLcBGAsYHQ/s0/image4x.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Adaptive UI patterns in the Material Design guidelines&lt;/p&gt;



&lt;h3&gt;Build responsive UIs with new navigation components&lt;/h3&gt;


&lt;p&gt;
To provide the best possible navigation experience to your users, you should provide a navigation UI that is tailored to the Window Size Class of the user’s device. The recommended navigation patterns include using a &lt;a href="http://m3.material.io/components/navigation-bar/overview"&gt;navigation bar&lt;/a&gt; for compact screens and a &lt;a href="https://m3.material.io/components/navigation-rail/overview"&gt;navigation rail&lt;/a&gt; for medium-width device classes and larger (600dp+). For expanded-width devices, there are several ideas on larger screen layouts within our newly released &lt;a href="https://m3.material.io/foundations/adaptive-design/foldables/compositions"&gt;Material Design guidance&lt;/a&gt; such as a List/Detail structure that can be implemented, using SlidingPaneLayout. Check out our guidance on how to implement navigation for adaptive UIs in &lt;a href="https://developer.android.com/guide/topics/large-screens/navigation-for-responsive-uis"&gt;Views&lt;/a&gt; and &lt;a href="https://d.android.com/jetpack/compose/nav-adaptive"&gt;Compose&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
While updating the navigation pattern and using a SlidingPaneLayout is a great way to apply a large screen optimized layout to an existing application with fragments, we know many of you have applications based on multiple activities.  For those apps, the new &lt;a href="https://developer.android.com/guide/topics/large-screens/activity-embedding"&gt;activity embedding APIs&lt;/a&gt; released in Jetpack WindowManager 1.0 beta 03 make it easy to support new UI paradigms, such as a TwoPane view. We’re working on updating &lt;code&gt;SlidingPaneLayout&lt;/code&gt; to support those APIs - look for an update in the coming months. 
&lt;/p&gt;
&lt;h3&gt;Use Compose to make it easier to respond to screen changes&lt;/h3&gt;


&lt;p&gt;
Jetpack Compose makes it easier to build for large screens and diverse layouts. If you’re starting to adopt Compose, it’s a great time to optimize for large screens along the way. 
&lt;/p&gt;
&lt;p&gt;
Compose is a declarative UI toolkit; all UI is described in code, and it is easy to make decisions at runtime of how it should adapt to the available size. This makes Compose especially great for developing adaptive UI, as it is very easy to handle UI changes across different screen sizes or components. The &lt;a href="http://goo.gle/compose-large-screens"&gt;Build adaptive layouts in Compose&lt;/a&gt; guide covers the basics of what you need to know. 
&lt;/p&gt;
&lt;h3&gt;Use WindowManager APIs to build responsive UIs&lt;/h3&gt;


&lt;p&gt;
The Jetpack WindowManger library provides a backward-compatible way to work with windows in your app and build responsive UI for all devices. Here’s what’s new. 
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Activity embedding&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Activity embedding lets you take advantage of the extra display area of large screens by showing multiple activities at once, such as for the List-Detail pattern, and it requires little or no refactoring of your app. You determine how your app displays its activities—side by side or stacked—by creating an XML configuration file or making Jetpack WindowManager API calls. The system handles the rest, determining the presentation based on the configuration you’ve created.
&lt;/p&gt;
&lt;p&gt;
Activity embedding works seamlessly on foldable devices, stacking and unstacking activities as the device folds and unfolds. If your app uses multiple activities, activity embedding can enhance your user experience on large screen devices. Try the activity embedding APIs in Jetpack WindowManager 1.0 Beta 03 and later releases. More &lt;a href="https://d.android.com/guide/topics/large-screens/activity-embedding"&gt;here&lt;/a&gt;. 
&lt;/p&gt;


&lt;a href="https://1.bp.blogspot.com/-qQpih-emQzo/YXh4xrH8LLI/AAAAAAAARIM/IKCW6oCM4hIYbuUTcC1ckQtA_NzfAaE5wCLcBGAsYHQ/s0/image5x.gif" imageanchor="1" &gt;&lt;img style="width:600px" alt="GIF shows activity embedding with Jetpack WindowManager" id=imgFull border="0" src="https://1.bp.blogspot.com/-qQpih-emQzo/YXh4xrH8LLI/AAAAAAAARIM/IKCW6oCM4hIYbuUTcC1ckQtA_NzfAaE5wCLcBGAsYHQ/s0/image5x.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Activity embedding with Jetpack WindowManager&lt;/p&gt;

&lt;p&gt;
&lt;strong&gt;Use Window size classes to help detect the size of your window&lt;/strong&gt;
&lt;/p&gt;


&lt;p&gt;
Window Size Classes are a set of opinionated viewport breakpoints for you to design, develop and test resizable application layouts against. The Window Size Class breakpoints have been split into three categories: compact, medium, and expanded. They have been designed specifically to balance layout simplicity with the flexibility to optimize your app for the most unique use cases, while representing a large proportion of devices in the ecosystem. The WindowSizeClass APIs will be coming soon in Jetpack WindowManager 1.1 and will make it easier to build responsive UIs. More &lt;a href="https://d.android.com/guide/topics/large-screens/support-different-screen-sizes#window_size_classes"&gt;here&lt;/a&gt;.
&lt;/p&gt;


&lt;a href="https://1.bp.blogspot.com/-C7ZUvWr34Bg/YXh5XIg4wrI/AAAAAAAARIU/NnKq_VYAdrY_xRpklz6ByeT8P88ivRh7gCLcBGAsYHQ/s0/image6x.png" imageanchor="1" &gt;&lt;img style="width:650px" alt="Image compares the width of Window Size Classes by showing compact, medium, and expanded views" id=imgFull border="0" src="https://1.bp.blogspot.com/-C7ZUvWr34Bg/YXh5XIg4wrI/AAAAAAAARIU/NnKq_VYAdrY_xRpklz6ByeT8P88ivRh7gCLcBGAsYHQ/s0/image6x.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Window Size Classes in Jetpack WindowManager&lt;/p&gt;


&lt;p&gt;
&lt;strong&gt;Make your app fold-aware&lt;/strong&gt;
&lt;/p&gt;



&lt;p&gt;
WindowManager also provides a common API surface for different window features,  like folds and hinges. When your app is fold aware, the content in the window can be adapted to avoid folds and hinges, or to take advantage of them and use them as natural separators. Learn how you can make your app fold aware in &lt;a href="http://d.android.com/guide/topics/large-screens/learn-about-foldables"&gt;this guide&lt;/a&gt;.
&lt;/p&gt;
&lt;h2&gt;Building and testing for large screens with Android Studio&lt;/h2&gt;


&lt;p&gt;
&lt;strong&gt;Reference Devices&lt;/strong&gt;
&lt;/p&gt;



&lt;p&gt;
Since Android apps should be built to respond and adapt to all devices and categories, we’re introducing Reference Devices across Android Studio in many tools where you design, develop and test UI and layout. The four reference devices represent phones, large foldable inner displays, tablets, and desktops. We’ve designed these after analyzing market data to represent either popular devices or rapidly growing segments. They also enable you to ensure your app works across popular breakpoint combinations with the new WindowSizeClass breakpoints, to ensure your app covers as many use cases as possible.
&lt;/p&gt;



&lt;a href="https://1.bp.blogspot.com/-w6bX5X1tsRA/YXh6KFpVIBI/AAAAAAAARIc/3Jk5sZE9Ic4Yp-v0uFSFYsAbYoZU_jx2QCLcBGAsYHQ/s0/image7x.png" imageanchor="1" &gt;&lt;img style="width:650px" alt="Image shows reference device definitions for a tablet, phone, foldable, and desktop sizes" id=imgFull border="0" src="https://1.bp.blogspot.com/-w6bX5X1tsRA/YXh6KFpVIBI/AAAAAAAARIc/3Jk5sZE9Ic4Yp-v0uFSFYsAbYoZU_jx2QCLcBGAsYHQ/s0/image7x.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Reference Device definitions&lt;/p&gt;


&lt;p&gt;
&lt;strong&gt;Layout validation&lt;/strong&gt;
&lt;/p&gt;


&lt;p&gt;
If you’re not sure where to get started adapting your UI for large screens, the first thing you can do is use new tools to identify potential issues impacting large screen devices. In &lt;a href="https://developer.android.com/studio/preview"&gt;Android Studio Chipmunk&lt;/a&gt;, we’re working on a new visual linting tool to proactively surface UI warnings and suggestions in Layout Validation, including which reference devices are impacted. 
&lt;/p&gt;


&lt;a href="https://1.bp.blogspot.com/-NxqIe-2t8v8/YXh7FOup6UI/AAAAAAAARIk/3NugRfC8a0A-5eQHcBYvEXF78Iv5G23KwCLcBGAsYHQ/s0/image8x.png" imageanchor="1" &gt;&lt;img style="width:600px" alt="Image shows layout validation panel. The panel shows phone, foldable, tablet, and desktop sizes" id=imgFull border="0" src="https://1.bp.blogspot.com/-NxqIe-2t8v8/YXh7FOup6UI/AAAAAAAARIk/3NugRfC8a0A-5eQHcBYvEXF78Iv5G23KwCLcBGAsYHQ/s0/image8x.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Layout validation tool with Reference Device classes&lt;/p&gt;

&lt;p&gt;
&lt;strong&gt;Resizable emulator&lt;/strong&gt;
&lt;/p&gt;



&lt;p&gt;
To test your app at runtime, we can use the new resizable emulator configuration that comes with &lt;a href="https://developer.android.com/studio/preview"&gt;Android Studio Chipmunk&lt;/a&gt;. The resizable emulator lets you quickly toggle between the four reference devices - phone, foldable, tablet, and desktop. This makes it easier to validate your layout at design time and test the behavior at runtime, both using the same reference devices. To create a new Resizable emulator, use the Device Manager in Android Studio to create a new Virtual Device and select the Resizable device definition with the Android 12L (Sv2) system image.
&lt;/p&gt;



&lt;a href="https://1.bp.blogspot.com/-6m9xm0UykRw/YXh7sl3E_iI/AAAAAAAARIs/0GWQR-CnoIsVcu9D_GM2KsqxHge6oAi0ACLcBGAsYHQ/s0/image9x.gif" imageanchor="1" &gt;&lt;img style="width:600px" alt="GIF shows the processs to create a new Resizable emulator" id=imgFull border="0" src="https://1.bp.blogspot.com/-6m9xm0UykRw/YXh7sl3E_iI/AAAAAAAARIs/0GWQR-CnoIsVcu9D_GM2KsqxHge6oAi0ACLcBGAsYHQ/s0/image9x.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt;

&lt;p id="imgCaption"&gt;Resizable Android Emulator&lt;/p&gt;


&lt;h2&gt;Changes to Google Play on large screens&lt;/h2&gt;


&lt;p&gt;
To make it easier for people to find the best app experiences on their tablets, foldables, and ChromeOS devices, we're making changes in Play to highlight apps that are optimized for their devices. 
&lt;/p&gt;
&lt;p&gt;
We’re adding new checks to assess each app’s quality against our &lt;a href="https://developer.android.com/docs/quality-guidelines/large-screens-app-quality"&gt;large screen app quality guidelines&lt;/a&gt; to ensure that we surface the best possible apps on those devices. For apps that are not optimized for large screens, we’ll start warning large screen users with a notice on the app’s Play Store listing page. 
&lt;/p&gt;
&lt;p&gt;
We'll also be introducing large screen specific app ratings, as &lt;a href="https://android-developers.googleblog.com/2021/08/making-ratings-and-reviews-better-for.html"&gt;announced earlier this year&lt;/a&gt;, so users will be able to rate how your app works on their large screen devices. These changes are coming next year, so we're giving you advanced notice to get your apps ready!
&lt;/p&gt;
&lt;p&gt;
Also, make sure to check out our post that highlights how we are &lt;a href="https://android-developers.googleblog.com/2021/10/evolving-business-model.html"&gt;evolving our business model to address developer needs&lt;/a&gt; in Google Play. 
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Learn more! &lt;/h2&gt;


&lt;p&gt;
To help you get started with building for large screens and foldables, no matter whether you’re using Views or Compose, we’ve got you covered! We’re launching new and updated guidance on how to support different screen sizes both in a new and in an existing app, how to implement navigation for both Views and Compose, how to take advantage of foldable devices and more. Check them out in the &lt;a href="https://developer.android.com/guide/topics/ui/responsive-layout-overview"&gt;large screens guides section&lt;/a&gt; for Views support or in the Compose guides section. 
&lt;/p&gt;
&lt;p&gt;
Nothing speaks louder than code - we updated the following samples to support responsive UIs:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;&lt;a href="https://github.com/google/iosched"&gt;Google I/O Android App&lt;/a&gt;

&lt;li&gt;&lt;a href="https://github.com/android/trackr"&gt;Trackr&lt;/a&gt;

&lt;li&gt;&lt;a href="https://github.com/android/compose-samples/tree/main/JetNews"&gt;Jetnews&lt;/a&gt;

&lt;li&gt;&lt;a href="https://github.com/android/compose-samples/tree/main/Jetcaster"&gt;Jetcaster (tabletop support)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
For some hands-on work, check out our &lt;a href="https://developer.android.com/codelabs/android-window-manager-dual-screen-foldables#0"&gt;Support foldable and dual-screen devices with Jetpack WindowManager&lt;/a&gt; updated codelab.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FvZMyPNI5VA:EIyHAigowpA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FvZMyPNI5VA:EIyHAigowpA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FvZMyPNI5VA:EIyHAigowpA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6850773204290964456" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6850773204290964456" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/12L-preview-large-screens.html" title="12L and new Android APIs and tools for large screens" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-sjT5kFGiQtg/YXlpg0uByLI/AAAAAAAARJk/XHO_uo5bRJcMeQVm0Fn1wN-qe54FGI7MgCLcBGAsYHQ/s72-c/12L-devices-hero.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6710982952282076960</id><published>2021-10-27T10:34:00.001-07:00</published><updated>2021-10-27T10:34:38.454-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="android developers" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Play Console" /><title type="text">Google Play updates from #AndroidDevSummit</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-sbLIRFjHfD0/YXhgG5edHwI/AAAAAAAARHY/1ProKOJXeG4mwMoCs_9Ui4xoBITxD3d-ACLcBGAsYHQ/s0/unnamed.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-sbLIRFjHfD0/YXhgG5edHwI/AAAAAAAARHY/1ProKOJXeG4mwMoCs_9Ui4xoBITxD3d-ACLcBGAsYHQ/s0/unnamed.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Alex Musil, Director of Product, Google Play&lt;/em&gt;&lt;p&gt;
  


&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-sbLIRFjHfD0/YXhgG5edHwI/AAAAAAAARHY/1ProKOJXeG4mwMoCs_9Ui4xoBITxD3d-ACLcBGAsYHQ/s0/unnamed.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="illustrated graphic of orange hands holding a phone with the Google Play logo. There are other icons in the image like a coin and charts" id=imgFull border="0" src=" https://1.bp.blogspot.com/-sbLIRFjHfD0/YXhgG5edHwI/AAAAAAAARHY/1ProKOJXeG4mwMoCs_9Ui4xoBITxD3d-ACLcBGAsYHQ/s0/unnamed.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
  &lt;br&gt;
  &lt;p&gt;
At this year’s &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Developer Summit&lt;/a&gt;, we shared new features we’ve been building to help power your growth on our platform, including enhancements to trust and safety, tools to boost your app quality and improve monetization, some updates for games, and an exciting new app marketing certificate. 
&lt;/p&gt;
&lt;p&gt;
Watch the whole session below, or keep reading for the highlights.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/QUwPzUCjqO8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;
&lt;h2&gt;Evolving our business model to address developer needs&lt;/h2&gt;

&lt;p&gt;
We've made important changes to ensure all types of businesses can be successful on Google Play. We now have multiple programs designed to support our app ecosystem with 99% of developers qualifying for a service fee of 15% or less.
&lt;/p&gt;
&lt;p&gt;
Recently, we &lt;a href="https://android-developers.googleblog.com/2021/10/evolving-business-model.html"&gt;announced&lt;/a&gt; that starting January 1, 2022, we’re decreasing the service fee for all subscriptions on Google Play from 30% to 15%. Additionally, we're making changes to the &lt;a href="https://play.google.com/console/about/mediaprogram/"&gt;Play Media Experience program&lt;/a&gt;, where ebooks and on-demand music streaming services will now be eligible for service fees as low as 10%.
&lt;/p&gt;
&lt;p&gt;
For more information about our service fees, please &lt;a href="https://support.google.com/googleplay/android-developer/answer/11131145#zippy="&gt;see our FAQs&lt;/a&gt;.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Improvements to trust and safety&lt;/h2&gt;


&lt;p&gt;
Earlier this year, &lt;a href="https://android-developers.googleblog.com/2021/07/new-google-play-safety-section.html"&gt;we shared details&lt;/a&gt; about the upcoming &lt;strong&gt;Data safety section&lt;/strong&gt; in the Play Store, which will let users know what type of data your app collects and shares and how that data is used. By giving you a way to showcase your approach to privacy and security, we’re not only building trust, we’re helping users make informed decisions about the apps they install and use.
&lt;/p&gt;
&lt;p&gt;
Users will see the new Data safety section in the Play Store starting in February 2022. You have until April 2022 before your apps must have this section completed and approved, but we encourage you to &lt;a href="https://android-developers.googleblog.com/2021/10/launching-data-safety-in-play-console.html"&gt;fill out the required Data Safety form in Play Console now&lt;/a&gt;. For more information, including guidance on how to fill out the form, watch our “Get prepared for the Data safety section” session.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/J7TM0Yy0aTQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
We regularly update our policies to make Google Play a safe and trustworthy experience. Check out our &lt;a href="https://support.google.com/googleplay/android-developer/answer/9934569"&gt;Policy Center&lt;/a&gt; or this &lt;a href="https://youtu.be/LT5xI835soc"&gt;PolicyBytes video&lt;/a&gt; for new announcements from this week. You can also join our policy webinars and send in your questions, available for multiple regions (&lt;a href="https://developersonair.withgoogle.com/events/2021q4-policy-seminar?utm_source=ads&amp;utm_medium=blog&amp;utm_campaign=2021-q4-amer-all-policy-webinar-q4-2021&amp;utm_content=havana_policy_q4_2021_ads_recap_blog"&gt;Global&lt;/a&gt;, &lt;a href="https://developersonair.withgoogle.com/events/policywebinar-q4#"&gt;India&lt;/a&gt;, &lt;a href="https://developersonair.withgoogle.com/events/policy2021-3"&gt;Japan&lt;/a&gt;, or &lt;a href="https://developersonair.withgoogle.com/events/policywebinar2021kr"&gt;Korea&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Another way that we’re protecting both you and our users is by investing in new developer tools that help you protect your apps and games from abuse and attack, so you can ensure your users have the experience you intend. The new &lt;strong&gt;Play Integrity API&lt;/strong&gt; will let you determine if you’re interacting with your genuine app binary, installed by Google Play, and running on a genuine Android device that’s powered by Google Play services. If not, you can decide how best to introduce additional friction and reduce the risk to your app.
&lt;/p&gt;
&lt;p&gt;
The Play Integrity API will be rolling out to all developers over the next few months. To learn more, watch our “Play Integrity API” session and &lt;a href="http://g.co/play/integrityapi"&gt;express interest in early access&lt;/a&gt;.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/TyxL78e5Bag" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;

&lt;h2&gt;More ways to improve app quality&lt;/h2&gt;


&lt;p&gt;
We've released several updates to help you improve the performance of your app.
&lt;/p&gt;
&lt;p&gt;
First, we’re making it easier for you to be alerted to and fix new issues with improvements to &lt;a href="https://play.google.com/console/about/vitals/"&gt; &lt;strong&gt;Android vitals&lt;/strong&gt;&lt;/a&gt;. Your most recent data is now more visible to help you see issues right away, and we’ve added trends, filters, and app version information to help you identify the source of the issue quickly. 
&lt;/p&gt;
&lt;p&gt;
We also recently launched a new tool in Play Console called &lt;strong&gt;&lt;a href="https://android-developers.googleblog.com/2021/07/plan-for-success-on-google-play-with.html"&gt;Reach and devices&lt;/a&gt;&lt;/strong&gt; to help you understand which features or fixes would help you reach the most users on Google Play. By understanding your user and issue distribution, you can make better decisions about which specs to build for, where to launch, and what to test to make the biggest impact.
&lt;/p&gt;
&lt;p&gt;
We’re making changes to the way users evaluate your app quality, too. One of the most important ways that users assess your app is by checking your &lt;strong&gt;&lt;a href="https://android-developers.googleblog.com/2021/08/making-ratings-and-reviews-better-for.html"&gt;ratings and reviews&lt;/a&gt;&lt;/strong&gt;. That’s why starting in November, users on phones will start to see ratings specific to their registered country. Then, in early 2022, users will see ratings specific to the device that they’re on, including form factors such as tablets, Chromebooks, and wearables. You can preview your location-specific and device-specific ratings in Play Console now, and we encourage you to check them out so you have time to make any app quality improvements you need before the new ratings go into effect in the Play Store. 
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Updates to help you monetize your app&lt;/h2&gt;


&lt;p&gt;
To help you better monetize your apps and games, we continue to invest in modernizing our platform, including updates to the Billing Library. &lt;a href="https://android-developers.googleblog.com/2020/06/meet-google-play-billing-library.html"&gt;Billing Library version 3&lt;/a&gt;, which was announced June 2020, includes new ways for users to pay, subscription promotion capabilities, purchase attribution for games, and improvements to purchase reliability and security. As a reminder, all updates to existing apps must use Billing Library version 3 or newer by November 1, 2021. Learn more about updating to Billing Library version 3 or newer — which requires few updates to your code — in the &lt;a href="https://developer.android.com/google/play/billing/release-notes"&gt;release notes&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We’re also excited to announce a new feature in the Billing Library: &lt;strong&gt;in-app messaging&lt;/strong&gt;. Today, subscription users who go into payment decline often aren’t aware of it, or experience too much friction to fix their payment. That’s why we’ve launched a new API that can detect whether a user is in payment decline and show a helpful message right in your app, so the user can immediately fix the payment without leaving the app to go to the Play Store. Best of all, the integration is super easy — just a single line of code. On average, our early-access partners saw a 99% improvement in subscription recovery and spend for users who saw the message. In-app messaging will be available in the next Billing Library release, so stay tuned for more information.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Seamless gaming experiences&lt;/h2&gt;


&lt;p&gt;
The updated&lt;strong&gt; sign-in API for &lt;a href="http://g.co/play/pgs-signin-v2"&gt;Play Games Services&lt;/a&gt;&lt;/strong&gt;, which drastically simplifies the sign-in implementation, is now in early access. The new SDK makes for a one-line implementation. 
&lt;/p&gt;
&lt;p&gt;
We’ve also &lt;strong&gt;simplified the setup for users&lt;/strong&gt;, combining the Google Play Games install and profile creation in one step. This allows users to get back to their game more quickly, even when they don’t have Play Games installed. We’re also streamlining the process of opting in to auto-sign-in for an even smoother experience for returning users.
&lt;/p&gt;
&lt;p&gt;
But that’s not all. Because needing to have the Google Play Games app installed is creating friction for some users, starting in 2022, &lt;strong&gt;Play Games Services will no longer require this installation&lt;/strong&gt;. This change will allow 2 billion users to sign in to your Play Games Services-enabled games with a zero-touch experience. More details are coming soon. You can &lt;a href="http://g.co/play/pgs-signin-v2"&gt;express your interest&lt;/a&gt; in the early access program on our developer site.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Industry-recognized app marketing certificate&lt;/h2&gt;


&lt;p&gt;
Last but not least, we also announced the launch of the &lt;a href="https://android-developers.googleblog.com/2021/10/driving-app-career-growth-play-academy.html"&gt;Google Play Store Listing Certificate&lt;/a&gt;. This new program is designed to help app marketers demonstrate their proficiency and skills in Play Store listing best practices.
&lt;/p&gt;
&lt;p&gt;
To &lt;a href="http://play.google.com/academy/certificate/#path-to-growth?utm_source=google&amp;utm_medium=blog&amp;utm_campaign=adsblog&amp;utm_content=adsblog"&gt;get certified&lt;/a&gt;, app marketers can take online training that will help you best tell your app or game’s story on Google Play. You’ll learn key skills that will help you drive growth through high-quality and policy-compliant store listings. After the training, take the exam to get an industry-recognized certificate.
&lt;/p&gt;
&lt;p&gt;
We hope you take advantage of all these new features and programs to grow your businesses on Google Play. Please continue sharing your feedback so we can build the tools you need to power your growth. Thank you for being part of the Google Play community. 
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;center&gt;
&lt;p&gt;
 How useful did you find this blog post? 
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt;
  &lt;/p&gt; 
  
&lt;a href="https://1.bp.blogspot.com/-9TqNGmQGytA/YXhim_9stzI/AAAAAAAARHk/METJRbmedZYKpo7r_QLrBVcDYbO6hwJqACLcBGAsYHQ/s0/image1.png" imageanchor="1" &gt;&lt;img style="width:25%" alt="Google Play logo" id=imgFull border="0" src="https://1.bp.blogspot.com/-9TqNGmQGytA/YXhim_9stzI/AAAAAAAARHk/METJRbmedZYKpo7r_QLrBVcDYbO6hwJqACLcBGAsYHQ/s0/image1.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e5J-Scng010:knBKUOw-Ieo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=e5J-Scng010:knBKUOw-Ieo:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=e5J-Scng010:knBKUOw-Ieo:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6710982952282076960" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6710982952282076960" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/whats-new-in-google-play.html" title="Google Play updates from #AndroidDevSummit" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-sbLIRFjHfD0/YXhgG5edHwI/AAAAAAAARHY/1ProKOJXeG4mwMoCs_9Ui4xoBITxD3d-ACLcBGAsYHQ/s72-c/unnamed.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6880083582885199045</id><published>2021-10-27T10:33:00.001-07:00</published><updated>2021-10-27T10:33:48.687-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Driving app and career growth with Google Play Academy’s Store Listing Certificate</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-RsBHsVk0biw/YXbu4T76uAI/AAAAAAAARE0/zRLeK7EyuLAZOPIfTdn2hrNhHJWFfMhigCLcBGAsYHQ/s0/image2.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-RsBHsVk0biw/YXbu4T76uAI/AAAAAAAARE0/zRLeK7EyuLAZOPIfTdn2hrNhHJWFfMhigCLcBGAsYHQ/s0/image2.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Eric McCleve, Google Play Academy Programs Lead&lt;/em&gt;&lt;p&gt;
  
  
&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-RsBHsVk0biw/YXbu4T76uAI/AAAAAAAARE0/zRLeK7EyuLAZOPIfTdn2hrNhHJWFfMhigCLcBGAsYHQ/s0/image2.png" style="display: block; text-align: center; "&gt;&lt;img style="width:100%"alt="Illustration of a black woman with short hair holding a tablet with Google Play Academy Store Listing Certificate logo in the middle of the image" border="0" data-original-height="1080" data-original-width="1920" src="https://1.bp.blogspot.com/-RsBHsVk0biw/YXbu4T76uAI/AAAAAAAARE0/zRLeK7EyuLAZOPIfTdn2hrNhHJWFfMhigCLcBGAsYHQ/s0/image2.png"/&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;
At Google Play, our goal is to help developers and marketers reach and resonate with over 2 Billion users who visit our platform every month looking for high quality content and services. Having a great store listing experience can be a huge benefit in helping achieve user acquisition goals for your app or game.
&lt;/p&gt;
&lt;p&gt;
To help you get the most out of our store listing tools and features, we’re excited to announce a new &lt;a href="https://play.google.com/academy/certificate/?utm_source=google&amp;utm_medium=blog&amp;utm_campaign=certlaunchblog&amp;utm_content=certlaunchblog"&gt;Store Listing Certificate&lt;/a&gt; on Google Play Academy. The certificate is designed for both learners who have an app or game on Google Play and want to improve its store listing, or aspiring app makers who want to build in-demand mobile marketing skills. The training and exam cover:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;The mobile marketer's role in creating a store listing

&lt;li&gt;Common store listing policy violations to avoid

&lt;li&gt;Telling your story with your store listing assets

&lt;li&gt;Tools to help you grow your app

&lt;li&gt;How to market to a global audience
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;How it works&lt;/h2&gt;

&lt;center&gt;&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/3Vtgm8SNy1o" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p id="imgCaption"&gt;Watch this video to learn more about the training and exam certificate&lt;/p&gt;&lt;/center&gt;
  
  &lt;br&gt;
  
  &lt;p&gt;
To get certified, you can take &lt;a href="https://playacademy.exceedlms.com/student/path/313809/?utm_source=google&amp;utm_medium=blog&amp;utm_campaign=certlaunchblog&amp;utm_content=certlaunchblog"&gt;online training on Google Play Academy&lt;/a&gt; and learn best practices to help you best tell your app or game’s story. You’ll learn key skills that will help you drive growth through high-quality and policy-compliant store listings. After the training, &lt;a href="https://play.google.com/academy/certificate/?utm_source=google&amp;utm_medium=blog&amp;utm_campaign=certlaunchblog&amp;utm_content=certlaunchblog#path-to-growth"&gt;take the exam&lt;/a&gt; to get an industry-recognized certificate. You will also be invited to join &lt;a href="https://developers.google.com/certification/directory"&gt;Google Developer Certification Directory&lt;/a&gt;, a network of Google certified developers.
&lt;/p&gt;
&lt;p&gt;
Mohamed Kamara, founder of &lt;a href="https://play.google.com/store/apps/details?id=com.inovcares.patient"&gt;InovCares&lt;/a&gt;, a health startup that modernizes healthcare for women, learned app store listing best practices from Google Play Academy.
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/Z4PDai_Jh1c" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p id="imgCaption"&gt;Hear Mo explain how Google Play Academy’s training helped him better tell his app’s story on Google Play&lt;/p&gt;&lt;/center&gt;

&lt;br&gt;
&lt;h2&gt;Get certified!&lt;/h2&gt;

&lt;p&gt;
Start training and &lt;a href="https://play.google.com/academy/certificate/?utm_source=google&amp;utm_medium=blog&amp;utm_campaign=certlaunchblog&amp;utm_content=certlaunchblog"&gt;get certified&lt;/a&gt;.  Happy learning!
&lt;/p&gt;

&lt;br&gt;
&lt;center&gt;&lt;p&gt;
 How useful did you find this blog post? 
&lt;/p&gt;
  

&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt; &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?usp=pp_url&amp;entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=newinplay-10/21"&gt;★&lt;/a&gt;
  
  &lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-QxCQU4JHP28/YXbxr8X-fdI/AAAAAAAARFM/dgKS2E9-sX4a9OpZMGXp2fQlfhTsxr7QQCLcBGAsYHQ/s0/image1.png" style="display: block; text-align: center; "&gt;&lt;img Style="width:30%" alt="Google Play logo" border="0" data-original-height="281" data-original-width="499" src="https://1.bp.blogspot.com/-QxCQU4JHP28/YXbxr8X-fdI/AAAAAAAARFM/dgKS2E9-sX4a9OpZMGXp2fQlfhTsxr7QQCLcBGAsYHQ/s0/image1.png"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;
&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dYi1zS6jXWY:pyf5NP8pd5M:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dYi1zS6jXWY:pyf5NP8pd5M:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=dYi1zS6jXWY:pyf5NP8pd5M:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6880083582885199045" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6880083582885199045" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/driving-app-career-growth-play-academy.html" title="Driving app and career growth with Google Play Academy’s Store Listing Certificate" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-RsBHsVk0biw/YXbu4T76uAI/AAAAAAAARE0/zRLeK7EyuLAZOPIfTdn2hrNhHJWFfMhigCLcBGAsYHQ/s72-c/image2.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-2402420310450195025</id><published>2021-10-27T10:32:00.004-07:00</published><updated>2021-11-02T09:26:23.902-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="audio playback" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="jetpack media3" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="media playback" /><category scheme="http://www.blogger.com/atom/ns#" term="video playback" /><title type="text">Introducing Jetpack Media3</title><content type="html">&lt;meta name="https://1.bp.blogspot.com/-ozOGH_S7zRw/YXmIexkIUqI/AAAAAAAARJw/QjXHsKGzUhAUSy9ocwFBnyckWAOOWcplgCLcBGAsYHQ/s0/Introducing-Media3-SOCIAL%2B%25282%2529.png" content=" "&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-ozOGH_S7zRw/YXmIexkIUqI/AAAAAAAARJw/QjXHsKGzUhAUSy9ocwFBnyckWAOOWcplgCLcBGAsYHQ/s0/Introducing-Media3-SOCIAL%2B%25282%2529.png"&gt;


&lt;p&gt;&lt;em&gt;Posted by &lt;a href="https://twitter.com/donturner?lang=en"&gt;Don Turner&lt;/a&gt;, Developer Relations Engineer&lt;/em&gt;&lt;p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-vWG0FoBznO0/YXmIXd3VjZI/AAAAAAAARJs/DcAz0GEOImIeMNMuKqHKG6j6nwHbKWsDgCLcBGAsYHQ/s0/Introducing-Media3-HEADER%2B%25282%2529.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Blue background with a dark blue tablet illustration. The Android Jetpack logo is flying across the screen" id=imgFull border="0" src="https://1.bp.blogspot.com/-vWG0FoBznO0/YXmIXd3VjZI/AAAAAAAARJs/DcAz0GEOImIeMNMuKqHKG6j6nwHbKWsDgCLcBGAsYHQ/s0/Introducing-Media3-HEADER%2B%25282%2529.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
  
  
  
  &lt;br&gt;
  

  
&lt;h2&gt;Introducing Jetpack Media3&lt;/h2&gt;

&lt;p&gt;
Today, we're launching the first alpha of &lt;a href="https://developer.android.com/jetpack/androidx/releases/media3"&gt;Jetpack Media3&lt;/a&gt;. It's a collection of support libraries for media playback, including ExoPlayer. This article will explain why we created Media3, what it contains, and how it can simplify your app architecture. 
&lt;/p&gt;

  &lt;br&gt;
&lt;h2&gt;Why another media API?&lt;/h2&gt;

&lt;p&gt;
We have several existing media APIs: &lt;a href="https://developer.android.com/jetpack/androidx/releases/media"&gt;Jetpack Media&lt;/a&gt; also known as MediaCompat, &lt;a href="https://developer.android.com/jetpack/androidx/releases/media2"&gt;Jetpack Media2&lt;/a&gt;, and &lt;a href="https://exoplayer.dev/"&gt;ExoPlayer&lt;/a&gt;. These libraries were developed with different goals, and have several areas of overlapping functionality. 
&lt;/p&gt;
&lt;p&gt;
For example, ExoPlayer and Media2 both contain UI components, and MediaCompat and Media2 contain classes for handling media sessions.
&lt;/p&gt;
&lt;p&gt;
It can be challenging to decide which library to use for a given use case, and objects from different libraries are often not compatible, requiring adapters or connecting code. Media3 removes these challenges by providing a single set of libraries which work well together.
&lt;/p&gt;
&lt;p&gt;
 To create Media3 we: 
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Identified the common areas of functionality in our existing media libraries, including UI, playback and media session handling. 

&lt;li&gt;Refined and merged the best parts.

&lt;li&gt;Created a common Player interface for all "player-like" objects (more on this later). 
&lt;/ul&gt;
 &lt;br&gt;
  
  
&lt;h2&gt;What's in the box&lt;/h2&gt;

&lt;p&gt;
Media3 contains many libraries. The ones most relevant for simple media playback are shown below.  
&lt;/p&gt;


&lt;br&gt;







&lt;div align="left" dir="ltr" style="margin-left:0pt;"&gt;
    &lt;table style="border:none;border-collapse:collapse;"&gt;
        &lt;tbody&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Library name&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Purpose&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Useful classes for playback&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;media3-exoplayer&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Objects for playing video and audio, provided by ExoPlayer.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;An&amp;nbsp;&lt;/span&gt;&lt;span style="font-size:11pt;font-family:Consolas,sans-serif;color:#0d904f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;ExoPlayer&lt;/span&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;&amp;nbsp;can be used for many playback use cases. Create one using an&amp;nbsp;&lt;/span&gt;&lt;span style="font-size:11pt;font-family:Consolas,sans-serif;color:#0d904f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;ExoPlayer.Builder&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;media3-ui&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Views for displaying media playback controls, content and metadata.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:Consolas,sans-serif;color:#0d904f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;StyledPlayerView&lt;/span&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;&amp;nbsp;displays audio and video content from a Player&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;media3-session&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Objects for creating and interacting with a&amp;nbsp;&lt;/span&gt;&lt;a href="https://developer.android.com/guide/topics/media-apps/working-with-a-media-session" style="text-decoration:none;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:underline;-webkit-text-decoration-skip:none;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;media session&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;.&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:Consolas,sans-serif;color:#0d904f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;MediaSession&lt;/span&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;&amp;nbsp;for advertising what you&amp;apos;re playing&lt;/span&gt;&lt;/p&gt;
                    &lt;p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:Consolas,sans-serif;color:#0d904f;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;MediaLibraryService&lt;/span&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#434343;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;&amp;nbsp;for advertising your content library&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;



&lt;br&gt;
&lt;br&gt;





&lt;h2&gt;A common Player&lt;/h2&gt;

&lt;p&gt;
Our existing media APIs have a lot of objects which accept playback commands, like "play," "pause," and "skip". Identifying these "player-like" objects and ensuring that they implement a &lt;a href="https://goo.gle/media3-player-interface"&gt;common Player interface&lt;/a&gt; was one of the biggest undertakings in the development of Media3. 
&lt;/p&gt;
&lt;p&gt;
We've updated, enhanced, and streamlined the &lt;a href="https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/Player.html"&gt;Player interface from ExoPlayer&lt;/a&gt; to act as the common &lt;code&gt;Player&lt;/code&gt; interface for Media3. 
&lt;/p&gt;
&lt;p&gt;
Classes such as &lt;code&gt;MediaController&lt;/code&gt; and &lt;code&gt;MediaSession&lt;/code&gt; that previously contained references to other "player-like" objects have been updated to reference the new player.
&lt;/p&gt;
&lt;p&gt;
This is useful when communicating with UI components. Both &lt;code&gt;ExoPlayer&lt;/code&gt; and &lt;code&gt;MediaController&lt;/code&gt; now implement &lt;code&gt;Player&lt;/code&gt;, so either one of them can be used to communicate with &lt;code&gt;StyledPlayerView&lt;/code&gt; or other UI components.
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-gD63N6nqkd4/YXiJDujkZwI/AAAAAAAARI0/tFJEAtZTQWQ3o1i40TCw4odibtIC0eU2ACLcBGAsYHQ/s0/unnamed%2B%25282%2529.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Diagram showing how MediaController and ExoPlayer implement the Player interface and can be used to communicate with UI components, like StyledPlayerView" id=imgFull border="0" src="https://1.bp.blogspot.com/-gD63N6nqkd4/YXiJDujkZwI/AAAAAAAARI0/tFJEAtZTQWQ3o1i40TCw4odibtIC0eU2ACLcBGAsYHQ/s0/unnamed%2B%25282%2529.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
&lt;p id="imgCaption"&gt;Diagram showing how MediaController and ExoPlayer implement the Player interface and can be used to communicate with UI components, like StyledPlayerView&lt;/p&gt;

&lt;br&gt;
&lt;h2&gt;Simplified architecture&lt;/h2&gt;

&lt;p&gt;
Using this &lt;code&gt;Player&lt;/code&gt; interface avoids the need for connecting components, allowing for less code and a simpler app architecture.  
&lt;/p&gt;
&lt;p&gt;
In particular, this makes working with media sessions easier. Instead of using the &lt;code&gt;&lt;a href="https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.html"&gt;MediaSessionConnector extension&lt;/a&gt;&lt;/code&gt;, or writing your own "player to media session" connector, you can create a &lt;code&gt;MediaSession&lt;/code&gt; using a &lt;code&gt;Player&lt;/code&gt;, like this: 




&lt;pre class="prettyprint"&gt;player = ExoPlayer.Builder(context).build()
session = MediaSession.Builder(context, player).build()&lt;/pre&gt;


&lt;p&gt;
Now your media session will automatically reflect the state of your player, and any commands sent to your media session will be automatically forwarded to your player. All that in just two lines of code! 
&lt;/p&gt;

&lt;h2&gt;Providing a content library&lt;/h2&gt;

&lt;p&gt;
If your app needs to expose its content library to other apps, like Android Auto, use &lt;code&gt;MediaLibraryService&lt;/code&gt;, rather than a &lt;code&gt;MediaBrowserService&lt;/code&gt; from MediaCompat. 
&lt;/p&gt;
&lt;p&gt;
You'll then create a &lt;code&gt;MediaLibrarySession&lt;/code&gt; and implement a &lt;code&gt;MediaLibrarySessionCallback&lt;/code&gt; whose methods will be called by the browsing app to obtain your content tree. 
&lt;/p&gt;


&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-GVokmUxFng8/YXiJs28h1eI/AAAAAAAARI8/_nEZaMsblI0VsgeV5ejQhRYIjtjrefxTgCLcBGAsYHQ/s0/unnamed%2B%25283%2529.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Diagram showing how MediaLibraryService can be used to expose a content library" id=imgFull border="0" src=" https://1.bp.blogspot.com/-GVokmUxFng8/YXiJs28h1eI/AAAAAAAARI8/_nEZaMsblI0VsgeV5ejQhRYIjtjrefxTgCLcBGAsYHQ/s0/unnamed%2B%25283%2529.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt; &lt;p id="imgCaption"&gt;Diagram showing how MediaLibraryService can be used to expose a content library&lt;/p&gt;

&lt;br&gt;
&lt;h2&gt;Easier updates&lt;/h2&gt;

&lt;p&gt;
One of the key benefits of using Jetpack libraries is API stability. If you use symbols that are part of the stable API, you generally don't need to update your code to use a new release of that library within the same major version. 
&lt;/p&gt;
&lt;p&gt;
In Media3, some of the most commonly used objects are marked as stable, including the Player API and media session classes.
&lt;/p&gt;
&lt;p&gt;
Most of ExoPlayer's API surface is marked as unstable.
&lt;/p&gt;
  
  
  
  &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-u21B19geCQU/YXiKO396KcI/AAAAAAAARJE/MWTC7uRlUesPjMBmmCmwTWrtF-5BeJa-gCLcBGAsYHQ/s0/unnamed%2B%25284%2529.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Diagram showing stable and unstable areas of the Media3 API" id=imgFull border="0" src=" https://1.bp.blogspot.com/-u21B19geCQU/YXiKO396KcI/AAAAAAAARJE/MWTC7uRlUesPjMBmmCmwTWrtF-5BeJa-gCLcBGAsYHQ/s0/unnamed%2B%25284%2529.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt; &lt;p id="imgCaption"&gt;Diagram showing stable and unstable areas of the Media3 API&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;
To use an unstable method or class you'll need to add the &lt;code&gt;OptIn&lt;/code&gt; annotation before using it. 
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;@androidx.annotation.OptIn(UnstableApi::class)
private fun initializeExoPlayer() {
  // ...
}&lt;/pre&gt;


&lt;p&gt;
If your project uses a lot of unstable methods it may be more convenient to add this suppression to your project-wide lint.xml.  
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;&amp;lt;issue id="UnsafeOptInUsageError"&gt;
  &amp;lt;ignore
      regexp='\(markerClass = androidx\.media3\.UnstableApi\.class\)'/&gt;
&amp;lt;/issue&gt;&lt;/pre&gt;


&lt;p&gt;
Just because part of an API is marked as unstable doesn't mean that the API is unreliable or that you shouldn't use it - it's just a way of informing you that it might change in the future. 
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;

&lt;p&gt;
Media3 is released today in alpha and we'd love you to try it out. 
&lt;/p&gt;
&lt;p&gt;
One of the best ways to do this is to check out &lt;a href="https://github.com/androidx/media/tree/main/demos/session"&gt;the demo app&lt;/a&gt;, which shows how to play video and audio, and integrate with a media session. 
&lt;/p&gt;
&lt;p&gt;
You can add the Media3 dependencies to your app by adding the following artifacts to your &lt;code&gt;build.gradle&lt;/code&gt;: 
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;implementation 'androidx.media3:media3-ui:1.0.0-alpha01'
implementation 'androidx.media3:media3-exoplayer:1.0.0-alpha01'
implementation 'androidx.media3:media3-session:1.0.0-alpha01'&lt;/pre&gt;


&lt;p&gt;
If you have feedback or run into problems, please &lt;a href="https://github.com/androidx/media/issues"&gt;file an issue&lt;/a&gt;. We'd really love to hear from you. 
&lt;/p&gt;
&lt;p&gt;
For more information check out the “&lt;a href="https://youtu.be/sTIBDcyCmCg"&gt;What's next for AndroidX Media and ExoPlayer&lt;/a&gt;” talk from Android Dev Summit 2021 and the &lt;a href="https://developer.android.com/jetpack/androidx/releases/media3"&gt;Media3 release notes&lt;/a&gt;.
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/sTIBDcyCmCg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Q7c1-W73ygc:c5F2zFnVMNw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Q7c1-W73ygc:c5F2zFnVMNw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Q7c1-W73ygc:c5F2zFnVMNw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2402420310450195025" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/2402420310450195025" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/jetpack-media3.html" title="Introducing Jetpack Media3" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-ozOGH_S7zRw/YXmIexkIUqI/AAAAAAAARJw/QjXHsKGzUhAUSy9ocwFBnyckWAOOWcplgCLcBGAsYHQ/s72-c/Introducing-Media3-SOCIAL%2B%25282%2529.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-3883959694003467813</id><published>2021-10-27T10:31:00.001-07:00</published><updated>2021-10-27T10:31:00.159-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="#androiddevsummit" /><category scheme="http://www.blogger.com/atom/ns#" term="Android" /><category scheme="http://www.blogger.com/atom/ns#" term="Compose" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="wear" /><category scheme="http://www.blogger.com/atom/ns#" term="Wear OS" /><title type="text">Watch out for Wear OS at Android Dev Summit 2021</title><content type="html">&lt;meta content="https://1.bp.blogspot.com/-lmq7cPd1pu0/YXgoy_6Z9sI/AAAAAAAARGY/5PKv_5hhdBIxN2dXz2wBCkoxsXOdxKAYACLcBGAsYHQ/s0/Android-wear-os-for-ads-02.png" name="twitter:image"&gt;&lt;/meta&gt;
&lt;img src="https://1.bp.blogspot.com/-lmq7cPd1pu0/YXgoy_6Z9sI/AAAAAAAARGY/5PKv_5hhdBIxN2dXz2wBCkoxsXOdxKAYACLcBGAsYHQ/s0/Android-wear-os-for-ads-02.png" style="display: none;" /&gt;

&lt;p&gt;&lt;em&gt;Posted by Jeremy Walker, Developer Relations Engineer&lt;/em&gt;&lt;/p&gt;

  
&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-MYSbSbBML2A/YXgpMOexllI/AAAAAAAARGg/PCX20jqCM0UZstEHhDsw_9h_QFt9NPqbgCLcBGAsYHQ/s0/Android-wear-os-for-ads-header.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="image of 4 watch faces against dark blue background." id=imgFull border="0" src=" https://1.bp.blogspot.com/-MYSbSbBML2A/YXgpMOexllI/AAAAAAAARGg/PCX20jqCM0UZstEHhDsw_9h_QFt9NPqbgCLcBGAsYHQ/s0/Android-wear-os-for-ads-header.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

&lt;p&gt;
This year’s &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Dev Summit&lt;/a&gt; had many exciting announcements for Android developers, including some major updates for the Wear OS platform. At Google I/O, we announced the launch of the new Wear OS. Since then, Wear OS Powered by Samsung has launched on the Galaxy Watch4 series. &lt;a href="https://play.google.com/store/apps/collection/cluster?clp=SjkKJQofcHJvbW90aW9uX3dlYXJfb3NfZmVhdHVyZWRfYXBwcxBKGAMSDEFORFJPSURfV0VBUjoCCAQ%3D:S:ANO1ljIliAw&amp;gsr=CjtKOQolCh9wcm9tb3Rpb25fd2Vhcl9vc19mZWF0dXJlZF9hcHBzEEoYAxIMQU5EUk9JRF9XRUFSOgIIBA%3D%3D:S:ANO1ljJyTMQ"&gt;Many developers such as Strava, Spotify, and Calm&lt;/a&gt; have already created helpful experiences for the latest version of Wear OS, and we’re looking forward to seeing what new experiences developers will help bring to the watch. To learn more and create better apps for the wrist, read more about the updates to our APIs, design tools, and the Play store.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Compose for Wear OS&lt;/h2&gt;

&lt;p&gt;
The Jetpack Compose library &lt;a href="https://developer.android.com/jetpack/compose/why-adopt#less-code"&gt;simplifies and accelerates UI development&lt;/a&gt;, and we’re bringing Compose support to Wear OS. You can design your app with familiar UI components, adapted for the watch. These components include Material You, so you can create beautiful apps with less code. 
&lt;/p&gt;
&lt;p&gt;
Compose for Wear OS is now in developer preview. To learn more and get started:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Watch the &lt;a href="https://youtu.be/B7D3G6tC9n0"&gt;Compose for Wear OS talk&lt;/a&gt;

&lt;li&gt;Read an &lt;a href="https://android-developers.googleblog.com/2021/10/compose-for-wear-os-now-in-developer.html"&gt;overview of Compose for Wear OS&lt;/a&gt; for more details

&lt;li&gt;Create a beginner app with our &lt;a href="https://developer.android.com/training/wearables/compose-setup"&gt;quick start guide&lt;/a&gt;

&lt;li&gt;Very simple and complex &lt;a href="https://github.com/android/wear-os-samples#readme "&gt;samples on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Try it out and share your &lt;a href="https://issuetracker.google.com/issues/new?component=1077552&amp;template=1598429&amp;pli=1"&gt;feedback here&lt;/a&gt; or &lt;a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up"&gt;join the #compose-wear channel on the Jetbrains Slack&lt;/a&gt; and let us know there! Make sure you do it before we finalize APIs during beta! 
&lt;/p&gt;

&lt;center&gt;&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/B7D3G6tC9n0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;


&lt;br&gt;
&lt;h2&gt;Watch Face Studio&lt;/h2&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-h1rAtDyoLVY/YXgpzjmi3RI/AAAAAAAARGo/Z46ZQLvG7J45-LLsYmxa69qlWv2n5uHfQCLcBGAsYHQ/s0/image3.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="image of clock face in editing software" id=imgFull border="0" src="https://1.bp.blogspot.com/-h1rAtDyoLVY/YXgpzjmi3RI/AAAAAAAARGo/Z46ZQLvG7J45-LLsYmxa69qlWv2n5uHfQCLcBGAsYHQ/s0/image3.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

&lt;p&gt;
Watch faces are one of the most visible ways that users can express themselves on their smartwatches. Creating a watch face is a great way to showcase your brand for users on Wear OS. We’ve partnered with Samsung to provide better tools for watch face creation and make it easier to design watch faces for the Wear OS ecosystem.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://developer.android.com/training/wearables/wfs"&gt;Watch Face Studio&lt;/a&gt; is a design tool created by Samsung that allows you to produce and distribute your own watch faces without any coding. It includes includes intuitive graphics tools to allow you to easily design watch faces. You can create watch faces for your personal use, or upload them in Google Play Console to share with your users on Wear OS devices that support API level 28 and above.
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Library updates&lt;/h2&gt;

&lt;p&gt;
We recently released a number of &lt;a href="https://android-developers.googleblog.com/2021/09/wear-os-jetpack-libraries-now-in-stable.html"&gt;Android Jetpack Wear OS libraries&lt;/a&gt; to help you follow best practices, reduce boilerplate, and create performant, glanceable experiences for your users. 
&lt;/p&gt;
&lt;p&gt;
Tiles are now enabled for most devices in the market, providing predictable, glanceable access to information and quick actions. The API is now in beta, &lt;a href="https://developer.android.com/training/articles/wear-tiles"&gt;check it out!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For developers who want more fine-grain control of their watch faces (outside of Watch Face Studio), we've launched the new &lt;a href="https://developer.android.com/jetpack/androidx/releases/wear-watchface"&gt;Jetpack Watch Face APIs&lt;/a&gt; beta built from the ground up in Kotlin.
&lt;/p&gt;
&lt;p&gt;
The new API offers a number of new features:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;Watch face styling which persists across both the watch and phone (no need for your own database).

&lt;li&gt;Support a WYSIWYG watch face configuration UI on the phone. 

&lt;li&gt;Smaller, separate libraries (only include what you need).

&lt;li&gt;Battery improvements by encouraging good battery usage patterns out of the box; for example, reducing the interactive frame rate when battery is low.

&lt;li&gt;New Screenshot APIs so users can see their watch face changes in real time.

&lt;li&gt;And many more...
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This is a great time to start moving from the older Watch Face Support Library to this new version. 
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Play Store updates&lt;/h2&gt;

&lt;p&gt;
We’re making it easier for people to discover your Wear OS apps in the Google Play Store. Earlier this year, we enabled searching for watch faces and made it easier for people to find your apps in the Wear category. We also launched the capability for people to download apps onto their watches directly from the mobile Play Store. You can read more about these changes &lt;a href="https://support.google.com/wearos/thread/117791004/new-features-from-google-play-for-wear-os?hl=en"&gt;here.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We’ve also released &lt;a href="https://android-developers.googleblog.com/2021/09/wear-os-3-update.html"&gt;updated Wear OS quality guidelines&lt;/a&gt; to help you meet your users’ expectations, as well as &lt;a href="https://support.google.com/googleplay/android-developer/answer/9866151#zippy=%2Cscreenshots"&gt;new screenshot guidelines&lt;/a&gt; to help your users have a better understanding of what your app will look like. To help people better understand how your app would work on their device in their location, we will be launching &lt;a href="https://android-developers.googleblog.com/2021/08/making-ratings-and-reviews-better-for.html"&gt;form factor and location specific ratings&lt;/a&gt; in 2022. 
&lt;/p&gt;
&lt;p&gt;
To learn more about developing for Wear OS, check out the &lt;a href="https://developer.android.com/wear"&gt;developer website&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=6fxb8LOUrI8:jZDO8UOARRA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=6fxb8LOUrI8:jZDO8UOARRA:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=6fxb8LOUrI8:jZDO8UOARRA:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3883959694003467813" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/3883959694003467813" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/wearos-at-ads-21.html" title="Watch out for Wear OS at Android Dev Summit 2021" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-lmq7cPd1pu0/YXgoy_6Z9sI/AAAAAAAARGY/5PKv_5hhdBIxN2dXz2wBCkoxsXOdxKAYACLcBGAsYHQ/s72-c/Android-wear-os-for-ads-02.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-5033940961949386064</id><published>2021-10-27T10:30:00.030-07:00</published><updated>2021-10-27T10:30:00.146-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="emulator" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="GMD" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Sharding" /><category scheme="http://www.blogger.com/atom/ns#" term="Testing" /><category scheme="http://www.blogger.com/atom/ns#" term="UTP" /><title type="text">What's New in Scalable Automated Testing</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-SUftkKjUMo8/YXb80uU31kI/AAAAAAAARFU/poJP29P80aYsrF-zwxz7fPyg0Dr2RTdGACLcBGAsYHQ/s0/202542556__35253097__148018.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-SUftkKjUMo8/YXb80uU31kI/AAAAAAAARFU/poJP29P80aYsrF-zwxz7fPyg0Dr2RTdGACLcBGAsYHQ/s0/202542556__35253097__148018.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Arif Sukoco, Android Studio Engineering Manager (&lt;a href="https://twitter.com/GoogArif"&gt;@GoogArif&lt;/a&gt;) &amp; Jolanda Verhoef, Developer Relations Engineer (&lt;a href="https://twitter.com/Lojanda"&gt;@Lojanda&lt;/a&gt;)&lt;/em&gt;&lt;p&gt;


&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-Er0Lr2QS4Vw/YXc5Q1ziNVI/AAAAAAAARGQ/H_fejuU5TFIFDa_lXuxYGxROnwWZI3yYgCLcBGAsYHQ/s0/Android-dev-summit-whats-new-in-scalable-automated-testing-header.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="dark blue background with three different devices showing the same screen: phone , tablet, and watch" border="0" data-original-height="968" data-original-width="3249" src="https://1.bp.blogspot.com/-Er0Lr2QS4Vw/YXc5Q1ziNVI/AAAAAAAARGQ/H_fejuU5TFIFDa_lXuxYGxROnwWZI3yYgCLcBGAsYHQ/s0/Android-dev-summit-whats-new-in-scalable-automated-testing-header.png"/&gt;&lt;/a&gt;&lt;/div&gt;
  
&lt;p&gt;
We know it can be challenging to run Android instrumented tests at scale, especially when you have a big test suite that you want to run against a variety of Android device profiles.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://events.google.com/io/session/1e17f23c-5a7d-4209-9b30-1cfcc81835fc?lng=en"&gt;At I/O 2021&lt;/a&gt; we first introduced &lt;a href="https://developer.android.com/studio/preview/features#bumblebee-testing"&gt;Unified Test Platform&lt;/a&gt; or UTP. UTP allows us to build testing features for Android instrumented tests such as running instrumented tests from Android Studio through Gradle, and Gradle Managed Devices (GMD). GMD allows you to define a set of virtual devices in &lt;code&gt;build.gradle&lt;/code&gt;, and let Gradle manage them by spinning them up before each instrumented test run, and tearing them down afterwards. In the latest version of &lt;a href="https://developer.android.com/studio/preview"&gt;Android Gradle Plugin 7.2.0&lt;/a&gt;, we are introducing more features on top of GMD to help scale tests across multiple Android virtual devices in parallel.
&lt;/p&gt;


&lt;br&gt;
&lt;h3&gt;Sharding&lt;/h3&gt;


&lt;p&gt;
The first feature we are introducing is sharding on top of GMD. Sharding is a common technique  used in test runners where the test runner splits up the tests into multiple groups, or shards, and runs them in parallel. With the ability to spin up multiple emulator instances in GMD, sharding is an obvious next step to make GMD a more scalable solution for large test suites.
&lt;/p&gt;
&lt;p&gt;
When you enable sharding for GMD and specify the desired number of shards, it will automatically spin up that number of managed devices for you. For example, the sample below configures a Gradle Managed Devices called &lt;code&gt;pixel2&lt;/code&gt; in your &lt;code&gt;build.gradle&lt;/code&gt;:
&lt;/p&gt;

&lt;br&gt;

&lt;pre&gt;&lt;code&gt;android {
  testOptions {
    devices {
      pixel2 (com.android.build.api.dsl.ManagedVirtualDevice) {
        device = "Pixel 2"
        apiLevel = 30
        systemImageSource = "google"
        abi = "x86"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;br&gt;

&lt;p&gt;
Let’s say you have 4 instrumented tests in your test suite. You can pass an experimental property to Gradle to specify how many shards you want to divide your tests in. The following command splits the test run into two shards:
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-elOKSsYWH6E/YXbsor0luSI/AAAAAAAAREs/572c2geb9LsFgp-PzCUz9F5nMe5KHBiVwCLcBGAsYHQ/s0/image1.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="class com.example.myapplicationExampleInstrumentedTests" border="0" data-original-height="918" data-original-width="1582" src="https://1.bp.blogspot.com/-elOKSsYWH6E/YXbsor0luSI/AAAAAAAAREs/572c2geb9LsFgp-PzCUz9F5nMe5KHBiVwCLcBGAsYHQ/s0/image1.png"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;br&gt;

&lt;pre&gt; &lt;code&gt;./gradlew -Pandroid.experimental.androidTest.numManagedDeviceShards=2 pixel2DebugAndroidTest
&lt;/code&gt;&lt;/pre&gt;

&lt;br&gt;

&lt;p&gt;
Invoking Gradle this way will tell GMD to spin up 2 instances of &lt;code&gt;pixel2&lt;/code&gt;, and split the running of your 4 instrumented tests between those 2 emulated devices. In the Gradle output, you will see ​​&lt;code&gt;"Starting 2 tests on pixel2_0"&lt;/code&gt;, and  &lt;code&gt;"Starting 2 tests on pixel2_1"&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As seen in this example, sharding through GMD spins up multiple identical virtual devices. If you apply sharding and have more than one device defined in &lt;code&gt;build.gradle&lt;/code&gt;, GMD will spin up multiple instances of each virtual device.
&lt;/p&gt;
&lt;p&gt;
The HTML format output of your test run report will be generated in &lt;code&gt;app/build/reports/androidTests/managedDevice/pixel2&lt;/code&gt;. This report will contain the combined test results from all the shards.
&lt;/p&gt;
&lt;p&gt;
You can also load the test results from each shard to Android Studio by selecting &lt;em&gt;Run &gt; Import Tests From File&lt;/em&gt; from the menu and loading the protobuf output files &lt;code&gt;app/build/outputs/androidTest-results/managedDevice/pixel2/shard_1/test-result.pb&lt;/code&gt; and &lt;code&gt;app/build/outputs/androidTest-results/managedDevice/pixel2/shard_2/test-result.pb.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It’s worth remembering that when sharding your tests, there is always a tradeoff between the extra resources and time required to spin up additional emulator instances, and the savings in test running time. As such, it is more useful when you have larger test suites to run.
&lt;/p&gt;
&lt;p&gt;
Also please note that currently GMD doesn’t support running tests for test-only modules yet, and there are known flakiness issues when running on cloud hosted CI servers.
&lt;/p&gt;

&lt;br&gt;
&lt;h3&gt;Slimmer Emulator System Images&lt;/h3&gt;


&lt;p&gt;
When running multiple emulator instances at the same time, your limited server’s computing resources could become an issue.
&lt;/p&gt;
&lt;p&gt;
One of the ways to improve this is by slimming down the Android emulator system image to create a new type of device that’s optimized for running automated tests. The Automated Test Device (ATD) system image is designed to consume less CPU and memory by removing components that normally do not affect the running of your app’s instrumented tests, such as the SystemUI, Settings app, bundled apps like Gmail, Google Maps, etc., and some other components. Please read the &lt;a href="http://d.android.com/studio/preview/features#atd-optimizations"&gt;release notes&lt;/a&gt; for more information about the ATD system image.
&lt;/p&gt;
&lt;p&gt;
The ATD system images have hardware rendering disabled by default. This helps with another common source of slow-running test suites. Often, when running instrumented tests on an emulator, access to the host’s GPU for graphics hardware acceleration is not available. In this case, the emulator will choose to use &lt;a href="https://developer.android.com/studio/run/emulator-acceleration#command-gpu"&gt;software graphics acceleration&lt;/a&gt;, which is much more CPU intensive. Nearly all functionalities still work as expected with hardware rendering off, with the notable exception of screenshots. If you need to take screenshots in your test, we recommend taking a look at the new AndroidX Test Screenshot APIs which will dynamically enable hardware rendering in order to take a screenshot. Please take a look at the &lt;a href="https://github.com/android/testing-samples/blob/main/ui/espresso/ScreenshotSample/app/src/androidTest/java/com/example/android/testing/espresso/screenshotsample/ScreenshotTest.kt"&gt;examples&lt;/a&gt; for how to use these APIs.
&lt;/p&gt;
&lt;p&gt;
To use ATD, first make sure you have downloaded the latest version of the Android emulator from the Canary channel (version 30.9.2 or newer). To download this emulator, go to &lt;em&gt;Appearance &amp; Behavior &gt; System Settings &gt; Updates&lt;/em&gt; and set the IDE updates dropdown to “Canary Channel”.
&lt;/p&gt;
&lt;p&gt;
Next, you need to specify an ATD system image in your GMD configuration:
&lt;/p&gt;

&lt;br&gt;

&lt;pre class="prettyprint"&gt;android {
  testOptions {
    devices {
      pixel2 (com.android.build.api.dsl.ManagedVirtualDevice) {
        device = "Pixel 2"
        apiLevel = 30
        systemImageSource = "aosp-atd" // Or "google-atd" if you need
                                       // access to Google APIs
        abi = "x86" // Or "arm64-v8a" if you are on an Apple M1 machine
      }
    }
  }
}&lt;/pre&gt;

&lt;br&gt;

&lt;p&gt;
You can now run tests from the Gradle command line just like you would with GMD as before, including with sharding enabled. The only thing you need to add for now is to let Gradle know you are referring to a system image in the Canary channel.
&lt;/p&gt;

&lt;br&gt;

&lt;pre class="prettyprint"&gt;./gradlew -Pandroid.sdk.channel=3&lt;br&gt;-Pandroid.experimental.androidTest.numManagedDeviceShards=2&lt;br&gt;pixel2DebugAndroidTest
&lt;/pre&gt;

&lt;br&gt;

&lt;p&gt;
Test running time improvement using ATD might vary, depending on your machine configuration. In our tests, comparing ATD and non-ATD system images running on a Linux machine with Intel Xeon CPU and 64GB of RAM, we saw 33% shorter test running time when using ATD, while on a 2020 Macbook Pro with Intel i9 processor and 32GB of RAM, we saw 55% improvement.
&lt;/p&gt;
&lt;p&gt;
We’re really excited about these new features, and we hope they can allow you to better scale out your instrumented tests. Please try them out and &lt;a href="https://issuetracker.google.com/issues?q=componentid:192708"&gt;let us know what you think&lt;/a&gt;!  Follow us -- the Android Studio development team ‐ on &lt;a href="http://www.twitter.com/androidstudio"&gt;Twitter&lt;/a&gt; and on &lt;a href="https://medium.com/androiddevelopers"&gt;Medium&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=IeDiW0FgYRg:M_46cGhgg0g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=IeDiW0FgYRg:M_46cGhgg0g:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=IeDiW0FgYRg:M_46cGhgg0g:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5033940961949386064" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5033940961949386064" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/whats-new-in-scalable-automated-testing.html" title="What's New in Scalable Automated Testing" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-SUftkKjUMo8/YXb80uU31kI/AAAAAAAARFU/poJP29P80aYsrF-zwxz7fPyg0Dr2RTdGACLcBGAsYHQ/s72-c/202542556__35253097__148018.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-5874353544867261779</id><published>2021-10-26T10:10:00.007-07:00</published><updated>2021-10-26T11:11:13.395-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Here’s how to watch the 2021 Android Dev Summit!</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-jdpHa1bqKf4/YXg2Wyvw6AI/AAAAAAAARHA/naBygxmGKponDEfntu40-94SVkyUGCY-ACLcBGAsYHQ/s0/Screen%2BShot%2B2021-10-26%2Bat%2B12.09.34%2BPM.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-jdpHa1bqKf4/YXg2Wyvw6AI/AAAAAAAARHA/naBygxmGKponDEfntu40-94SVkyUGCY-ACLcBGAsYHQ/s0/Screen%2BShot%2B2021-10-26%2Bat%2B12.09.34%2BPM.png"&gt;


&lt;p&gt;&lt;em&gt;Posted by The Android Team&lt;/em&gt;&lt;p&gt;
  

&lt;p&gt;
We’re less than 24 hours away from kicking off the &lt;a href="https://developer.android.com/events/dev-summit"&gt;2021 Android Dev Summit&lt;/a&gt;, broadcasting live online on October 27 &amp; 28. The summit kicks off on October 27 at 10AM PDT with a 50-minute technical keynote, The Android Show. You can tune in at &lt;a href="https://developer.android.com/events/dev-summit"&gt;developer.android.com/dev-summit&lt;/a&gt;, or watch on &lt;a href="https://www.youtube.com/c/AndroidDevelopers"&gt;YouTube&lt;/a&gt;. 
&lt;/p&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/RS6By_pE7uo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
After the show, we’ll be &lt;a href="https://developer.android.com/events/dev-summit/technical-talks"&gt;posting 30+ technical sessions to the site&lt;/a&gt; as well as &lt;a href="https://developer.android.com/events/dev-summit/technical-talks"&gt;YouTube&lt;/a&gt; for you to watch at your own pace, from Material You in Jetpack Compose to Kotlin Flows in practice. 
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Two days of live, technical Android content&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Over the two day event, we have a number of ways for you to tune in and hear your favorite Android development topics discussed live from the team who built Android. Got questions about Modern Android Development, Large Screens, or Material You? Ask them on Twitter now using &lt;a href="https://twitter.com/hashtag/AskAndroid"&gt;#AskAndroid&lt;/a&gt; to get them answered live on the air. We’ll also host live Android Code-Alongs. Tune in to watch Android experts as they code, tackle programming challenges, and answer your questions live across Jetpack Compose and Compose for Wear OS.
&lt;/p&gt;

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-QtqoI8BQef4/YXhEkghI1bI/AAAAAAAARHI/G-ERK7klDG4zTkso0vO_uu7emFWfY_l8ACLcBGAsYHQ/s0/livestream%2B1.png" style="display: block; text-align: center; "&gt;&lt;img style="width:100%" alt="screenshot of conference agenda" border="0" data-original-height="932" data-original-width="3068" src="https://1.bp.blogspot.com/-QtqoI8BQef4/YXhEkghI1bI/AAAAAAAARHI/G-ERK7klDG4zTkso0vO_uu7emFWfY_l8ACLcBGAsYHQ/s0/livestream%2B1.png"/&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;
For the full agenda with timings, check out the &lt;a href="https://developer.android.com/dev-summit"&gt;Android Dev Summit page&lt;/a&gt;. And of course, don’t forget: if you run into the bugs of chaos before then, let them know that together with &lt;a href="http://goo.gle/ads21"&gt;Team Jetpack&lt;/a&gt;, we’re coming for them at Android Dev Summit…
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rd1xXyC2Zj8:7N0mjSY2Jpw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=rd1xXyC2Zj8:7N0mjSY2Jpw:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=rd1xXyC2Zj8:7N0mjSY2Jpw:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5874353544867261779" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/5874353544867261779" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/how-to-watch-android-dev-2021.html" title="Here’s how to watch the 2021 Android Dev Summit!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-jdpHa1bqKf4/YXg2Wyvw6AI/AAAAAAAARHA/naBygxmGKponDEfntu40-94SVkyUGCY-ACLcBGAsYHQ/s72-c/Screen%2BShot%2B2021-10-26%2Bat%2B12.09.34%2BPM.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-796915559691885823</id><published>2021-10-21T09:01:00.006-07:00</published><updated>2021-10-21T09:35:05.840-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Evolving our business model to address developer needs</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-Y6nEbWgmiHc/YXGAGmB3RoI/AAAAAAAAREg/er5ZPfiV85UN-sZCQPSmfoCIBHWYiSv6gCLcBGAsYHQ/s0/Static%2BGraphic%2B-%2BTwitter-100.jpg"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-Y6nEbWgmiHc/YXGAGmB3RoI/AAAAAAAAREg/er5ZPfiV85UN-sZCQPSmfoCIBHWYiSv6gCLcBGAsYHQ/s0/Static%2BGraphic%2B-%2BTwitter-100.jpg"&gt;

&lt;p&gt;&lt;em&gt;Posted by Sameer Samat, Vice President, Product Management&lt;/em&gt;&lt;p&gt;

&lt;p&gt;
When we started Android and Google Play more than a decade ago, we made a bet that a free and open mobile ecosystem could compete with the proprietary walled gardens that dominated the industry. It wasn’t yet clear what kinds of businesses would move to mobile or what apps would be successful. To keep things simple, we went with an easy-to-understand business model: The vast majority of developers could distribute their apps on Google Play for free (currently 97% do so at no charge). For the developers who offered a paid app or sold in-app digital goods (currently just 3% of developers), the flat service fee was 30%. This model helped apps to become one of the fastest-growing software segments. And instead of charging licensing fees for our OS, our service fee allowed us to continually invest in Android and Play while making them available for free to device makers all over the world.
&lt;/p&gt;
&lt;p&gt;
The creativity and innovation from developers around the world spurred amazing new app experiences we could have never imagined when we first introduced Android. As the ecosystem evolved, a wider range of business models emerged to support these different types of apps. We've made important changes along the way, including moving beyond a “one size fits all” service fee model to ensure all types of businesses can be successful. Instead of a single service fee, we now have multiple programs designed to support and encourage our diverse app ecosystem.
&lt;/p&gt;
&lt;p&gt;
The result is that &lt;strong&gt;99% of developers qualify for a service fee of 15% or less&lt;/strong&gt;. And after learning from and listening to developers across many industries and regions, including developers like Anghami, AWA, Bumble, Calm, Duolingo, KADOKAWA, KKBOX, Picsart, and Smule, we're announcing additional changes to further support our ecosystem of partners and help them build sustainable businesses, and ensure Play continues to lead in the mobile app ecosystem.
&lt;/p&gt;
&lt;h2&gt;Decreasing service fees on subscriptions to 15% &lt;/h2&gt;


&lt;p&gt;
Digital subscriptions have become one of the fastest growing models for developers but we know that subscription businesses face specific challenges in customer acquisition and retention. We’ve worked with our partners in dating, fitness, education and other sectors to understand the nuances of their businesses. Our current service fee drops from 30% to 15% after 12 months of a recurring subscription. But we’ve heard that customer churn makes it challenging for subscription businesses to benefit from that reduced rate. So, we’re simplifying things to ensure they can.  
&lt;/p&gt;
&lt;p&gt;
To help support the specific needs of developers offering subscriptions,&lt;strong&gt; &lt;/strong&gt;starting on January 1, 2022,&lt;strong&gt; we're decreasing the service fee for all subscriptions on Google Play from 30% to 15%, starting from day one. &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
For developers offering subscriptions, this means that first-year subscription fees will be cut in half. We’ve already gotten positive feedback from our developer partners on this change:
&lt;/p&gt;
&lt;blockquote&gt;&lt;i&gt;“Our partnership with Google has been a powerful one for our business, helping us to scale and ultimately playing a key role in advancing our mission to empower women globally. The pricing change they’ve announced will allow us to better invest in our products and further empower users to confidently connect online.”&lt;/i&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;– Whitney Wolfe Herd, Founder and CEO, Bumble Inc.&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;i&gt;"Just as every person learns in different ways, every developer is different as well. We're excited to see Google continuing to collaborate with the ecosystem to find models that work for both the developer and platform. This reduction in subscription fees will help Duolingo accelerate our mission of universally available language learning."&lt;/i&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
- Luis von Ahn, Co-Founder and CEO of Duolingo.
&lt;/blockquote&gt;
&lt;h2&gt;Going further with cross platform experiences &lt;/h2&gt;


&lt;p&gt;
While apps remain incredibly important for mobile phones, great services must now also span TVs, cars, watches, tablets and more. And we recognize that developers need to invest in building for those platforms now more than ever.
&lt;/p&gt;
&lt;p&gt;
Earlier this year we launched the Play Media Experience program to encourage video, audio and book developers alike to help grow the Android platform by building amazing cross-device experiences. This helped developers invest in these multi-screen experiences with a service fee as low as 15%.  
&lt;/p&gt;
&lt;p&gt;
Today, we’re also making changes to the service fee in the Media Experience program, to better accommodate differences in these categories. Ebooks and on-demand music streaming services, where content costs account for the majority of sales, &lt;strong&gt;will now be eligible for a service fee as low as 10%&lt;/strong&gt;. The new rates recognize industry economics of media content verticals and make Google Play work better for developers and the communities of artists, musicians and authors  they represent. You can go &lt;a href="https://play.google.com/console/about/mediaprogram/"&gt;here&lt;/a&gt; for more information.
&lt;/p&gt;
&lt;p&gt;
We will continue to engage with developers to understand their challenges and opportunities — and how we can best support them in building sustainable businesses. It’s a theme that will be front and center at the &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Developer Summit&lt;/a&gt; on October 27-28, where you’ll hear more about our latest tools, application programming interfaces (APIs) and technologies designed to help developers be more productive and create better apps.
&lt;/p&gt;
&lt;p&gt;
If you’re looking for more information about Google Play and its service fees, we've answered some common questions &lt;a href="https://support.google.com/googleplay/android-developer/answer/11131145#zippy="&gt;here&lt;/a&gt;.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=sjgoIFPlXK0:ARbKHPwvrkU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=sjgoIFPlXK0:ARbKHPwvrkU:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=sjgoIFPlXK0:ARbKHPwvrkU:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/796915559691885823" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/796915559691885823" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/evolving-business-model.html" title="Evolving our business model to address developer needs" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-Y6nEbWgmiHc/YXGAGmB3RoI/AAAAAAAAREg/er5ZPfiV85UN-sZCQPSmfoCIBHWYiSv6gCLcBGAsYHQ/s72-c/Static%2BGraphic%2B-%2BTwitter-100.jpg" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-4544530027837774228</id><published>2021-10-20T16:45:00.002-07:00</published><updated>2021-10-26T11:13:18.441-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Ads" /><category scheme="http://www.blogger.com/atom/ns#" term="androiddevsummit" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Android Devs assemble: help Team Jetpack fight the bugs of chaos at #AndroidDevSummit + agenda now live!</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-kXAxgPlIz54/YW822wIWlUI/AAAAAAAAREI/SxOZU9a2AHUBNz1GCSmSNYx26c_7X7XFACLcBGAsYHQ/s0/Download%2B1200%2Bx%2B675%2Bpx.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-kXAxgPlIz54/YW822wIWlUI/AAAAAAAAREI/SxOZU9a2AHUBNz1GCSmSNYx26c_7X7XFACLcBGAsYHQ/s0/Download%2B1200%2Bx%2B675%2Bpx.png"&gt;


&lt;p&gt;&lt;em&gt;Posted by The Android Team&lt;/em&gt;&lt;p&gt;

  
&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-kXAxgPlIz54/YW822wIWlUI/AAAAAAAAREI/SxOZU9a2AHUBNz1GCSmSNYx26c_7X7XFACLcBGAsYHQ/s0/Download%2B1200%2Bx%2B675%2Bpx.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%"alt="Image shows Jetpack superhero avatar" border="0" data-original-height="675" data-original-width="1200" src="https://1.bp.blogspot.com/-kXAxgPlIz54/YW822wIWlUI/AAAAAAAAREI/SxOZU9a2AHUBNz1GCSmSNYx26c_7X7XFACLcBGAsYHQ/s0/Download%2B1200%2Bx%2B675%2Bpx.png"/&gt;&lt;/a&gt;&lt;/div&gt;
  

&lt;p&gt;
Excited for &lt;a href="https://goo.gle/androiddevsummit"&gt;Android Dev Summit&lt;/a&gt; on October 27-28? Us too! But, before we get there, we need your help. Team Jetpack is in a brutal fight against the bugs of chaos… they are outnumbered and they need you to join their forces, defeat the bugs, and help Android restore order to the universe. Will you answer the call? 
&lt;/p&gt;

&lt;br&gt;

&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/vyc0ccP55UI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;

&lt;p&gt;
Create your own &lt;a href="https://goo.gle/ads21"&gt;Team Jetpack superhero&lt;/a&gt;, with a custom look and feel, and add your own mix of Android coding power boosts to unlock magical superpowers. Once you’re done, you’ll get a digital trading card for your superhero to share on Twitter, and you’ll be all set to join us at #AndroidDevSummit and help restore order to the universe. Go to &lt;a href="https://developer.android.com/events/dev-summit#create-your-team-jetpack-superhero"&gt;goo.gle/ads21&lt;/a&gt; to make yours!
&lt;/p&gt;

&lt;br&gt;
&lt;br&gt;

&lt;h2&gt;#AndroidDevSummit agenda + sessions announced! &lt;/h2&gt;

&lt;p&gt;
We just posted the &lt;a href="https://goo.gle/androiddevsummit"&gt;livestream agenda&lt;/a&gt;, released the full &lt;a href="http://d.android.com/events/dev-summit/technical-talks"&gt;technical talk details&lt;/a&gt;, and added &lt;a href="http://d.android.com/events/dev-summit/speakers"&gt;additional speakers&lt;/a&gt; to the lineup for Android Dev Summit. Take a look and start planning your days. Android Dev Summit kicks off with a 50-minute technical keynote, The Android Show. After the show, we’ll be posting 30+ technical sessions for you to watch at your own pace, from Material You in Jetpack Compose to Kotlin Flows in practice.  
&lt;/p&gt;

&lt;center&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-NdhvAN9MADM/YXhFHUWBTbI/AAAAAAAARHQ/IjYTi78Q31I0WeNSF_VCrLVSsCiqsyXkACLcBGAsYHQ/s0/livestream%2B1.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:95%" alt="Photo of ADS21 session schedule" border="0" data-original-height="932" data-original-width="3068" src="https://1.bp.blogspot.com/-NdhvAN9MADM/YXhFHUWBTbI/AAAAAAAARHQ/IjYTi78Q31I0WeNSF_VCrLVSsCiqsyXkACLcBGAsYHQ/s0/livestream%2B1.png"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/center&gt;


&lt;p&gt;
Over the two day event, we have a number of ways for you to tune in and hear your favorite Android development topics discussed live from the team who built Android. Got questions about Modern Android Development, Large Screens, or Material You? Ask them on Twitter now using #AskAndroid to get them answered live on the air. We’ll also host live Android Code-Alongs. Tune in to watch Android experts as they code, tackle programming challenges, and answer your questions live across Jetpack Compose and Compose for Wear OS.
&lt;/p&gt;
&lt;p&gt;
We can’t wait to connect with you in just over a week! For the full agenda with timings, check out the &lt;a href="https://developer.android.com/dev-summit"&gt;Android Dev Summit page&lt;/a&gt;. And of course, don’t forget: if you run into the bugs of chaos before then, let them know that together with Team Jetpack, we’re coming for them at Android Dev Summit… 
&lt;/p&gt;


&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/-bcBMQSxOqc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=oce6iVEUjd8:99lHmRchWA4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=oce6iVEUjd8:99lHmRchWA4:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=oce6iVEUjd8:99lHmRchWA4:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4544530027837774228" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/4544530027837774228" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/android-devs-assemble.html" title="Android Devs assemble: help Team Jetpack fight the bugs of chaos at #AndroidDevSummit + agenda now live!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-kXAxgPlIz54/YW822wIWlUI/AAAAAAAAREI/SxOZU9a2AHUBNz1GCSmSNYx26c_7X7XFACLcBGAsYHQ/s72-c/Download%2B1200%2Bx%2B675%2Bpx.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7519816583736275857</id><published>2021-10-18T07:05:00.003-07:00</published><updated>2021-10-18T09:50:21.659-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="android developers" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Google Play" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Policies" /><category scheme="http://www.blogger.com/atom/ns#" term="Privacy" /><title type="text">Launching Data safety in Play Console: Elevating Privacy and Security for your users </title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-Zde9ioLE3SY/YWh7qiquXKI/AAAAAAAARCU/m6D-qJJe6QowYPcDWUtb3-YzFGn9xIaUwCLcBGAsYHQ/s0/Android-get-ready-to-sumbit-your-data-safety-secton-social.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-Zde9ioLE3SY/YWh7qiquXKI/AAAAAAAARCU/m6D-qJJe6QowYPcDWUtb3-YzFGn9xIaUwCLcBGAsYHQ/s0/Android-get-ready-to-sumbit-your-data-safety-secton-social.png"&gt;


&lt;p&gt;&lt;em&gt;Posted by Krish Vitaldevara, Director, Product Management&lt;/em&gt;&lt;p&gt;

  
  &lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-Zde9ioLE3SY/YWh7qiquXKI/AAAAAAAARCU/m6D-qJJe6QowYPcDWUtb3-YzFGn9xIaUwCLcBGAsYHQ/s0/Android-get-ready-to-sumbit-your-data-safety-secton-social.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%"  alt="Illustration of a phone with a security symbol" border="0" data-original-height="1024" data-original-width="2048" src="https://1.bp.blogspot.com/-Zde9ioLE3SY/YWh7qiquXKI/AAAAAAAARCU/m6D-qJJe6QowYPcDWUtb3-YzFGn9xIaUwCLcBGAsYHQ/s0/Android-get-ready-to-sumbit-your-data-safety-secton-social.png"/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;
We know that a big part of feeling safe online is having control over your data. That’s why every day we’re committed to empowering users with &lt;a href="https://security.googleblog.com/2021/04/how-we-fought-bad-apps-and-developers.html"&gt;advanced&lt;/a&gt; &lt;a href="https://www.android.com/safety/"&gt;security and privacy controls&lt;/a&gt; and increased agency with respect to &lt;a href="https://android-developers.googleblog.com/2020/02/safer-location-access.html"&gt;data practices&lt;/a&gt;. With the new &lt;a href="https://android-developers.googleblog.com/2021/07/new-google-play-safety-section.html"&gt;Data safety section&lt;/a&gt;, developers will now have a &lt;strong&gt;transparent&lt;/strong&gt; way to show users if and how they collect, share, and protect user data, before users install an app.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Starting today, we’re rolling out the Data safety form in Google Play Console.&lt;/strong&gt; We’ve also listened to your feedback, so to provide developers with additional guidance, we’re sharing helpful information in our &lt;a href="https://support.google.com/googleplay/android-developer/answer/10787469"&gt;Help Center&lt;/a&gt;, &lt;a href="https://developer.android.com/guide/topics/data/collect-share"&gt;developer guide&lt;/a&gt;, &lt;a href="https://g.co/playacademy/datasafety"&gt;Play Academy course&lt;/a&gt;, and more. Following our common protocols, we'll begin gradual rollout today and expect to expand access to everyone within a couple of weeks.
&lt;/p&gt;


&lt;iframe width="100%" height="315" src="https://www.youtube.com/embed/pNAS_0IcHtM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;br&gt;


&lt;h2&gt;How to submit your app information in Play Console&lt;/h2&gt;

&lt;p&gt;
Starting today, you can go to &lt;a href="https://play.google.com/console/developers/app/app-content/summary"&gt;App content&lt;/a&gt; in your Play Console and look for a new section called “Data safety.” We recommend that you &lt;strong&gt;review the &lt;a href="https://support.google.com/googleplay/android-developer/answer/10787469?hl"&gt;guidance&lt;/a&gt; and submit your form early&lt;/strong&gt; so you can get review feedback and make changes before rejected forms prevent you from publishing new app updates. Developers have told us that early feedback would help them fill out the form correctly before &lt;strong&gt;users see the Data safety section in February 2022. &lt;/strong&gt;The enforcement on apps without approved forms starts April 2022.
&lt;/p&gt;
&lt;p&gt;
We understand that completing the form may require a meaningful amount of work, so we built the product and timeline based on developer feedback to make this process as streamlined as possible. Also, developers have asked for a way to more easily import information when they have multiple apps. Therefore, we’ve added an option for developers to import a pre-populated file. 
&lt;/p&gt;
&lt;br&gt;

&lt;h2&gt;How to get prepared&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;Visit the &lt;a href="https://support.google.com/googleplay/android-developer/answer/10787469"&gt;Help Center&lt;/a&gt; for the latest details, including clarifications are data types and examples.

&lt;li&gt;Use the guide to &lt;a href="https://developer.android.com/guide/topics/data/collect-share"&gt;review how your app collects and shares user data&lt;/a&gt;, including permissions grants and API usage.

&lt;li&gt;Get a walkthrough of how to fill out the form in our &lt;a href="https://g.co/playacademy/datasafety"&gt;Play Academy course&lt;/a&gt;.


&lt;li&gt;Join us at &lt;a href="https://developer.android.com/events/dev-summit"&gt;Android Developer Summit&lt;/a&gt;, Droidcon &lt;a href="https://www.droidcon.com/events/droidcon-berlin-2021/"&gt;Berlin&lt;/a&gt;, and Droidcon &lt;a href="https://www.droidcon.com/events/droidcon-london-2021/"&gt;London&lt;/a&gt; and bring your questions.

&lt;li&gt;Review the policy requirements on our &lt;a href="https://support.google.com/googleplay/android-developer/answer/10144311?hl=en"&gt;Policy Center&lt;/a&gt; and watch the &lt;a href="https://www.youtube.com/watch?v=FhtKIZPfZMs&amp;t=4s"&gt;July PolicyBytes&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;


&lt;h2&gt;What your users will see in your app's store listing starting February &lt;/h2&gt; 



&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-2vJncaVsZSs/YWnMO3rYVLI/AAAAAAAARDM/sWifeqMyqXkl4tmU_D4lSsNiX_2d7OsagCLcBGAsYHQ/s0/Details_Page_v04.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width: 100%" alt="Image of app store data privacy and security section. Text reads Developers can showcase key privacy and security practices at a glance" border="0" data-original-height="1080" data-original-width="1920" src="https://1.bp.blogspot.com/-2vJncaVsZSs/YWnMO3rYVLI/AAAAAAAARDM/sWifeqMyqXkl4tmU_D4lSsNiX_2d7OsagCLcBGAsYHQ/s0/Details_Page_v04.png"/&gt;&lt;/a&gt;&lt;/div&gt;




&lt;p&gt;
Users will first see the Data safety summary in your store listing. Your app profile will show what data an app collects or shares and highlight safety details, such as whether:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;The app has security practices, like &lt;strong&gt;data encryption in transit&lt;/strong&gt;

&lt;li&gt;The app has committed to follow our &lt;a href="https://play.google.com/console/about/families/"&gt;Families policy&lt;/a&gt;

&lt;li&gt;The app has been &lt;strong&gt;independently reviewed&lt;/strong&gt; for conformance with a global security standard
&lt;/ul&gt;


&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-66LTKYq8G1E/YWnNOLNt4-I/AAAAAAAARDc/xKjQHybD6UE4iGpfKQQyeZpulNmMfgKLACLcBGAsYHQ/s0/final_6169cb7e1f949e01367ca18d_229284.gif" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Image of phone data privacy and security. Text reads Developers can share what their app collects and why, so users can download with confidence" border="0" data-original-height="1080" data-original-width="1920" src="https://1.bp.blogspot.com/-66LTKYq8G1E/YWnNOLNt4-I/AAAAAAAARDc/xKjQHybD6UE4iGpfKQQyeZpulNmMfgKLACLcBGAsYHQ/s0/final_6169cb7e1f949e01367ca18d_229284.gif"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-bnZbv4RGXTA/YWnMuNYyw4I/AAAAAAAARDU/XuBWRjNa7zYh83k8V5XNtxx_9xZgJzG9ACLcBGAsYHQ/s0/Landing_Page_v03.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="GIF of location settings. text reads developers can explain how the data is used" border="0" data-original-height="1080" data-original-width="1920" src="https://1.bp.blogspot.com/-bnZbv4RGXTA/YWnMuNYyw4I/AAAAAAAARDU/XuBWRjNa7zYh83k8V5XNtxx_9xZgJzG9ACLcBGAsYHQ/s0/Landing_Page_v03.png"/&gt;&lt;/a&gt;&lt;/div&gt;





&lt;p&gt;
Users can tap the summary to see more details like:
&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;What type of data is collected and shared, such as location, contacts, personal information (e.g., name, email address), financial information, and more

&lt;li&gt;How the data is used, such as for app functionality, personalization, and more

&lt;li&gt;Whether data collection is optional or required in order to use an app
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Users have shared that seeing this information helps them understand how some apps may handle their information and feel more trusting about certain apps.
&lt;/p&gt;
&lt;br&gt;

&lt;h2&gt;What to expect&lt;/h2&gt;


&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-_uOUJRVGBOA/YWnNn3h01kI/AAAAAAAARDk/YCuU5rAwipA3XqJPZPDjiGl1XWTN6BOdwCLcBGAsYHQ/s0/Timeline.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="Image shows timeline. May '21 pre anouncement. July '21 policy is available. October '21 developers can start declaring information in Google Play Console. Febryary '22 users can start seeing the section on Google Play. April '22 deadline for developers to declare information" border="0" data-original-height="512" data-original-width="1024" src="https://1.bp.blogspot.com/-_uOUJRVGBOA/YWnNn3h01kI/AAAAAAAARDk/YCuU5rAwipA3XqJPZPDjiGl1XWTN6BOdwCLcBGAsYHQ/s0/Timeline.png"/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p id="imgCaption"&gt;Timeline dates subject to change.&lt;/p&gt;
  



&lt;br&gt;
  &lt;p&gt;
You can submit your Data safety form in the Play Console now for early review feedback. You are not required to submit an app update in order to submit your safety profile.
&lt;/p&gt;
&lt;p&gt;
In February 2022, we will launch this feature in the Play store. If your information is approved, your store listing will automatically update with your data safety information. If your information has not been submitted or has been rejected, your users will see “No information available.” 
&lt;/p&gt;


&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-ZtrKR67JhkY/YWnN4E76aWI/AAAAAAAARDs/Ku4dpwNiEBgKGqFHlU2nrg4cAHJWVD1jwCLcBGAsYHQ/s0/No_Info_Page_v03.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img style="width:100%" alt="image of data privacy and security settings" border="0" data-original-height="1080" data-original-width="1920" src="https://1.bp.blogspot.com/-ZtrKR67JhkY/YWnN4E76aWI/AAAAAAAARDs/Ku4dpwNiEBgKGqFHlU2nrg4cAHJWVD1jwCLcBGAsYHQ/s0/No_Info_Page_v03.png"/&gt;&lt;/a&gt;&lt;/div&gt;





&lt;p&gt;
By April 2022, all your apps must have their Data safety section approved. While we want as many apps as possible to be ready for the February 2022 consumer experience, we know that some developers will need more time to assess their apps and coordinate with multiple teams. 
&lt;/p&gt;
&lt;p&gt;
Also by April, all apps must also provide a &lt;a href="https://support.google.com/googleplay/android-developer/answer/9859455#privacy_policy"&gt;privacy policy&lt;/a&gt;. Previously, only apps that collected personal and sensitive user data needed to share a privacy policy. Without an approved section or privacy policy, &lt;strong&gt;your new app submissions or app updates may be rejected. &lt;/strong&gt;Non-compliant apps may face additional enforcement actions in the future.
&lt;/p&gt;
&lt;p&gt;
Thank you for your continued partnership in building this feature alongside us and in making Google Play a safe and trustworthy platform for everyone.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Tuw5WeSrRWw:nTrkJY5C8pc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Tuw5WeSrRWw:nTrkJY5C8pc:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Tuw5WeSrRWw:nTrkJY5C8pc:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7519816583736275857" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7519816583736275857" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/launching-data-safety-in-play-console.html" title="Launching Data safety in Play Console: Elevating Privacy and Security for your users " /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-Zde9ioLE3SY/YWh7qiquXKI/AAAAAAAARCU/m6D-qJJe6QowYPcDWUtb3-YzFGn9xIaUwCLcBGAsYHQ/s72-c/Android-get-ready-to-sumbit-your-data-safety-secton-social.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-7806962673335879804</id><published>2021-10-14T10:01:00.003-07:00</published><updated>2021-10-14T12:49:31.715-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Android Basics" /><category scheme="http://www.blogger.com/atom/ns#" term="Android Basics in Kotlin" /><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="Kotlin" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><title type="text">Announcing the Android Basics in Kotlin Course</title><content type="html">&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-BmlW7k8RhME/YWRvsOes9aI/AAAAAAAAQ_g/FpFS6_new9Y7vdzP7P4RPs_x4WHVi4yxQCLcBGAsYHQ/s0/Android-announcing-android-basics-in-Kotlin-course-16x9.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-BmlW7k8RhME/YWRvsOes9aI/AAAAAAAAQ_g/FpFS6_new9Y7vdzP7P4RPs_x4WHVi4yxQCLcBGAsYHQ/s0/Android-announcing-android-basics-in-Kotlin-course-16x9.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Murat Yener, Developer Advocate&lt;/em&gt;&lt;p&gt;
  
  
 &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-BmlW7k8RhME/YWRvsOes9aI/AAAAAAAAQ_g/FpFS6_new9Y7vdzP7P4RPs_x4WHVi4yxQCLcBGAsYHQ/s0/Android-announcing-android-basics-in-Kotlin-course-16x9.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="image with phone showing the different Android Basics in Kotlin units" id=imgFull border="0" src=" https://1.bp.blogspot.com/-BmlW7k8RhME/YWRvsOes9aI/AAAAAAAAQ_g/FpFS6_new9Y7vdzP7P4RPs_x4WHVi4yxQCLcBGAsYHQ/s0/Android-announcing-android-basics-in-Kotlin-course-16x9.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
  


  &lt;br&gt;
  &lt;p&gt;
We are always looking for ways to make learning Android development accessible for all. In 2020, we announced the launch of &lt;a href="https://android-developers.googleblog.com/2020/07/learn-android-and-kotlin-with-no-experience.html"&gt;Android Basics in Kotlin&lt;/a&gt;, a free self-paced programming course. Since then, over 100,000 beginners have completed their first milestone in the course. 
&lt;/p&gt;
&lt;p&gt;
Android Basics in Kotlin teaches people with no programming experience how to build simple Android apps. Along the way, students learn the fundamentals of programming and the basics of the Kotlin programming language. &lt;strong&gt;Today, we’re excited to share that the final unit has been released, and the full Android Basics in Kotlin course is now available.&lt;/strong&gt; 
&lt;/p&gt;
&lt;p&gt;
This course is organized into units, where each unit is made up of a series of pathways. At the end of each pathway, there is a quiz to assess what you’ve learned so far. If you complete the quiz, you earn a badge that can be saved to your Google Developer Profile.
&lt;/p&gt;
&lt;p&gt;
The course is free for anyone to take. Basic computer literacy and basic math skills are recommended prerequisites, along with access to a computer that can run Android Studio. If you’ve never built an app before but want to learn how, check out the &lt;a href="https://developer.android.com/courses/android-basics-kotlin/course"&gt;Android Basics in Kotlin&lt;/a&gt; course.
&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=tm4XhtCw7eI:FwqLfLvGJhI:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=tm4XhtCw7eI:FwqLfLvGJhI:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=tm4XhtCw7eI:FwqLfLvGJhI:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7806962673335879804" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/7806962673335879804" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/announcing-android-basics-in-kotlin.html" title="Announcing the Android Basics in Kotlin Course" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-BmlW7k8RhME/YWRvsOes9aI/AAAAAAAAQ_g/FpFS6_new9Y7vdzP7P4RPs_x4WHVi4yxQCLcBGAsYHQ/s72-c/Android-announcing-android-basics-in-Kotlin-course-16x9.png" height="72" width="72" /></entry><entry><id>tag:blogger.com,1999:blog-6755709643044947179.post-6639355659687876198</id><published>2021-10-12T11:13:00.002-07:00</published><updated>2021-10-13T12:10:57.235-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Featured" /><category scheme="http://www.blogger.com/atom/ns#" term="latest" /><category scheme="http://www.blogger.com/atom/ns#" term="Platform_Updates" /><title type="text">Compose for Wear OS now in Developer Preview!</title><content type="html">


&lt;meta name="twitter:image" content="https://1.bp.blogspot.com/-RkL3Yokn3XE/YWWmbuX8E7I/AAAAAAAAQ_o/CEmNJ5_mfq0kScxkFGoMpf1BlU5-uBHjACLcBGAsYHQ/s0/Android-compose-for-wear-os-now-in-dev-review-header-dark.png"&gt;
&lt;img style="display:none" src="https://1.bp.blogspot.com/-RkL3Yokn3XE/YWWmbuX8E7I/AAAAAAAAQ_o/CEmNJ5_mfq0kScxkFGoMpf1BlU5-uBHjACLcBGAsYHQ/s0/Android-compose-for-wear-os-now-in-dev-review-header-dark.png"&gt;

&lt;p&gt;&lt;em&gt;Posted by Jeremy Walker,  Developer Relations Engineer&lt;/em&gt;&lt;p&gt;

  
  &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-RkL3Yokn3XE/YWWmbuX8E7I/AAAAAAAAQ_o/CEmNJ5_mfq0kScxkFGoMpf1BlU5-uBHjACLcBGAsYHQ/s0/Android-compose-for-wear-os-now-in-dev-review-header-dark.png" imageanchor="1" &gt;&lt;img style="width:100%" alt="Blue background with illustration of watch" id=imgFull border="0" src="https://1.bp.blogspot.com/-RkL3Yokn3XE/YWWmbuX8E7I/AAAAAAAAQ_o/CEmNJ5_mfq0kScxkFGoMpf1BlU5-uBHjACLcBGAsYHQ/s0/Android-compose-for-wear-os-now-in-dev-review-header-dark.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;
  

  
  
  
&lt;p&gt;
At this year’s Google I/O, we announced we are bringing the best of Jetpack Compose to Wear OS. Well, today,&lt;strong&gt; Compose for Wear OS&lt;/strong&gt; is in Developer Preview after a number of successful alpha releases. 
&lt;/p&gt;
&lt;p&gt;
Compose &lt;a href="https://developer.android.com/jetpack/compose/why-adopt#less-code"&gt;simplifies and accelerates UI development, &lt;/a&gt;and the same is true of Compose for Wear OS, with built-in support for Material You to help you create beautiful apps with less code.
&lt;/p&gt;
&lt;p&gt;
In addition, what you’ve learned building mobile apps with Jetpack Compose translates directly to the Wear OS version. Just like mobile, you’re welcome to start testing it out right away, and we want to incorporate your &lt;a href="https://issuetracker.google.com/issues/new?component=1077552&amp;template=1598429&amp;pli=1"&gt;feedback&lt;/a&gt; into the early iterations of the libraries before the beta release.
&lt;/p&gt;
&lt;p&gt;
This article will review the main composables we've built and point you towards resources to get started using them.
&lt;/p&gt;
&lt;p&gt;
Let's get started!
&lt;/p&gt;

&lt;br&gt;


&lt;h1&gt;Dependencies&lt;/h1&gt;


&lt;p&gt;
Most of the Wear related changes you make will be at the top &lt;a href="https://developer.android.com/jetpack/compose/layering"&gt;architectural layers&lt;/a&gt;.
&lt;/p&gt;


&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-prFJa-FMP5k/YWWqhhU75dI/AAAAAAAAQ_w/9kgz1krIxPMkMDovYoTNVFuBM9W1vMXLgCLcBGAsYHQ/s0/image10.png" imageanchor="1" &gt;&lt;img style="width:50%" alt="Flow chart showing the top two boxes circled in red. Boxes order reads: Material, Foundation, UI, Runtime" id=imgFull border="0" src="https://1.bp.blogspot.com/-prFJa-FMP5k/YWWqhhU75dI/AAAAAAAAQ_w/9kgz1krIxPMkMDovYoTNVFuBM9W1vMXLgCLcBGAsYHQ/s0/image10.png" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;

&lt;br&gt;

&lt;p&gt;
That means many of the dependencies you already use with Jetpack Compose don't change when targeting Wear OS. For example, the UI, Runtime, Compiler, and Animation dependencies will remain the same.
&lt;/p&gt;
&lt;p&gt;
However, you will need to use the proper Wear OS Material, Navigation, and Foundation libraries which are different from the libraries you have used before in your mobile app.
&lt;/p&gt;
&lt;p&gt;
Below is a comparison to help clarify the differences:
&lt;/p&gt;

&lt;br&gt;







&lt;div align="center" dir="ltr" style="margin-left:0pt;"&gt;
    &lt;table style="border:none;border-collapse:collapse;"&gt;
        &lt;tbody&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;background-color:#efefef;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Wear OS Dependency&lt;/span&gt;&lt;/p&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;(androidx.wear.*)&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;background-color:#efefef;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Comparison&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;background-color:#efefef;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;Mobile Dependency&lt;/span&gt;&lt;/p&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:11pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;(androidx.*)&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary" style="text-decoration:none;"&gt;&lt;span style="font-size:10pt;font-family:Roboto,sans-serif;color:#1155cc;background-color:#ffffff;font-weight:400;font-style:normal;font-variant:normal;text-decoration:underline;-webkit-text-decoration-skip:none;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.wear.compose:compose-material&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:italic;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;instead of&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.compose.material:material&amp;nbsp;&lt;/span&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#ff0000;background-color:transparent;font-weight:700;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;₁&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/navigation/package-summary" style="text-decoration:none;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:underline;-webkit-text-decoration-skip:none;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.wear.compose:compose-navigation&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:italic;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;instead of&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.navigation:navigation-compose&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr style="height:0pt;"&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/foundation/package-summary" style="text-decoration:none;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#1155cc;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:underline;-webkit-text-decoration-skip:none;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.wear.compose:compose-foundation&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:700;font-style:italic;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;in addition to&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
                &lt;td style="border-left:solid #000000 1pt;border-right:solid #000000 1pt;border-bottom:solid #000000 1pt;border-top:solid #000000 1pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;"&gt;
                    &lt;p dir="ltr" style="line-height:1.2;text-align: center;margin-top:0pt;margin-bottom:0pt;"&gt;&lt;span style="font-size:10pt;font-family:'Google Sans',sans-serif;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;"&gt;androidx.compose.foundation:foundation&lt;/span&gt;&lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;














&lt;p&gt; &lt;em&gt;&lt;span style="color: tomato"&gt;1.&lt;/span&gt; Developers can continue to use other material related libraries like material ripple and material icons extended with the Wear Compose Material library.&lt;/em&gt;
&lt;/p&gt;

&lt;br&gt;

&lt;p&gt;
While it's technically possible to use the mobile dependencies on Wear OS, we always recommend using the wear-specific versions for the best experience. 
&lt;/p&gt;



&lt;div style="background-color:WhiteSmoke; border-style: solid; border-width: 1px; padding:20px" &gt; &lt;p&gt;Note: We will be adding more wear composables with future releases. If you feel any are missing, &lt;a href="https://issuetracker.google.com/issues/new?component=1077552&amp;template=1598429&amp;pli=1"&gt; please let us know&lt;/a&gt;. &lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;

&lt;p&gt;
Here's an example &lt;code&gt;build.gradle&lt;/code&gt; file:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;// Example project in app/build.gradle file
dependencies {
    // Standard Compose dependencies...

    // Wear specific Compose Dependencies
    // Developer Preview starts with Alpha 07, with new releases coming soon.
    def wear_version = "1.0.0-alpha07"
    implementation "androidx.wear.compose:compose-material:$wear_version"
    implementation "androidx.wear.compose:compose-foundation:$wear_version"

    // For navigation within your app...
    implementation "androidx.wear.compose:compose-navigation:$wear_version"

    // Other dependencies...
}&lt;/pre&gt;


&lt;p&gt;
After you've added the right Wear Material, Foundation, and Navigation dependencies, you are ready to get started.
&lt;/p&gt;

&lt;br&gt;

&lt;h1&gt;Composables&lt;/h1&gt;


&lt;p&gt;
Let's explore some composables you can start using today.
&lt;/p&gt;
&lt;p&gt;
As a general rule, many of the Wear composables that are equivalent to the mobile versions can use the same code. The code for &lt;a href="https://developer.android.com/jetpack/compose/themes"&gt;styling&lt;/a&gt; color, typography, and shapes with &lt;code&gt;&lt;a href="https://developer.android.com/training/wearables/components/theme"&gt;MaterialTheme&lt;/a&gt;&lt;/code&gt; is identical to mobile as well.

&lt;p&gt;
For example, to create a Wear OS button your code looks like this:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;Button(
    modifier = Modifier.size(ButtonDefaults.LargeButtonSize),
    onClick = { /*...*/ },
    enabled = enabledState
) {
    Icon(
        painter = painterResource(id = R.drawable.ic_airplane),
        contentDescription = "phone",
        modifier = Modifier
            .size(24.dp)
            .wrapContentSize(align = Alignment.Center),
    )
}&lt;/pre&gt;


&lt;p&gt;
The code above is very similar to the mobile side, but the library creates a Wear OS optimized version of the button, that is, a button circular in shape and sized by &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/ButtonDefaults#DefaultButtonSize()"&gt;ButtonDefaults&lt;/a&gt;&lt;/code&gt; to follow Wear OS Material Guidelines. 

  
  

&lt;div class="separator" style="clear: both;"&gt;&lt;a href="https://1.bp.blogspot.com/-j0pzQCzFno8/YWWsA0Iyq6I/AAAAAAAAQ_4/9BdGLLdzKKwxN7p4uqE8rQzro6pluRK9ACLcBGAsYHQ/s0/image14.png" style="display: block; padding: 1em 0; text-align: center; "&gt;&lt;img alt="Blue circle with a black airplane logo in the middle" border="0" data-original-height="104" data-original-width="104" src="https://1.bp.blogspot.com/-j0pzQCzFno8/YWWsA0Iyq6I/AAAAAAAAQ_4/9BdGLLdzKKwxN7p4uqE8rQzro6pluRK9ACLcBGAsYHQ/s0/image14.png"/&gt;&lt;/a&gt;&lt;/div&gt;  
  
  
  
&lt;p&gt;
Below are several composable examples from the library:
&lt;/p&gt;




&lt;div dir="ltr" align="left"&gt;
  &lt;center&gt;
    &lt;table&gt;
       &lt;colgroup&gt;
            &lt;col/&gt;
            &lt;col/&gt;
            &lt;col/&gt;
            &lt;col/&gt;
        &lt;/colgroup&gt;
        &lt;tbody&gt;
         
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh4.googleusercontent.com/w43qtaJV2QVPQrqbdCa1Hfnfg4rL_eGCD5wWKhCUJblfSzjUu38yVLP1zdLAHMrVO0X9XpF2H8e6h-pUi3zcMdO4YwEARwhheYhQoFA6eUmXpwCakofIciU1v0aVJsNtgRQmxm8SF_ADombUBRW9OKQQxNErqxE5wesM_VC7QLNYWr5J=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh5.googleusercontent.com/3eAVrwa0ExQSnUGw6Nt5iAgB0E616h5TqMhdt_RG6pxFxPtPPUDyhzL3sFAd_mkhU2IodQoiUTtLLF_Egt2EkU9D2fPPtRwYesOtwGhaQYVBK5MGjBQvrpl9pp8GsoMutFYm8063aIfUH5TOoqB9YAoL4ijdCf2nlXpu1mrmZsGral9x=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh4.googleusercontent.com/rSoun13uRlXq2fH3bD4oId_I_egAVGdI7i1bSvkGbeo9EJzTEo0nB2dOXvXXxVoYY5SS63QLqxe1Z3NtiHFSnfG6847iW4bmqABE35V5gE9QnjxkYgaOlMqtC3LsKez-ACs21859QwMRmGgVLDsfq9nJfGmRakf9nvQZjLeAqMdT0dqc=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh6.googleusercontent.com/snFCZZbbpw2ApjUcAC7X9nvbSqFlqRm5uZSlTwPX5Qg3G09CVOrzI5sy4SXXYZUVd43685gVwjUhRqKxXkB_W2YwwfIvs65IdEsMhmRXNzq0OrZB_slOO4TQG5XqZ-lwA4bUsYv_RBBlMix9yHem5TzTYCEezTXYX6CNkEbgkm-nf9wB=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Button(kotlin.Function0,androidx.compose.ui.Modifier,kotlin.Boolean,androidx.wear.compose.material.ButtonColors,androidx.compose.foundation.interaction.MutableInteractionSource,kotlin.Function1)"
                        &gt;
                          &lt;center&gt;Button&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#AppCard(kotlin.Function0,kotlin.Function0,kotlin.Function0,kotlin.Function0,kotlin.Function0,androidx.compose.ui.Modifier,kotlin.Function0,androidx.compose.ui.graphics.painter.Painter,androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color)"
                        &gt;
                          &lt;center&gt; Card&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Icon(androidx.compose.ui.graphics.vector.ImageVector,kotlin.String,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.Color)"
                        &gt;
                          &lt;center&gt;Icon&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Text(kotlin.String,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.Color,androidx.compose.ui.unit.TextUnit,androidx.compose.ui.text.font.FontStyle,androidx.compose.ui.text.font.FontWeight,androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.unit.TextUnit,androidx.compose.ui.text.style.TextDecoration,androidx.compose.ui.text.style.TextAlign,androidx.compose.ui.unit.TextUnit,androidx.compose.ui.text.style.TextOverflow,kotlin.Boolean,kotlin.Int,kotlin.Function1,androidx.compose.ui.text.TextStyle)"
                        &gt;
                          &lt;center&gt; Text&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
      
        &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;/center&gt;
&lt;/div&gt;







&lt;p&gt;
In addition, we've introduced many new composables that improve the Wear experience:
&lt;/p&gt;







&lt;div dir="ltr" align="left"&gt;
  &lt;center&gt;
    &lt;table&gt;
        &lt;colgroup&gt;
            &lt;col/&gt;
            &lt;col/&gt;
            &lt;col/&gt;
            &lt;col/&gt;
        &lt;/colgroup&gt;
        &lt;tbody&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh6.googleusercontent.com/7lTF8izglu5BhHMIEmYAP9dRGT4HJBfih9w81EL8tu4H9yM29InXbtKX1RSDXdOubJ6QOC7YiMbCBpnsbCcz1keeBmQFtuNtGF3v9TGKhT8UOIeTUh_KXDuQinFe_TBbxMKcTtoMFoT4iCuaVyIpnnqwpKNWUUk047e1xRXbiaBCEEMc=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh5.googleusercontent.com/g4o4HOnXaXkFQLRS9zg-I8oyG0yYcgT5xdnoAZiWyUolyKbtQ0PEAylknX2oDFBTqR9UW1vr7XbU4pMVc0tbdZ5__dgLbl1thn3odyTOtuXcCxoKdYlpoPRXw-sJ6L_UGMr43lAzX99bH2R-Djga6-mgS227wMjsYhBU6PqxHRVgoAiR=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh6.googleusercontent.com/n9HTxNxB_FrV5_0qWNxRq3m-zq7xPDldWyAsFQyJNhpX0ZX5UGSvYltGG25jLip_DwP5KTfY6IyAi59PjIbAnhT0M48-01JPBzMvHSAZiRw-KEHvn30QhhVVSquY42jNAYaFuAPTu32w-Vz8b0LivL0Yp5N_frzrxK6AKd4sQKF_dJmk=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh3.googleusercontent.com/zhNx7G__gq7TEEZ4yZgxt1_Ab6X-JQ00DxNp7jVRCJ_5_udDqKf0T9F7Df8z7gpg7S2Sac-d0th7V_fOi7m1V9oXpWjkCejwgNFyl2NB3Q7vpTX3zc2YjzB2ma0MocRgljKCeqc_T2kthwEiQj93omCDcF0kFlacZCWwm1g3b3r5gcTU=s0"
                            width="142"
                            height="143"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Chip(kotlin.Function0,androidx.wear.compose.material.ChipColors,androidx.compose.ui.Modifier,kotlin.Boolean,androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.graphics.Shape,androidx.compose.foundation.interaction.MutableInteractionSource,androidx.compose.ui.semantics.Role,kotlin.Function0)"
                        &gt;
                          &lt;center&gt;Chip&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#ToggleChip(kotlin.Boolean,kotlin.Function1,kotlin.Function0,androidx.compose.ui.Modifier,kotlin.Function0,kotlin.Function0,kotlin.Function0,androidx.wear.compose.material.ToggleChipColors,kotlin.Boolean,androidx.compose.foundation.interaction.MutableInteractionSource,androidx.compose.foundation.layout.PaddingValues,androidx.compose.ui.graphics.Shape)"
                        &gt;
                          &lt;center&gt; ToggleChip&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/foundation/package-summary#(androidx.wear.compose.foundation.CurvedRowScope).BasicCurvedText(kotlin.String,androidx.wear.compose.foundation.CurvedTextStyle,androidx.compose.ui.Modifier,kotlin.Boolean,androidx.wear.compose.foundation.ArcPaddingValues)"
                        &gt;
                          &lt;center&gt;BasicCurvedText &lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#TimeText(androidx.compose.ui.Modifier,androidx.wear.compose.material.TimeSource,androidx.compose.ui.text.TextStyle,androidx.compose.foundation.layout.PaddingValues,kotlin.Function0,kotlin.Function1,kotlin.Function0,kotlin.Function1,kotlin.Function0,kotlin.Function1)"
                        &gt;
                          &lt;center&gt; TimeText &lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;/center&gt;
&lt;/div&gt;







&lt;p&gt;
We also offer a wear optimized composable for lists, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#ScalingLazyColumn(androidx.compose.ui.Modifier,androidx.wear.compose.material.ScalingParams,kotlin.Boolean,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.ui.Alignment.Horizontal,androidx.compose.foundation.layout.PaddingValues,androidx.wear.compose.material.ScalingLazyListState,kotlin.Function1)"&gt;ScalingLazyColumn&lt;/a&gt;&lt;/code&gt;, which extends &lt;code&gt;LazyColumn&lt;/code&gt; and adds scaling and transparency changes to better support round surfaces. You can see in the app below, the content shrinks and fades at the top and bottom of the screen to help readability:

  
 &lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-dDGJKwQg9t8/YWWx-Zf3jkI/AAAAAAAARBk/nvCREAWxXdUBeKaQAwa-OZqONv8sxJy_wCLcBGAsYHQ/s0/image3.gif" imageanchor="1" &gt;&lt;img style="width:50%" alt="GIF showing watch face scrolling though calendar" id=imgFull border="0" src="https://1.bp.blogspot.com/-dDGJKwQg9t8/YWWx-Zf3jkI/AAAAAAAARBk/nvCREAWxXdUBeKaQAwa-OZqONv8sxJy_wCLcBGAsYHQ/s0/image3.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt; 
  

  
  
&lt;p&gt;
If you look at the code, you can see it's the same as &lt;code&gt;LazyColumn&lt;/code&gt;, just with a different name.
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;val scalingLazyListState: ScalingLazyListState = 
    rememberScalingLazyListState()

ScalingLazyColumn(
    modifier = Modifier.fillMaxSize(),
    verticalArrangement = Arrangement.spacedBy(6.dp),
    state = scalingLazyListState,
) {
    items(messageList.size) { message -&gt;
        Card(/*...*/) { /*...*/ }
    }

    item {
        Card(/*...*/) { /*...*/ }
    }
}&lt;/pre&gt;

&lt;br&gt;

&lt;h1&gt;Swipe to Dismiss&lt;/h1&gt;


&lt;p&gt;
Wear has its own version of &lt;code&gt;Box&lt;/code&gt;, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#SwipeToDismissBox(androidx.wear.compose.material.SwipeToDismissBoxState,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color,kotlin.Any,kotlin.Any,kotlin.Boolean,kotlin.Function2)"&gt;SwipeToDismissBox&lt;/a&gt;&lt;/code&gt;, which adds support for the swipe-to-dismiss gesture (similar to the back button/gesture on mobile) out of the box.

&lt;p&gt;
Here's a simple example of the code:
&lt;/p&gt;



&lt;pre class="prettyprint"&gt;// Requires state (different from Box).
val state = rememberSwipeToDismissBoxState()

SwipeToDismissBox(
    modifier = Modifier.fillMaxSize(),
    state = state
) { swipeBackgroundScreen -&gt;

    // Can render a different composable in the background during swipe.
    if (swipeBackgroundScreen) {
        /* ... */
        Text(text = "Swiping Back Content")
    } else {
        /* ... */
        Text( text = "Main Content")
    }
}&lt;/pre&gt;
&lt;br&gt;

&lt;p&gt;
Here's a more complex example of the behavior:
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-8qykHlZjdos/YWWyiy_G1pI/AAAAAAAARBs/mc539d3UAjcyicDk4fsBEUI0ziPvj8AwACLcBGAsYHQ/s0/image8.gif" imageanchor="1" &gt;&lt;img style="width:50%" alt="GIF of watch face showing calendar agenda" id=imgFull border="0" src="https://1.bp.blogspot.com/-8qykHlZjdos/YWWyiy_G1pI/AAAAAAAARBs/mc539d3UAjcyicDk4fsBEUI0ziPvj8AwACLcBGAsYHQ/s0/image8.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;





&lt;br&gt;
&lt;h1&gt;Navigation&lt;/h1&gt;


&lt;p&gt;
Finally, we also offer a Navigation composable, &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/navigation/package-summary#SwipeDismissableNavHost(androidx.navigation.NavHostController,kotlin.String,androidx.compose.ui.Modifier,kotlin.String,kotlin.Function1)"&gt;SwipeDismissableNavHost&lt;/a&gt;&lt;/code&gt;, which works just like &lt;code&gt;NavHost&lt;/code&gt; on mobile but also supports the swipe-to-dismiss gesture out of the box (actually uses &lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#SwipeToDismissBox(androidx.wear.compose.material.SwipeToDismissBoxState,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.Color,androidx.compose.ui.graphics.Color,kotlin.Any,kotlin.Any,kotlin.Boolean,kotlin.Function2)"&gt;SwipeToDismissBox&lt;/a&gt;&lt;/code&gt; under the hood).

&lt;p&gt;
Here's an example (&lt;a href="https://github.com/android/wear-os-samples/blob/7526595d169462c2519034bfbeb760ac265deba5/ComposeAdvanced/app/src/main/java/com/example/android/wearable/composeadvanced/presentation/MainActivity.kt#L119"&gt;code&lt;/a&gt;):
&lt;/p&gt;

&lt;center&gt; &lt;a href="https://1.bp.blogspot.com/-D5zwLY-YA2U/YWcvBkUcUlI/AAAAAAAARCM/fSIFXAnetd85XH8OiDHmJztSqDdGfNQdACLcBGAsYHQ/s0/unnamed%2B%25281%2529.gif" imageanchor="1" &gt;&lt;img style="width:50%" alt="GIF showing watch face alarm" id=imgFull border="0" src="https://1.bp.blogspot.com/-D5zwLY-YA2U/YWcvBkUcUlI/AAAAAAAARCM/fSIFXAnetd85XH8OiDHmJztSqDdGfNQdACLcBGAsYHQ/s0/unnamed%2B%25281%2529.gif" data-original-width="1058" data-original-height="714" /&gt;&lt;/a&gt; &lt;/center&gt;



&lt;br&gt;
&lt;h1&gt;Scaffold&lt;/h1&gt;


&lt;p&gt;
&lt;code&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Scaffold(androidx.compose.ui.Modifier,kotlin.Function0,kotlin.Function0,kotlin.Function0,kotlin.Function0)"&gt;Scaffold&lt;/a&gt;&lt;/code&gt; provides a layout structure to help you arrange screens in common patterns, just like mobile, but instead of an App Bar, FAB, or Drawer, it supports Wear specific layouts with  top-level components like Time, Vignette, and the scroll/position indicator.

  
  
  
  
  &lt;div dir="ltr" align="left"&gt;
    &lt;center&gt;
    &lt;table&gt;
        &lt;colgroup&gt;
            &lt;col/&gt;
            &lt;col/&gt;
            &lt;col/&gt;
        &lt;/colgroup&gt;
        &lt;tbody&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh6.googleusercontent.com/ELuQbGCVFUz9NtAwzIdNIS51X5NGeKFgdBIeNWGolvHn4IQVbQ9CF6JRo61bjfZwuT8LUF_A7chXUjQbdGUm6Q0BQGZkI1re3trEFkNBOmUsyq8iD1fkXs1HAtyI0IcbkTP-4wd7edV9uZUYHklz2utwU8ooE4MjSsn6YXWNUUzKdxkv=s0"
                            width="194"
                            height="188"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh4.googleusercontent.com/YqU1Tqc80leKM7sEF9XnzQBXiHciPrdxfVpTpd1RF8u4wHGCU6udAKgjQXVZttzRPfBP63g2f4nJLBvV7aOYGlgoM2QDvrWEZA1ZVbaiqxkteyG2wGVS122ywYJpU7uswQ5Rtp1zfwUY5zAqKLumXwRB_V7kcAFCpk6ONbnxpiy4lvRa=s0"
                            width="194"
                            height="183"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;img
                            src="https://lh6.googleusercontent.com/2MffAZrBg42rTO8zawRgyzLZhiMMsxqRVnmlOJIvBDYOXET9tL6CkYrHfh3ezG2RmYQc4tcNyrlquGn9YtHu5HnmiqJbCOY76-TzDvWgMbKwFL6-uK6RhRjGeOYqe_fpJQnS3pnC2NuouHVidy_tfz0yHtVLFPVmgr2blWxuk8H3_SU9=s0"
                            width="260"
                            height="178"
                        /&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#TimeText(androidx.compose.ui.Modifier,androidx.wear.compose.material.TimeSource,androidx.compose.ui.text.TextStyle,androidx.compose.foundation.layout.PaddingValues,kotlin.Function0,kotlin.Function1,kotlin.Function0,kotlin.Function1,kotlin.Function0,kotlin.Function1)"
                        &gt;
                          &lt;center&gt; TimeText &lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#Vignette(androidx.wear.compose.material.VignettePosition,androidx.compose.ui.Modifier)"
                        &gt;
                         &lt;center&gt;   Vignette &lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
                &lt;td&gt;
                    &lt;p dir="ltr"&gt;
                        &lt;a
                            href="https://developer.android.com/reference/kotlin/androidx/wear/compose/material/package-summary#PositionIndicator(androidx.compose.foundation.ScrollState,androidx.compose.ui.Modifier,kotlin.Boolean)"
                        &gt;
                          &lt;center&gt;  PositionIndicator&lt;/center&gt;
                        &lt;/a&gt;
                    &lt;/p&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
      &lt;/center&gt;
&lt;/div&gt;
  
  
  
  
  
  
  
  
  
&lt;p&gt;
&lt;a href="https://github.com/android/wear-os-samples/blob/7526595d169462c2519034bfbeb760ac265deba5/ComposeAdvanced/app/src/main/java/com/example/android/wearable/composeadvanced/presentation/MainActivity.kt#L92"&gt;The code&lt;/a&gt; is very similar to what you would write on mobile.
&lt;/p&gt;

&lt;br&gt;

&lt;h1&gt;Get Started&lt;/h1&gt;


&lt;p&gt;
We're excited to bring Jetpack Compose to Wear OS and make watch development faster and easier. To dive right in and create an app, check out our &lt;a href="http://developer.android.com/training/wearables/compose-setup"&gt;quick start guide&lt;/a&gt;. To see working examples (both simple and complex), have a look at &lt;a href="https://github.com/android/wear-os-samples#samples"&gt;our sample repo&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The Developer Preview is your opportunity to influence the APIs, so please share your &lt;a href="https://issuetracker.google.com/issues/new?component=1077552&amp;template=1598429&amp;pli=1"&gt;feedback here&lt;/a&gt; or &lt;a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up"&gt;join the Slack&lt;/a&gt; &lt;strong&gt;#compose-wear&lt;/strong&gt; channel and let us know there!
&lt;/p&gt;

  
 &lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=gYsJxta95NM:_FLXKRpckoE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/blogspot/hsDu?a=gYsJxta95NM:_FLXKRpckoE:-BTjWOF_DHI"&gt;&lt;img src="http://feeds.feedburner.com/~ff/blogspot/hsDu?i=gYsJxta95NM:_FLXKRpckoE:-BTjWOF_DHI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6639355659687876198" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/6755709643044947179/posts/default/6639355659687876198" /><link rel="alternate" type="text/html" href="http://android-developers.googleblog.com/2021/10/compose-for-wear-os-now-in-developer.html" title="Compose for Wear OS now in Developer Preview!" /><author><name>Android Developers</name><uri>http://www.blogger.com/profile/08588467489110681140</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="16" height="16" src="https://img1.blogblog.com/img/b16-rounded.gif" /></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-RkL3Yokn3XE/YWWmbuX8E7I/AAAAAAAAQ_o/CEmNJ5_mfq0kScxkFGoMpf1BlU5-uBHjACLcBGAsYHQ/s72-c/Android-compose-for-wear-os-now-in-dev-review-header-dark.png" height="72" width="72" /></entry>
</feed>
